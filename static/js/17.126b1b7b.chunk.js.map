{"version":3,"sources":["components/Column/index.tsx","components/Row/index.tsx","state/multicall/hooks.ts","components/archer/CoinLogo.ts","components/CurrencyLogo/index.tsx","hooks/Tokens.ts","state/wallet/hooks.ts","components/QuestionHelper/index.tsx","state/lists/hooks.ts","state/user/hooks.tsx","components/Shared/Common.tsx","contexts/Localisation/translationsContext.ts","hooks/useI18n.ts","utils/wrappedCurrency.ts","components/Logo/index.tsx","components/Card/index.tsx","data/Reserves.ts","utils/isZero.ts","state/transactions/hooks.tsx","components/DoubleLogo/index.tsx","components/swap/styleds.tsx","utils/prices.ts","components/Modal/index.tsx","utils/currencyId.ts","data/TotalSupply.ts","components/Loader/index.tsx","hooks/useLast.ts","components/Popover/index.tsx","components/Tooltip/index.tsx","components/PositionCard/index.tsx","views/AppBody.tsx","hooks/useHttpLocations.ts","hooks/useENSContentHash.ts","components/ListLogo/index.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/styleds.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/filtering.ts","components/SearchModal/SortButton.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","hooks/useOnClickOutside.tsx","components/SearchModal/ListSelect.tsx","hooks/useToggle.ts","utils/listVersionLabel.ts","components/SearchModal/CurrencySearchModal.tsx","hooks/useENS.ts","hooks/useENSName.ts","hooks/useENSAddress.ts","hooks/Trades.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","components/NavigationTabs/index.tsx","components/ConnectWalletButton/index.tsx","views/Pool/styleds.tsx","components/TransactionConfirmationModal/helpers.tsx","components/TransactionConfirmationModal/ConfirmationPendingContent.tsx","components/TransactionConfirmationModal/TransactionSubmittedContent.tsx","components/TransactionConfirmationModal/TransactionConfirmationModal.tsx","components/TransactionConfirmationModal/ConfirmationModalContent.tsx","components/TransactionConfirmationModal/TransactionErrorContent.tsx","components/TransactionConfirmationModal/index.tsx","components/NumericalInput/index.tsx","components/CurrencyInputPanel/index.tsx","data/Allowances.ts","hooks/useApproveCallback.ts","components/Slider/index.tsx","state/burn/hooks.ts","views/RemoveLiquidity/index.tsx","utils/useDebouncedChangeHandler.ts"],"names":["Column","styled","div","ColumnCenter","AutoColumn","gap","justify","Row","Box","align","padding","border","borderRadius","RowBetween","RowFlat","AutoRow","RowFixed","isMethodArg","x","indexOf","isValidMethodArgs","undefined","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","data","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","options","chainId","useActiveWeb3React","callResults","useSelector","state","multicall","dispatch","useDispatch","serializedCallKeys","useMemo","JSON","stringify","filter","c","Boolean","map","toCallKey","sort","useEffect","callKeys","parse","length","key","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","error","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","console","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","address","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","addresses","useSingleCallResult","CoinLogo","Logo","size","getTokenLogoURLForMetamask","symbol","StyledCoreLogo","img","StyledLogo","CurrencyLogo","currency","style","srcs","WrappedTokenInfo","tokenInfo","logoURI","ETHER","src","alt","useAllTokens","userAddedTokens","useUserAddedTokens","allTokens","useSelectedTokenList","reduce","tokenMap","token","useIsUserAddedToken","find","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","parseBytes32String","useToken","tokenAddress","tokens","isAddress","tokenContract","useTokenContract","tokenContractBytes32","useBytes32TokenContract","tokenName","tokenNameBytes32","symbolBytes32","decimals","Token","useCurrency","currencyId","isCORE","toUpperCase","useTokenBalancesWithLoadingIndicator","validatedTokens","t","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","memo","i","value","amount","JSBI","BigInt","toString","TokenAmount","useTokenBalances","useTokenBalance","account","tokenBalances","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useMulticallContract","a","CurrencyAmount","ether","useETHBalances","useCurrencyBalance","useAllTokenBalances","Object","values","QuestionWrapper","theme","colors","invertedContrast","textSubtle","QuestionHelper","text","useState","show","setShow","open","useCallback","close","marginLeft","onClick","onMouseEnter","onMouseLeave","tags","name","this","EMPTY_LIST","ChainId","MAINNET","BSCTESTNET","listCache","WeakMap","useTokenList","url","lists","byUrl","current","list","get","tagId","id","Error","set","listToTokenMap","useSelectedListUrl","selectedListUrl","useSelectedListInfo","selectedUrl","listsByUrl","pending","pendingUpdate","loadingRequestId","serializeToken","deserializeToken","serializedToken","useIsExpertMode","user","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useUserSlippageTolerance","userSlippageTolerance","slippageTolerance","updateUserSlippageTolerance","useUserDeadline","userDeadline","deadline","updateUserDeadline","useAddUserToken","addSerializedToken","useRemoveUserAddedToken","removeSerializedToken","serializedTokensMap","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","getAddress","useTrackedTokenPairs","pinnedPairs","PINNED_PAIRS","generatedPairs","flatMap","keys","BASES_TO_TRACK_LIQUIDITY_FOR","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","sorted","sortsBefore","LinkStyledButton","button","disabled","primary","StyledInternalLink","Link","StyledLink","ExternalLink","target","href","rel","rest","handleClick","event","ctrlKey","metaKey","preventDefault","rotate","keyframes","Spinner","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","useI18n","useContext","translationId","fallback","foundTranslation","translation","stringId","includesVariable","includes","interpolatedText","isEmpty","forEach","dataKey","templateKey","RegExp","replace","wrappedCurrency","WETH","wrappedCurrencyAmount","currencyAmount","raw","unwrappedToken","equals","BAD_SRCS","refresh","s","onError","Card","LightCard","borderColor","background","GreyCard","tertiary","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","isZero","hexNumberString","useTransactionAdder","response","summary","approval","hash","addTransaction","from","useAllTransactions","transactions","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","spender","allTransactions","receipt","Wrapper","sizeraw","margin","HigherLogo","CoveredLogo","DoubleCurrencyLogo","currency0","currency1","ArrowWrapper","clickable","css","SectionBreak","BottomGrouping","ErrorText","Text","severity","failure","binance","StyledBalanceMaxMini","Dots","span","SwapCallbackErrorInner","transparentize","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","BASE_FEE","Percent","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","trade","realizedLPFee","route","currentFee","multiply","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","computeSlippageAdjustedAmounts","allowedSlippage","pct","basisPointsToPercent","Field","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","attrs","card","mediaQueries","lg","sm","Modal","onDismiss","initialFocusRef","children","fadeTransition","useTransition","config","duration","opacity","enter","leave","item","props","aria-label","isMobile","tabIndex","useTotalSupply","totalSupply","StyledSVG","svg","stroke","Loader","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","useLast","filterFn","last","setLast","prev","isDefined","useLastTruthy","PopoverContainer","ReferenceElement","Arrow","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","offset","element","styles","update","attributes","updateCallback","useInterval","ref","popper","className","arrow","TooltipContainer","Tooltip","MouseoverTooltip","FixedHeightRow","HoverCard","darken","MinimalPositionCard","showUnwrapped","showMore","setShowMore","userPoolBalance","liquidityToken","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","textTransform","fontWeight","fontSize","color","ml","FullPositionCard","useTranslation","poolTokenPercentage","cursor","toFixed","marginTop","as","to","width","BodyWrapper","AppBody","useHttpLocations","uri","ens","parseENSAddress","resolvedContentHash","ensName","ensNodeArgument","namehash","registrarContract","useENSRegistrarContract","resolverAddressResult","resolverAddress","resolverContract","useENSResolverContract","contenthash","useENSContentHash","uriToHttp","contenthashToUri","StyledListLogo","ListLogo","BaseWrapper","disable","CommonBases","onSelect","selectedCurrency","TranslateString","marginRight","SUGGESTED_BASES","selected","FadedSpan","PaddedColumn","MenuItem","SearchInput","input","textDisabled","Separator","SeparatorDark","currencyKey","StyledBalanceText","Tag","Balance","balance","title","toExact","TagContainer","TokenTags","tag","description","slice","join","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","isTokenOnList","customAdded","removeToken","addToken","stopPropagation","justifySelf","CurrencyList","height","onCurrencySelect","otherCurrency","fixedListRef","showETH","itemData","Currency","index","itemKey","itemCount","itemSize","filterTokens","search","searchingAddress","lowerSearchParts","toLowerCase","split","matchesSearch","sParts","sp","startsWith","endsWith","FilterWrapper","SortButton","toggleSortOrder","ascending","useTokenComparator","comparator","balanceA","balanceB","balanceComp","greaterThan","equalTo","getTokenComparator","CurrencySearch","otherSelectedCurrency","showCommonBases","onChangeList","fixedList","ThemeContext","useRef","searchQuery","setSearchQuery","invertSearchOrder","setInvertSearchOrder","isAddressSearch","searchToken","trim","tokenComparator","audioPlay","filteredTokens","filteredSortedTokens","symbolMatch","handleCurrencySelect","audio","document","getElementById","play","inputRef","handleInput","checksummedInput","scrollTo","handleEnter","e","flex","type","placeholder","onChange","onKeyDown","iso","disableWidth","useOnClickOutside","node","handler","handlerRef","handleClickOutside","contains","addEventListener","removeEventListener","UnpaddedLinkStyledButton","StyledMenu","StyledListUrlText","ListOrigin","listUrl","host","lowerListUrl","URL","listUrlRowHTMLId","ListRow","onBack","initialState","setState","toggle","useToggle","version","selectThisList","selectList","handleAcceptListUpdate","acceptListUpdate","handleRemoveList","window","prompt","removeList","bold","overflow","textOverflow","display","variant","major","minor","patch","minWidth","ListContainer","ListSelect","listUrlInput","setListUrlInput","adding","addError","setAddError","fetchList","useFetchListCallback","handleAddList","then","catch","message","validUrl","handleEnterKey","sortedLists","u1","u2","l1","l2","maxWidth","textAlign","CurrencySearchModal","listView","setListView","lastOpen","handleClickChangeList","handleClickBack","noListSelected","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","substr","changed","ENSName","useENSName","lookup","debouncedName","addr","useENSAddress","useAllCommonPairs","bases","BASES_TO_CHECK_TRADES_AGAINST","basePairs","otherBase","t0","t1","allPairCombinations","customBases","CUSTOM_BASES","customBasesA","customBasesB","allPairs","curr","useSwapState","swap","useSwapActionHandlers","onCurrencySelection","field","selectCurrency","onSwitchTokens","switchCurrencies","onUserInput","typedValue","typeInput","onChangeRecipient","recipient","setRecipient","tryParseAmount","typedValueParsed","parseUnits","info","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","useDerivedSwapInfo","inputError","independentField","inputCurrencyId","outputCurrencyId","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","useTradeExactIn","bestTradeExactOut","currencyIn","currencyAmountOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseFloat","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","replaceSwapState","Tabs","ActiveText","StyledArrowLeft","ArrowLeft","FindPoolTabs","AddRemoveTabs","UnlockButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","ClickableText","Section","ConfirmedIcon","BottomSection","StyledContentHeader","Heading","ContentHeader","CustomLightSpinner","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","getSnowtraceLink","mt","TransactionConfirmationModal","attemptingTxn","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","StyledInput","inputRegex","Input","React","nextUserInput","escapeRegExp","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","PercentInputRow","PercentButton","role","CurrencySelect","LabelRow","Aligner","InputPanel","hideInput","Container","shadows","inset","Action","StyleButton","isTooltipDisplayed","contrast","CurrencyInputPanel","onMax","showMaxButton","maxAmount","label","disableCurrencySelect","hideBalance","modalOpen","setModalOpen","selectedCurrencyBalance","translatedLabel","handleDismissSearch","tokenKey","setIsTooltipDisplayed","percentAmount","25","50","75","100","CopyIcon","MetamaskIcon","val","scale","small","navigator","clipboard","writeText","setTimeout","registerToken","percent","useTokenAllowance","owner","allowance","ApprovalState","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","approvalState","APPROVED","PENDING","NOT_APPROVED","UNKNOWN","approve","useExact","estimateGas","MaxUint256","estimatedGas","gasLimit","calculateGasMargin","useApproveCallbackFromTrade","ROUTER_ADDRESS","StyledRangeInput","thumbColor","primaryDark","Slider","min","step","max","customStyle","changeCallback","parseInt","aria-labelledby","useBurnState","burn","OutlineCard","Body","RemoveLiquidity","history","match","params","currencyIdA","currencyIdB","library","userLiquidity","CURRENCY_A","CURRENCY_B","LIQUIDITY","liquidityValueA","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","liquidityValue","parsedAmounts","useDerivedBurnInfo","_onUserInput","useBurnActionHandlers","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","setAttemptingTxn","txHash","setTxHash","formattedAmounts","atMaxAmount","pairContract","usePairContract","signatureData","setSignatureData","approveCallback","liquidityAmount","nonces","nonce","deadlineForSignature","Math","ceil","now","EIP712Domain","domain","verifyingContract","Permit","toHexString","types","primaryType","send","splitSignature","signature","v","r","code","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","onRemove","currencyAmountA","currencyAmountB","router","getRouterContract","calculateSlippageAmount","amountsMin","currencyBIsETH","oneCurrencyIsETH","deadlineFromNow","methodNames","args","Promise","all","safeGasEstimates","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","BigNumber","isBigNumber","modalHeader","fontStyle","modalBottom","priceOf","liquidityPercentChangeCallback","oneCurrencyIsWETH","handleSelectCurrencyA","push","handleSelectCurrencyB","handleDismissConfirmation","debouncedMs","inner","setInner","timer","onChangeInner","newValue","clearTimeout","useDebouncedChangeHandler","Number","innerLiquidityPercentage","setInnerLiquidityPercentage","justifyContent","mb","paddingBottom","position","mr","ConnectWalletButton"],"mappings":"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","file":"static/js/17.126b1b7b.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align || 'center'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      // @ts-ignore\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n        const data = result?.data && result?.data !== '0x' ? result.data : null\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId],\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.error('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            }\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\r\n  }, [fragment, contract, results, latestBlockNumber])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\r\n  }, [fragment, results, contractInterface, latestBlockNumber])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\r\n  }, [result, contract, fragment, latestBlockNumber])\r\n}\r\n","import styled from 'styled-components'\r\nimport Logo from '../Logo'\r\n\r\nconst CoinLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default CoinLogo\r\n","import { Currency, ETHER } from 'archerswap-sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport Logo from '../Logo'\r\nimport CoinLogo from '../archer/CoinLogo'\r\n\r\nexport const getTokenLogoURLForMetamask = (symbol: string) => {\r\n  return `https://archerswap.finance/images/coins/${symbol}.png`\r\n}\r\n\r\nconst StyledCoreLogo = styled.img<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\r\n  border-radius: 24px;\r\n`\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const srcs: string[] = [currency instanceof WrappedTokenInfo ? currency.tokenInfo.logoURI : undefined]\r\n  if (currency === ETHER) {\r\n    return <StyledCoreLogo src=\"/images/coins/core.png\" size={size} style={style} />\r\n  }\r\n\r\n  return (currency as any)?.symbol ? (\r\n    <CoinLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n  ) : (\r\n    <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n  )\r\n}\r\n","import { parseBytes32String } from '@ethersproject/strings'\r\nimport { Currency, ETHER, Token, currencyEquals } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { useSelectedTokenList } from '../state/lists/hooks'\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useUserAddedTokens } from '../state/user/hooks'\r\nimport { isAddress } from '../utils'\r\n\r\nimport { useActiveWeb3React } from './index'\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React()\r\n  const userAddedTokens = useUserAddedTokens()\r\n  const allTokens = useSelectedTokenList()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {}\r\n    return (\r\n      userAddedTokens\r\n        // reduce into all ALL_TOKENS filtered by the current chain\r\n        .reduce<{ [address: string]: Token }>(\r\n          (tokenMap, token) => {\r\n            tokenMap[token.address] = token\r\n            return tokenMap\r\n          },\r\n          // must make a copy because reduce modifies the map, and we do not\r\n          // want to make a copy in every iteration\r\n          { ...allTokens[chainId] },\r\n        )\r\n    )\r\n  }, [chainId, userAddedTokens, allTokens])\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency): boolean {\r\n  const userAddedTokens = useUserAddedTokens()\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : bytes32 && BYTES32_REGEX.test(bytes32)\r\n    ? parseBytes32String(bytes32)\r\n    : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  const address = isAddress(tokenAddress)\r\n\r\n  const tokenContract = useTokenContract(address || undefined, false)\r\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\r\n  const token: Token | undefined = address ? tokens[address] : undefined\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD,\r\n  )\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\r\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\r\n\r\n  return useMemo(() => {\r\n    if (token) return token\r\n    if (!chainId || !address) return undefined\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ])\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isCORE = currencyId?.toUpperCase() === 'CORE'\r\n  const token = useToken(isCORE ? undefined : currencyId)\r\n  return isCORE ? ETHER : token\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport ERC20_INTERFACE from '../../constants/abis/erc20'\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport { isAddress } from '../../utils'\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\r\n\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent ETH balances.\r\n */\r\nexport function useETHBalances(\r\n  uncheckedAddresses?: (string | undefined)[],\r\n): {\r\n  [address: string]: CurrencyAmount | undefined\r\n} {\r\n  const multicallContract = useMulticallContract()\r\n\r\n  const addresses: string[] = useMemo(\r\n    () =>\r\n      uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a): a is string => a !== false)\r\n            .sort()\r\n        : [],\r\n    [uncheckedAddresses],\r\n  )\r\n\r\n  const results = useSingleContractMultipleData(\r\n    multicallContract,\r\n    'getEthBalance',\r\n    addresses.map((address) => [address]),\r\n  )\r\n\r\n  return useMemo(\r\n    () =>\r\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\r\n        const value = results?.[i]?.result?.[0]\r\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\r\n        return memo\r\n      }, {}),\r\n    [addresses, results],\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\r\n  const validatedTokens: Token[] = useMemo(\r\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\r\n    [tokens],\r\n  )\r\n\r\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\r\n\r\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\r\n\r\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\r\n\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        address && validatedTokens.length > 0\r\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\r\n              const value = balances?.[i]?.result?.[0]\r\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n              if (amount) {\r\n                memo[token.address] = new TokenAmount(token, amount)\r\n              }\r\n              return memo\r\n            }, {})\r\n          : {},\r\n      [address, validatedTokens, balances],\r\n    ),\r\n    anyLoading,\r\n  ]\r\n}\r\n\r\nexport function useTokenBalances(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\r\n}\r\n\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\r\n  const tokenBalances = useTokenBalances(account, [token])\r\n  if (!token) return undefined\r\n  return tokenBalances[token.address]\r\n}\r\n\r\nexport function useCurrencyBalances(\r\n  account?: string,\r\n  currencies?: (Currency | undefined)[],\r\n): (CurrencyAmount | undefined)[] {\r\n  const tokens = useMemo(() => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [], [\r\n    currencies,\r\n  ])\r\n\r\n  const tokenBalances = useTokenBalances(account, tokens)\r\n  const containsETH: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\r\n  const ethBalance = useETHBalances(containsETH ? [account] : [])\r\n\r\n  return useMemo(\r\n    () =>\r\n      currencies?.map((currency) => {\r\n        if (!account || !currency) return undefined\r\n        if (currency instanceof Token) return tokenBalances[currency.address]\r\n        if (currency === ETHER) return ethBalance[account]\r\n        return undefined\r\n      }) ?? [],\r\n    [account, currencies, ethBalance, tokenBalances],\r\n  )\r\n}\r\n\r\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  return useCurrencyBalances(account, [currency])[0]\r\n}\r\n\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  const { account } = useActiveWeb3React()\r\n  const allTokens = useAllTokens()\r\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\r\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\r\n  return balances ?? {}\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\n// import { HelpCircle as Question } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text }: { text: string }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          {/* <Question size={16} /> */}\r\n          <img src=\"/images/question.svg\" alt=\"help\" />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import { ChainId, Token } from 'archerswap-sdk'\r\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../index'\r\n\r\ntype TagDetails = Tags[keyof Tags]\r\nexport interface TagInfo extends TagDetails {\r\n  id: string\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n  public readonly tokenInfo: TokenInfo\r\n\r\n  public readonly tags: TagInfo[]\r\n\r\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\r\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n    this.tokenInfo = tokenInfo\r\n    this.tags = tags\r\n  }\r\n\r\n  public get logoURI(): string | undefined {\r\n    return this.tokenInfo.logoURI\r\n  }\r\n}\r\n\r\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\r\n\r\n/**\r\n * An empty result, useful as a default.\r\n */\r\nconst EMPTY_LIST: TokenAddressMap = {\r\n  [ChainId.MAINNET]: {},\r\n  [ChainId.BSCTESTNET]: {},\r\n}\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n  const result = listCache?.get(list)\r\n  if (result) return result\r\n\r\n  const map = list.tokens.reduce<TokenAddressMap>(\r\n    (tokenMap, tokenInfo) => {\r\n      const tags: TagInfo[] =\r\n        tokenInfo.tags\r\n          ?.map((tagId) => {\r\n            if (!list.tags?.[tagId]) return undefined\r\n            return { ...list.tags[tagId], id: tagId }\r\n          })\r\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\r\n      const token = new WrappedTokenInfo(tokenInfo, tags)\r\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\r\n      return {\r\n        ...tokenMap,\r\n        [token.chainId]: {\r\n          ...tokenMap[token.chainId],\r\n          [token.address]: token,\r\n        },\r\n      }\r\n    },\r\n    { ...EMPTY_LIST },\r\n  )\r\n  listCache?.set(list, map)\r\n  return map\r\n}\r\n\r\nexport function useTokenList(url: string | undefined): TokenAddressMap {\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  return useMemo(() => {\r\n    if (!url) return EMPTY_LIST\r\n    const current = lists[url]?.current\r\n    if (!current) return EMPTY_LIST\r\n    try {\r\n      return listToTokenMap(current)\r\n    } catch (error) {\r\n      console.error('Could not show token list due to error', error)\r\n      return EMPTY_LIST\r\n    }\r\n  }, [lists, url])\r\n}\r\n\r\nexport function useSelectedListUrl(): string | undefined {\r\n  return useSelector<AppState, AppState['lists']['selectedListUrl']>((state) => state.lists.selectedListUrl)\r\n}\r\n\r\nexport function useSelectedTokenList(): TokenAddressMap {\r\n  return useTokenList(useSelectedListUrl())\r\n}\r\n\r\nexport function useSelectedListInfo(): { current: TokenList | null; pending: TokenList | null; loading: boolean } {\r\n  const selectedUrl = useSelectedListUrl()\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const list = selectedUrl ? listsByUrl[selectedUrl] : undefined\r\n  return {\r\n    current: list?.current ?? null,\r\n    pending: list?.pendingUpdate ?? null,\r\n    loading: list?.loadingRequestId !== null,\r\n  }\r\n}\r\n\r\n// returns all downloaded current lists\r\nexport function useAllLists(): TokenList[] {\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n\r\n  return useMemo(\r\n    () =>\r\n      Object.keys(lists)\r\n        .map((url) => lists[url].current)\r\n        .filter((l): l is TokenList => Boolean(l)),\r\n    [lists],\r\n  )\r\n}\r\n","import { ChainId, Pair, Token } from 'archerswap-sdk'\r\nimport flatMap from 'lodash.flatmap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserDarkMode,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  muteAudio,\r\n  unmuteAudio,\r\n} from './actions'\r\nimport { setThemeCache } from '../../utils/theme'\r\n\r\nfunction serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nfunction deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name,\r\n  )\r\n}\r\n\r\nexport function useIsDarkMode(): boolean {\r\n  const { userDarkMode, matchesDarkMode } = useSelector<\r\n    AppState,\r\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\r\n  >(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\r\n      userDarkMode,\r\n      matchesDarkMode,\r\n    }),\r\n    shallowEqual,\r\n  )\r\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\r\n}\r\n\r\nexport function useDarkModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { userDarkMode } = useSelector<AppState, { userDarkMode: boolean | null }>(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { userDarkMode } }) => ({\r\n      userDarkMode,\r\n    }),\r\n    shallowEqual,\r\n  )\r\n  const darkMode = useIsDarkMode()\r\n\r\n  const toggleSetDarkMode = useCallback(() => {\r\n    setThemeCache(!userDarkMode)\r\n    dispatch(updateUserDarkMode({ userDarkMode: !userDarkMode }))\r\n  }, [userDarkMode, dispatch])\r\n\r\n  return [darkMode, toggleSetDarkMode]\r\n}\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippageTolerance: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippageTolerance }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserDeadline(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Archerswap LPs', 'Archer-LP')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId],\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\r\n    generatedPairs,\r\n    pinnedPairs,\r\n    userPairs,\r\n  ])\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n","import React, { HTMLProps, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\n// A button that triggers some onClick result, but looks like a link.\r\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\r\n  border: none;\r\n  text-decoration: none;\r\n  background: none;\r\n\r\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\r\n  color: ${({ theme, disabled }) => (disabled ? theme.colors.textSubtle : theme.colors.primary)};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n// An internal link from the react-router-dom library that is correctly styled\r\nexport const StyledInternalLink = styled(Link)`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n/**\r\n * Outbound link that handles firing google analytics events\r\n */\r\nexport function ExternalLink({\r\n  target = '_blank',\r\n  href,\r\n  rel = 'noopener noreferrer',\r\n  ...rest\r\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n      if (!(target === '_blank' || event.ctrlKey || event.metaKey)) {\r\n        event.preventDefault()\r\n      }\r\n    },\r\n    [target],\r\n  )\r\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\r\n}\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nexport const Spinner = styled.img`\r\n  animation: 2s ${rotate} linear infinite;\r\n  width: 16px;\r\n  height: 16px;\r\n`\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import { useContext } from 'react'\r\nimport { isEmpty } from 'lodash'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\ninterface ContextData {\r\n  [key: string]: number | string\r\n}\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\r\n    if (translations.length === 0) {\r\n      return fallback\r\n    }\r\n\r\n    const foundTranslation = translations.find((translation) => {\r\n      return translation.data.stringId === translationId\r\n    })\r\n\r\n    if (foundTranslation) {\r\n      const { text } = foundTranslation.data\r\n      const includesVariable = text.includes('%')\r\n\r\n      if (includesVariable) {\r\n        let interpolatedText = text\r\n\r\n        // If dynamic tags are found but no data was passed return the fallback\r\n        if (isEmpty(data)) {\r\n          return fallback\r\n        }\r\n\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from 'archerswap-sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  // eslint-disable-next-line no-nested-ternary\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import React, { useState } from 'react'\r\nimport { HelpCircle } from 'react-feather'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps {\r\n  alt?: string\r\n  style?: any\r\n  className?: string\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpCircle {...rest} />\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<any>`\r\n  width: 100%;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)<{ isDark: boolean }>`\r\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n","import { TokenAmount, Pair, Currency } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { useActiveWeb3React } from '../hooks'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString)\r\n}\r\n","import { TransactionResponse } from '@ethersproject/providers'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addTransaction } from './actions'\r\nimport { TransactionDetails } from './reducer'\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return\r\n      if (!chainId) return\r\n\r\n      const { hash } = response\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.')\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }))\r\n    },\r\n    [dispatch, chainId, account],\r\n  )\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  return chainId ? state[chainId] ?? {} : {}\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions()\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false\r\n\r\n  return !transactions[transactionHash].receipt\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions()\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash]\r\n        if (!tx) return false\r\n        if (tx.receipt) {\r\n          return false\r\n        }\r\n        const { approval } = tx\r\n        if (!approval) return false\r\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  )\r\n}\r\n","import { Currency } from 'archerswap-sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ sizeraw, margin }) => margin && `${(sizeraw / 3 + 8).toString()}px`};\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nconst HigherLogo = styled(CurrencyLogo)`\r\n  z-index: 2;\r\n`\r\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\r\n  position: absolute;\r\n  left: ${({ sizeraw }) => `${(sizeraw / 2).toString()}px`};\r\n`\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 16,\r\n  margin = false,\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper sizeraw={size} margin={margin}>\r\n      {currency0 && <HigherLogo currency={currency0} size={`${size.toString()}px`} />}\r\n      {currency1 && (\r\n        <CoveredLogo currency={currency1} size={`${size.toString()}px`} sizeraw={size} style={{ marginLeft: 8 }} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { transparentize } from 'polished'\r\nimport React from 'react'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { Text } from 'archerswap-uikit'\r\nimport styled, { css } from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) =>\r\n    clickable\r\n      ? css`\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n      : null}\r\n`\r\n\r\nexport const SectionBreak = styled.div`\r\n  height: 1px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n\r\nexport const BottomGrouping = styled.div`\r\n  margin-top: 1rem;\r\n`\r\n\r\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\r\n  color: ${({ theme, severity }) =>\r\n    severity === 3 || severity === 4\r\n      ? theme.colors.failure\r\n      : severity === 2\r\n      ? theme.colors.binance\r\n      : severity === 1\r\n      ? theme.colors.text\r\n      : theme.colors.success};\r\n`\r\n\r\nexport const StyledBalanceMaxMini = styled.button`\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n    outline: none;\r\n  }\r\n`\r\n\r\n// styles\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInner = styled.div`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`\r\n\r\nexport function SwapCallbackError({ error }: { error: string }) {\r\n  return (\r\n    <SwapCallbackErrorInner>\r\n      <SwapCallbackErrorInnerAlertTriangle>\r\n        <AlertTriangle size={24} />\r\n      </SwapCallbackErrorInnerAlertTriangle>\r\n      <p>{error}</p>\r\n    </SwapCallbackErrorInner>\r\n  )\r\n}\r\n\r\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.primary)};\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`\r\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from 'archerswap-sdk'\r\nimport {\r\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\r\n  ALLOWED_PRICE_IMPACT_HIGH,\r\n  ALLOWED_PRICE_IMPACT_LOW,\r\n  ALLOWED_PRICE_IMPACT_MEDIUM,\r\n} from '../constants'\r\n\r\nimport { Field } from '../state/swap/actions'\r\nimport { basisPointsToPercent } from './index'\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(10), JSBI.BigInt(10000))\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\r\n\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(\r\n  trade?: Trade,\r\n): {\r\n  priceImpactWithoutFee?: Percent\r\n  realizedLPFee?: CurrencyAmount\r\n} {\r\n  // for each hop in our trade, take away the x*y=k price impact from 0.1% fees\r\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .01) * (1-.01))\r\n  const realizedLPFee = !trade\r\n    ? undefined\r\n    : ONE_HUNDRED_PERCENT.subtract(\r\n        trade.route.pairs.reduce<Fraction>(\r\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\r\n          ONE_HUNDRED_PERCENT,\r\n        ),\r\n      )\r\n\r\n  // remove lp fees from price impact\r\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\r\n\r\n  // the x*y=k impact\r\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\r\n    : undefined\r\n\r\n  // the amount of the input that accrues to LPs\r\n  const realizedLPFeeAmount =\r\n    realizedLPFee &&\r\n    trade &&\r\n    (trade.inputAmount instanceof TokenAmount\r\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\r\n\r\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\r\n}\r\n\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(\r\n  trade: Trade | undefined,\r\n  allowedSlippage: number,\r\n): { [field in Field]?: CurrencyAmount } {\r\n  const pct = basisPointsToPercent(allowedSlippage)\r\n  return {\r\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\r\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\r\n  }\r\n}\r\n\r\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\r\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\r\n  return 0\r\n}\r\n\r\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\r\n  if (!trade) {\r\n    return ''\r\n  }\r\n  return inverted\r\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\r\n        trade.outputAmount.currency.symbol\r\n      }`\r\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\r\n        trade.inputAmount.currency.symbol\r\n      }`\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\r\nimport { isMobile } from 'react-device-detect'\r\nimport '@reach/dialog/styles.css'\r\nimport { transparentize } from 'polished'\r\n\r\nconst AnimatedDialogOverlay = animated(DialogOverlay)\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\r\n  &[data-reach-dialog-overlay] {\r\n    z-index: 2;\r\n    background-color: transparent;\r\n    overflow: hidden;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n  }\r\n`\r\n\r\nconst AnimatedDialogContent = animated(DialogContent)\r\n// destructure to not pass custom props to Dialog DOM element\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => (\r\n  <AnimatedDialogContent {...rest} />\r\n)).attrs({\r\n  'aria-label': 'dialog',\r\n})`\r\n  &[data-reach-dialog-content] {\r\n    margin: 0 0 2rem 0;\r\n    border: 1px solid ${({ theme }) => theme.colors.card};\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    box-shadow: 0 4px 8px 0 ${transparentize(0.95, '#191326')};\r\n    padding: 0px;\r\n    width: 80%;\r\n    overflow: hidden;\r\n\r\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\r\n\r\n    max-width: 420px;\r\n    ${({ maxHeight }) =>\r\n      maxHeight &&\r\n      css`\r\n        max-height: ${maxHeight}vh;\r\n      `}\r\n    ${({ minHeight }) =>\r\n      minHeight &&\r\n      css`\r\n        min-height: ${minHeight}vh;\r\n      `}\r\n    display: flex;\r\n    border-radius: 20px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      width: 65vw;\r\n    }\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      width: 85vw;\r\n    }\r\n  }\r\n`\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  minHeight?: number | false\r\n  maxHeight?: number\r\n  initialFocusRef?: React.RefObject<any>\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport default function Modal({\r\n  isOpen,\r\n  onDismiss,\r\n  minHeight = false,\r\n  maxHeight = 50,\r\n  initialFocusRef,\r\n  children,\r\n}: ModalProps) {\r\n  const fadeTransition = useTransition(isOpen, null, {\r\n    config: { duration: 200 },\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {fadeTransition.map(\r\n        ({ item, key, props }) =>\r\n          item && (\r\n            <StyledDialogOverlay key={key} style={props} onDismiss={onDismiss} initialFocusRef={initialFocusRef}>\r\n              <StyledDialogContent\r\n                aria-label=\"dialog content\"\r\n                minHeight={minHeight}\r\n                maxHeight={maxHeight}\r\n                mobile={isMobile}\r\n              >\r\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\r\n                {/* eslint-disable */}\r\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\r\n                {/* eslint-enable */}\r\n                {children}\r\n              </StyledDialogContent>\r\n            </StyledDialogOverlay>\r\n          ),\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { Currency, ETHER, Token } from 'archerswap-sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'CORE'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from 'archerswap-sdk'\r\nimport { useTokenContract } from '../hooks/useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n","import React from 'react'\r\n\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nexport default function useLast<T>(\r\n  value: T | undefined | null,\r\n  filterFn?: (value: T | null | undefined) => boolean,\r\n): T | null | undefined {\r\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\r\n  useEffect(() => {\r\n    setLast((prev) => {\r\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\r\n      if (shouldUse) return value\r\n      return prev\r\n    })\r\n  }, [filterFn, value])\r\n  return last\r\n}\r\n\r\nfunction isDefined<T>(x: T | null | undefined): x is T {\r\n  return x !== null && x !== undefined\r\n}\r\n\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nexport function useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\r\n  return useLast(value, isDefined)\r\n}\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n    transform: rotate(45deg);\r\n    background: ${({ theme }) => theme.colors.background};\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { JSBI, Pair, Percent } from 'archerswap-sdk'\r\nimport { Button, Card as UIKitCard, CardBody, Text } from 'archerswap-uikit'\r\nimport { darken } from 'polished'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useTotalSupply } from '../../data/TotalSupply'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\r\nimport Card from '../Card'\r\nimport { AutoColumn } from '../Column'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport DoubleCurrencyLogo from '../DoubleLogo'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { Dots } from '../swap/styleds'\r\n\r\nexport const FixedHeightRow = styled(RowBetween)`\r\n  height: 24px;\r\n`\r\n\r\nexport const HoverCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\r\n  :hover {\r\n    border: 1px solid ${({ theme }) => darken(0.06, theme.colors.invertedContrast)};\r\n  }\r\n`\r\n\r\ninterface PositionCardProps {\r\n  pair: Pair\r\n  // eslint-disable-next-line react/no-unused-prop-types\r\n  showUnwrapped?: boolean\r\n}\r\n\r\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <>\r\n      {userPoolBalance && (\r\n        <UIKitCard>\r\n          <CardBody>\r\n            <AutoColumn gap=\"12px\">\r\n              <FixedHeightRow>\r\n                <RowFixed>\r\n                  <Text style={{ textTransform: 'uppercase', fontWeight: 600 }} fontSize=\"14px\" color=\"textSubtle\">\r\n                    LP Tokens in your Wallet\r\n                  </Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n                  <Text fontSize=\"14px\">\r\n                    {currency0.symbol}/{currency1.symbol}\r\n                  </Text>\r\n                </RowFixed>\r\n                <RowFixed>\r\n                  <Text fontSize=\"14px\">{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <AutoColumn gap=\"4px\">\r\n                <FixedHeightRow>\r\n                  <Text fontSize=\"14px\">{currency0.symbol}:</Text>\r\n                  {token0Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\" fontSize=\"14px\">\r\n                        {token0Deposited?.toSignificant(6)}\r\n                      </Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text fontSize=\"14px\">{currency1.symbol}:</Text>\r\n                  {token1Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\" fontSize=\"14px\">\r\n                        {token1Deposited?.toSignificant(6)}\r\n                      </Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n              </AutoColumn>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </UIKitCard>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function FullPositionCard({ pair }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = unwrappedToken(pair.token0)\r\n  const currency1 = unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n  const { t } = useTranslation()\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <HoverCard>\r\n      <AutoColumn gap=\"12px\">\r\n        <FixedHeightRow onClick={() => setShowMore(!showMore)} style={{ cursor: 'pointer' }}>\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n            <Text>{!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}</Text>\r\n          </RowFixed>\r\n          <RowFixed>\r\n            {showMore ? (\r\n              <ChevronUp size=\"20\" style={{ marginLeft: '10px' }} />\r\n            ) : (\r\n              <ChevronDown size=\"20\" style={{ marginLeft: '10px' }} />\r\n            )}\r\n          </RowFixed>\r\n        </FixedHeightRow>\r\n        {showMore && (\r\n          <AutoColumn gap=\"8px\">\r\n            <FixedHeightRow>\r\n              <RowFixed>\r\n                <Text>Pooled {currency0.symbol}:</Text>\r\n              </RowFixed>\r\n              {token0Deposited ? (\r\n                <RowFixed>\r\n                  <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </FixedHeightRow>\r\n\r\n            <FixedHeightRow>\r\n              <RowFixed>\r\n                <Text>Pooled {currency1.symbol}:</Text>\r\n              </RowFixed>\r\n              {token1Deposited ? (\r\n                <RowFixed>\r\n                  <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </FixedHeightRow>\r\n            <FixedHeightRow>\r\n              <Text>Your pool tokens:</Text>\r\n              <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n            </FixedHeightRow>\r\n            <FixedHeightRow>\r\n              <Text>Your pool share:</Text>\r\n              <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(2)}%` : '-'}</Text>\r\n            </FixedHeightRow>\r\n\r\n            <RowBetween marginTop=\"10px\">\r\n              <Button as={Link} to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`} style={{ width: '48%' }}>\r\n                {t('Add')}\r\n              </Button>\r\n              <Button\r\n                as={Link}\r\n                style={{ width: '48%' }}\r\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n              >\r\n                {t('Remove')}\r\n              </Button>\r\n            </RowBetween>\r\n          </AutoColumn>\r\n        )}\r\n      </AutoColumn>\r\n    </HoverCard>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from 'archerswap-uikit'\r\n\r\nexport const BodyWrapper = styled(Card)`\r\n  position: relative;\r\n  max-width: 436px;\r\n  width: 100%;\r\n  z-index: 5;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n","import { useMemo } from 'react'\r\nimport contenthashToUri from '../utils/contenthashToUri'\r\nimport { parseENSAddress } from '../utils/parseENSAddress'\r\nimport uriToHttp from '../utils/uriToHttp'\r\nimport useENSContentHash from './useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri: string | undefined): string[] {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    }\r\n    return uri ? uriToHttp(uri) : []\r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport isZero from '../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!ensName) return [undefined]\r\n    try {\r\n      return ensName ? [namehash(ensName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [ensName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddress = resolverAddressResult.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\r\n    false,\r\n  )\r\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\r\n\r\n  return {\r\n    contenthash: contenthash.result?.[0] ?? null,\r\n    loading: resolverAddressResult.loading || contenthash.loading,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\n\r\nimport Logo from '../Logo'\r\n\r\nconst StyledListLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt,\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n","import React from 'react'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from 'archerswap-sdk'\r\nimport styled from 'styled-components'\r\n\r\nimport useI18n from 'hooks/useI18n'\r\nimport { SUGGESTED_BASES } from '../../constants'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\r\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.tertiary)};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 6px;\r\n\r\n  align-items: center;\r\n  :hover {\r\n    cursor: ${({ disable }) => !disable && 'pointer'};\r\n    background-color: ${({ theme, disable }) => !disable && theme.colors.invertedContrast};\r\n  }\r\n\r\n  background-color: ${({ theme, disable }) => disable && theme.colors.tertiary};\r\n  opacity: ${({ disable }) => disable && '0.4'};\r\n`\r\n\r\nexport default function CommonBases({\r\n  chainId,\r\n  onSelect,\r\n  selectedCurrency,\r\n}: {\r\n  chainId?: ChainId\r\n  selectedCurrency?: Currency | null\r\n  onSelect: (currency: Currency) => void\r\n}) {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow>\r\n        <Text fontSize=\"14px\">Common bases</Text>\r\n        <QuestionHelper text={TranslateString(1204, 'These tokens are commonly paired with other tokens.')} />\r\n      </AutoRow>\r\n      <AutoRow gap=\"4px\">\r\n        <BaseWrapper\r\n          onClick={() => {\r\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\r\n              onSelect(ETHER)\r\n            }\r\n          }}\r\n          disable={selectedCurrency === ETHER}\r\n        >\r\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\r\n          <Text>CORE</Text>\r\n        </BaseWrapper>\r\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\r\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\r\n          return (\r\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\r\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\r\n              <Text>{token.symbol}</Text>\r\n            </BaseWrapper>\r\n          )\r\n        })}\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\nimport { RowBetween, RowFixed } from '../Row'\r\n\r\nexport const FadedSpan = styled(RowFixed)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 14px;\r\n`\r\n\r\nexport const PaddedColumn = styled(AutoColumn)`\r\n  padding: 20px;\r\n  padding-bottom: 12px;\r\n`\r\n\r\nexport const MenuItem = styled(RowBetween)`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto minmax(0, 72px);\r\n  grid-gap: 16px;\r\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n  :hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.card};\r\n  }\r\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\r\n`\r\n\r\nexport const SearchInput = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 16px;\r\n  align-items: center;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  border-style: solid;\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  -webkit-appearance: none;\r\n\r\n  font-size: 18px;\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  transition: border 100ms;\r\n  :focus {\r\n    border: 1px solid ${({ theme }) => theme.colors.primary};\r\n    outline: none;\r\n  }\r\n`\r\nexport const Separator = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n`\r\n\r\nexport const SeparatorDark = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n","import { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from 'archerswap-sdk'\r\nimport React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\r\nimport { FixedSizeList } from 'react-window'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useSelectedTokenList, WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport { useAddUserToken, useRemoveUserAddedToken } from '../../state/user/hooks'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport { LinkStyledButton } from '../Shared'\r\nimport { useIsUserAddedToken } from '../../hooks/Tokens'\r\nimport Column from '../Column'\r\nimport { RowFixed } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport { MouseoverTooltip } from '../Tooltip'\r\nimport { FadedSpan, MenuItem } from './styleds'\r\nimport Loader from '../Loader'\r\nimport { isTokenOnList } from '../../utils'\r\n\r\nfunction currencyKey(currency: Currency): string {\r\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\r\n}\r\n\r\nconst StyledBalanceText = styled(Text)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 5rem;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst Tag = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\r\n  max-width: 6rem;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  justify-self: flex-end;\r\n  margin-right: 4px;\r\n`\r\n\r\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\r\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\r\n}\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n\r\nfunction TokenTags({ currency }: { currency: Currency }) {\r\n  if (!(currency instanceof WrappedTokenInfo)) {\r\n    return <span />\r\n  }\r\n\r\n  const { tags } = currency\r\n  if (!tags || tags.length === 0) return <span />\r\n\r\n  const tag = tags[0]\r\n\r\n  return (\r\n    <TagContainer>\r\n      <MouseoverTooltip text={tag.description}>\r\n        <Tag key={tag.id}>{tag.name}</Tag>\r\n      </MouseoverTooltip>\r\n      {tags.length > 1 ? (\r\n        <MouseoverTooltip\r\n          text={tags\r\n            .slice(1)\r\n            .map(({ name, description }) => `${name}: ${description}`)\r\n            .join('; \\n')}\r\n        >\r\n          <Tag>...</Tag>\r\n        </MouseoverTooltip>\r\n      ) : null}\r\n    </TagContainer>\r\n  )\r\n}\r\n\r\nfunction CurrencyRow({\r\n  currency,\r\n  onSelect,\r\n  isSelected,\r\n  otherSelected,\r\n  style,\r\n}: {\r\n  currency: Currency\r\n  onSelect: () => void\r\n  isSelected: boolean\r\n  otherSelected: boolean\r\n  style: CSSProperties\r\n}) {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const key = currencyKey(currency)\r\n  const selectedTokenList = useSelectedTokenList()\r\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\r\n  const customAdded = useIsUserAddedToken(currency)\r\n  const balance = useCurrencyBalance(account ?? undefined, currency)\r\n\r\n  const removeToken = useRemoveUserAddedToken()\r\n  const addToken = useAddUserToken()\r\n\r\n  // only show add or remove buttons if not on selected list\r\n  return (\r\n    <MenuItem\r\n      style={style}\r\n      className={`token-item-${key}`}\r\n      onClick={() => (isSelected ? null : onSelect())}\r\n      disabled={isSelected}\r\n      selected={otherSelected}\r\n    >\r\n      <CurrencyLogo currency={currency} size=\"24px\" />\r\n      <Column>\r\n        <Text title={currency.name}>{currency.symbol}</Text>\r\n        <FadedSpan>\r\n          {!isOnSelectedList && customAdded && !(currency instanceof WrappedTokenInfo) ? (\r\n            <Text>\r\n              Added by user\r\n              <LinkStyledButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation()\r\n                  if (chainId && currency instanceof Token) removeToken(chainId, currency.address)\r\n                }}\r\n              >\r\n                (Remove)\r\n              </LinkStyledButton>\r\n            </Text>\r\n          ) : null}\r\n          {!isOnSelectedList && !customAdded && !(currency instanceof WrappedTokenInfo) ? (\r\n            <Text>\r\n              Found by address\r\n              <LinkStyledButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation()\r\n                  if (currency instanceof Token) addToken(currency)\r\n                }}\r\n              >\r\n                (Add)\r\n              </LinkStyledButton>\r\n            </Text>\r\n          ) : null}\r\n        </FadedSpan>\r\n      </Column>\r\n      <TokenTags currency={currency} />\r\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\r\n        {balance ? <Balance balance={balance} /> : account ? <Loader /> : null}\r\n      </RowFixed>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nexport default function CurrencyList({\r\n  height,\r\n  currencies,\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherCurrency,\r\n  fixedListRef,\r\n  showETH,\r\n}: {\r\n  height: number\r\n  currencies: Currency[]\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherCurrency?: Currency | null\r\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\r\n  showETH: boolean\r\n}) {\r\n  const itemData = useMemo(() => (showETH ? [Currency.ETHER, ...currencies] : [...currencies]), [currencies, showETH])\r\n\r\n  const Row = useCallback(\r\n    ({ data, index, style }) => {\r\n      const currency: Currency = data[index]\r\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\r\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\r\n      const handleSelect = () => onCurrencySelect(currency)\r\n      return (\r\n        <CurrencyRow\r\n          style={style}\r\n          currency={currency}\r\n          isSelected={isSelected}\r\n          onSelect={handleSelect}\r\n          otherSelected={otherSelected}\r\n        />\r\n      )\r\n    },\r\n    [onCurrencySelect, otherCurrency, selectedCurrency],\r\n  )\r\n\r\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\r\n\r\n  return (\r\n    <FixedSizeList\r\n      height={height}\r\n      ref={fixedListRef as any}\r\n      width=\"100%\"\r\n      itemData={itemData}\r\n      itemCount={itemData.length}\r\n      itemSize={56}\r\n      itemKey={itemKey}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  )\r\n}\r\n","import { Token } from 'archerswap-sdk'\r\nimport { isAddress } from '../../utils'\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n  if (search.length === 0) return tokens\r\n\r\n  const searchingAddress = isAddress(search)\r\n\r\n  if (searchingAddress) {\r\n    return tokens.filter((token) => token.address === searchingAddress)\r\n  }\r\n\r\n  const lowerSearchParts = search\r\n    .toLowerCase()\r\n    .split(/\\s+/)\r\n    .filter((s) => s.length > 0)\r\n\r\n  if (lowerSearchParts.length === 0) {\r\n    return tokens\r\n  }\r\n\r\n  const matchesSearch = (s: string): boolean => {\r\n    const sParts = s\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((str) => str.length > 0)\r\n\r\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n  }\r\n\r\n  return tokens.filter((token) => {\r\n    const { symbol, name } = token\r\n\r\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n  })\r\n}\r\n\r\nexport default filterTokens\r\n","import React from 'react'\r\nimport { Text } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport { RowFixed } from '../Row'\r\n\r\nexport const FilterWrapper = styled(RowFixed)`\r\n  padding: 8px;\r\n  background-color: ${({ theme }) => theme.colors.card};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  border-radius: 8px;\r\n  user-select: none;\r\n  & > * {\r\n    user-select: none;\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport default function SortButton({\r\n  toggleSortOrder,\r\n  ascending,\r\n}: {\r\n  toggleSortOrder: () => void\r\n  ascending: boolean\r\n}) {\r\n  return (\r\n    <FilterWrapper onClick={toggleSortOrder}>\r\n      <Text fontSize=\"14px\">{ascending ? '↑' : '↓'}</Text>\r\n    </FilterWrapper>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nexport function useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n","import { Currency, ETHER, Token } from 'archerswap-sdk'\r\nimport React, { KeyboardEvent, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Text, CloseIcon } from 'archerswap-uikit'\r\nimport { useSelector } from 'react-redux'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { ThemeContext } from 'styled-components'\r\nimport AutoSizer from 'react-virtualized-auto-sizer'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { AppState } from '../../state'\r\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\r\nimport { useSelectedListInfo } from '../../state/lists/hooks'\r\nimport { LinkStyledButton } from '../Shared'\r\nimport { isAddress } from '../../utils'\r\nimport Card from '../Card'\r\nimport Column from '../Column'\r\nimport ListLogo from '../ListLogo'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport Row, { RowBetween } from '../Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens } from './filtering'\r\nimport SortButton from './SortButton'\r\nimport { useTokenComparator } from './sorting'\r\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\r\n\r\ninterface CurrencySearchProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  onChangeList: () => void\r\n}\r\n\r\nexport function CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  onDismiss,\r\n  isOpen,\r\n  onChangeList,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const fixedList = useRef<FixedSizeList>()\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\r\n  const allTokens = useAllTokens()\r\n\r\n  // if they input an address, use it\r\n  const isAddressSearch = isAddress(searchQuery)\r\n  const searchToken = useToken(searchQuery)\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n    const s = searchQuery.toLowerCase().trim()\r\n    return s === '' || s === 'c' || s === 'co' || s === 'cor' || s === 'core'\r\n  }, [searchQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    if (isAddressSearch) return searchToken ? [searchToken] : []\r\n    return filterTokens(Object.values(allTokens), searchQuery)\r\n  }, [isAddressSearch, searchToken, allTokens, searchQuery])\r\n\r\n  const filteredSortedTokens: Token[] = useMemo(() => {\r\n    if (searchToken) return [searchToken]\r\n    const sorted = filteredTokens.sort(tokenComparator)\r\n    const symbolMatch = searchQuery\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s) => s.length > 0)\r\n    if (symbolMatch.length > 1) return sorted\r\n\r\n    return [\r\n      ...(searchToken ? [searchToken] : []),\r\n      // sort any exact symbol matches first\r\n      ...sorted.filter((token) => token.symbol?.toLowerCase() === symbolMatch[0]),\r\n      ...sorted.filter((token) => token.symbol?.toLowerCase() !== symbolMatch[0]),\r\n    ]\r\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n      if (audioPlay) {\r\n        const audio = document.getElementById('bgMusic') as HTMLAudioElement\r\n        if (audio) {\r\n          audio.play()\r\n        }\r\n      }\r\n    },\r\n    [onDismiss, onCurrencySelect, audioPlay],\r\n  )\r\n\r\n  // clear the input on open\r\n  useEffect(() => {\r\n    if (isOpen) setSearchQuery('')\r\n  }, [isOpen])\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = searchQuery.toLowerCase().trim()\r\n        if (s === 'core') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === searchQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, searchQuery],\r\n  )\r\n\r\n  const selectedListInfo = useSelectedListInfo()\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Column style={{ width: '100%', flex: '1 1' }}>\r\n      <PaddedColumn gap=\"14px\">\r\n        <RowBetween>\r\n          <Text>\r\n            {t('Select a token')}\r\n            <QuestionHelper\r\n              text={TranslateString(\r\n                128,\r\n                'Find a token by searching for its name or symbol or by pasting its address below.',\r\n              )}\r\n            />\r\n          </Text>\r\n          <CloseIcon onClick={onDismiss} />\r\n        </RowBetween>\r\n        <SearchInput\r\n          type=\"text\"\r\n          id=\"token-search-input\"\r\n          placeholder={t('Search name or paste address')}\r\n          value={searchQuery}\r\n          ref={inputRef as RefObject<HTMLInputElement>}\r\n          onChange={handleInput}\r\n          onKeyDown={handleEnter}\r\n        />\r\n        {showCommonBases && (\r\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n        )}\r\n        <RowBetween>\r\n          <Text fontSize=\"14px\">{t('Token name')}</Text>\r\n          <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder((iso) => !iso)} />\r\n        </RowBetween>\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <div style={{ flex: '1' }}>\r\n        <AutoSizer disableWidth>\r\n          {({ height }) => (\r\n            <CurrencyList\r\n              height={height}\r\n              showETH={showETH}\r\n              currencies={filteredSortedTokens}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n            />\r\n          )}\r\n        </AutoSizer>\r\n      </div>\r\n\r\n      {null && (\r\n        <>\r\n          <Separator />\r\n          <Card>\r\n            <RowBetween>\r\n              {selectedListInfo.current ? (\r\n                <Row>\r\n                  {selectedListInfo.current.logoURI ? (\r\n                    <ListLogo\r\n                      style={{ marginRight: 12 }}\r\n                      logoURI={selectedListInfo.current.logoURI}\r\n                      alt={`${selectedListInfo.current.name} list logo`}\r\n                    />\r\n                  ) : null}\r\n                  <Text id=\"currency-search-selected-list-name\">{selectedListInfo.current.name}</Text>\r\n                </Row>\r\n              ) : null}\r\n              <LinkStyledButton\r\n                style={{ fontWeight: 500, color: theme.colors.textSubtle, fontSize: 16 }}\r\n                onClick={onChangeList}\r\n                id=\"currency-search-change-list-button\"\r\n              >\r\n                {selectedListInfo.current ? TranslateString(180, 'Change') : TranslateString(1152, 'Select a list')}\r\n              </LinkStyledButton>\r\n            </RowBetween>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </Column>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch\r\n","import { RefObject, useEffect, useRef } from 'react'\r\n\r\nexport function useOnClickOutside<T extends HTMLElement>(\r\n  node: RefObject<T | undefined>,\r\n  handler: undefined | (() => void),\r\n) {\r\n  const handlerRef = useRef<undefined | (() => void)>(handler)\r\n  useEffect(() => {\r\n    handlerRef.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      if (node.current?.contains(e.target as Node) ?? false) {\r\n        return\r\n      }\r\n      if (handlerRef.current) handlerRef.current()\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [node])\r\n}\r\n\r\nexport default useOnClickOutside\r\n","import React, { memo, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { usePopper } from 'react-popper'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Text, ChevronDownIcon, CloseIcon } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, selectList } from '../../state/lists/actions'\r\nimport { useSelectedListUrl } from '../../state/lists/hooks'\r\nimport { ExternalLink, LinkStyledButton } from '../Shared'\r\nimport listVersionLabel from '../../utils/listVersionLabel'\r\nimport { parseENSAddress } from '../../utils/parseENSAddress'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\nimport Column from '../Column'\r\nimport ListLogo from '../ListLogo'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport Row, { RowBetween } from '../Row'\r\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds'\r\n\r\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\r\n  padding: 0;\r\n  font-size: 1rem;\r\n  opacity: ${({ disabled }) => (disabled ? '0.4' : '1')};\r\n`\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 100;\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n  background: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 0.5rem;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-gap: 8px;\r\n  font-size: 1rem;\r\n  text-align: left;\r\n`\r\n\r\nconst StyledMenu = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border: none;\r\n`\r\n\r\nconst StyledListUrlText = styled.div`\r\n  max-width: 160px;\r\n  opacity: 0.6;\r\n  margin-right: 0.5rem;\r\n  font-size: 14px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nfunction ListOrigin({ listUrl }: { listUrl: string }) {\r\n  const ensName = useMemo(() => parseENSAddress(listUrl)?.ensName, [listUrl])\r\n  const host = useMemo(() => {\r\n    if (ensName) return undefined\r\n    const lowerListUrl = listUrl.toLowerCase()\r\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\r\n      return listUrl\r\n    }\r\n    try {\r\n      const url = new URL(listUrl)\r\n      return url.host\r\n    } catch (error) {\r\n      return undefined\r\n    }\r\n  }, [listUrl, ensName])\r\n  return <>{ensName ?? host}</>\r\n}\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl, onBack }: { listUrl: string; onBack: () => void }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const selectedListUrl = useSelectedListUrl()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isSelected = listUrl === selectedListUrl\r\n\r\n  const [open, toggle] = useToggle(false)\r\n  const node = useRef<HTMLDivElement>()\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>()\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>()\r\n\r\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement: 'auto',\r\n    strategy: 'fixed',\r\n    modifiers: [{ name: 'offset', options: { offset: [8, 8] } }],\r\n  })\r\n\r\n  useOnClickOutside(node, open ? toggle : undefined)\r\n\r\n  const selectThisList = useCallback(() => {\r\n    if (isSelected) return\r\n\r\n    dispatch(selectList(listUrl))\r\n    onBack()\r\n  }, [dispatch, isSelected, listUrl, onBack])\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n  const TranslateString = useI18n()\r\n  if (!list) return null\r\n\r\n  return (\r\n    <Row key={listUrl} align=\"center\" padding=\"16px\" id={listUrlRowHTMLId(listUrl)}>\r\n      {list.logoURI ? (\r\n        <ListLogo style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text bold={isSelected} fontSize=\"16px\" style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>\r\n            {list.name}\r\n          </Text>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            marginTop: '4px',\r\n          }}\r\n        >\r\n          <StyledListUrlText title={listUrl}>\r\n            <ListOrigin listUrl={listUrl} />\r\n          </StyledListUrlText>\r\n        </Row>\r\n      </Column>\r\n      <StyledMenu ref={node as any}>\r\n        <div style={{ display: 'inline-block' }} ref={setReferenceElement}>\r\n          <Button\r\n            style={{\r\n              width: '32px',\r\n              marginRight: '8px',\r\n            }}\r\n            onClick={toggle}\r\n            variant=\"secondary\"\r\n          >\r\n            <ChevronDownIcon />\r\n          </Button>\r\n        </div>\r\n\r\n        {open && (\r\n          <PopoverContainer show ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n            <div>{list && listVersionLabel(list.version)}</div>\r\n            <SeparatorDark />\r\n            <ExternalLink href={`https://tokenlists.org/token-list?url=${listUrl}`}>\r\n              {TranslateString(1206, 'View list')}\r\n            </ExternalLink>\r\n            <UnpaddedLinkStyledButton onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n              Remove list\r\n            </UnpaddedLinkStyledButton>\r\n            {pending && (\r\n              <UnpaddedLinkStyledButton onClick={handleAcceptListUpdate}>Update list</UnpaddedLinkStyledButton>\r\n            )}\r\n          </PopoverContainer>\r\n        )}\r\n      </StyledMenu>\r\n      {isSelected ? (\r\n        <Button disabled style={{ width: '5rem', minWidth: '5rem' }}>\r\n          Selected\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            className=\"select-button\"\r\n            style={{\r\n              width: '5rem',\r\n              minWidth: '4.5rem',\r\n            }}\r\n            onClick={selectThisList}\r\n          >\r\n            Select\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Row>\r\n  )\r\n})\r\n\r\nconst ListContainer = styled.div`\r\n  flex: 1;\r\n  overflow: auto;\r\n`\r\n\r\nexport function ListSelect({ onDismiss, onBack }: { onDismiss: () => void; onBack: () => void }) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const adding = Boolean(lists[listUrlInput]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const handleInput = useCallback((e) => {\r\n    setListUrlInput(e.target.value)\r\n    setAddError(null)\r\n  }, [])\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listUrlInput)\r\n      .then(() => {\r\n        setListUrlInput('')\r\n      })\r\n      .catch((error) => {\r\n        setAddError(error.message)\r\n        dispatch(removeList(listUrlInput))\r\n      })\r\n  }, [adding, dispatch, fetchList, listUrlInput])\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const handleEnterKey = useCallback(\r\n    (e) => {\r\n      if (validUrl && e.key === 'Enter') {\r\n        handleAddList()\r\n      }\r\n    },\r\n    [handleAddList, validUrl],\r\n  )\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter((listUrl) => {\r\n        return Boolean(lists[listUrl].current)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists])\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Column style={{ width: '100%', flex: '1 1' }}>\r\n      <PaddedColumn>\r\n        <RowBetween>\r\n          <div>\r\n            <ArrowLeft style={{ cursor: 'pointer' }} onClick={onBack} />\r\n          </div>\r\n          <Text fontSize=\"20px\">{TranslateString(1208, 'Manage Lists')}</Text>\r\n          <CloseIcon onClick={onDismiss} />\r\n        </RowBetween>\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <PaddedColumn gap=\"14px\">\r\n        <Text bold>\r\n          Add a list{' '}\r\n          <QuestionHelper\r\n            text={TranslateString(\r\n              999,\r\n              'Token lists are an open specification for lists of BEP20 tokens. You can use any token list by entering its URL below. Beware that third party token lists can contain fake or malicious BEP20 tokens.',\r\n            )}\r\n          />\r\n        </Text>\r\n        <Row>\r\n          <SearchInput\r\n            type=\"text\"\r\n            id=\"list-add-input\"\r\n            placeholder=\"https:// or ipfs:// or ENS name\"\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n            onKeyDown={handleEnterKey}\r\n            style={{ height: '2.75rem', borderRadius: 12, padding: '12px' }}\r\n          />\r\n          <Button onClick={handleAddList} style={{ maxWidth: '4em', marginLeft: '1em' }} disabled={!validUrl}>\r\n            Add\r\n          </Button>\r\n        </Row>\r\n        {addError ? (\r\n          <Text color=\"failure\" title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n            {addError}\r\n          </Text>\r\n        ) : null}\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <ListContainer>\r\n        {sortedLists.map((listUrl) => (\r\n          <ListRow key={listUrl} listUrl={listUrl} onBack={onBack} />\r\n        ))}\r\n      </ListContainer>\r\n      <Separator />\r\n\r\n      <div style={{ padding: '16px', textAlign: 'center' }}>\r\n        <ExternalLink href=\"https://tokenlists.org\">Browse lists</ExternalLink>\r\n      </div>\r\n    </Column>\r\n  )\r\n}\r\n\r\nexport default ListSelect\r\n","import { useCallback, useState } from 'react'\r\n\r\nexport default function useToggle(initialState = false): [boolean, () => void] {\r\n  const [state, setState] = useState(initialState)\r\n  const toggle = useCallback(() => setState((prev) => !prev), [])\r\n  return [state, toggle]\r\n}\r\n","import { Version } from '@uniswap/token-lists'\r\n\r\nexport default function listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n","import { Currency } from 'archerswap-sdk'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport useLast from '../../hooks/useLast'\r\nimport { useSelectedListUrl } from '../../state/lists/hooks'\r\nimport Modal from '../Modal'\r\nimport { CurrencySearch } from './CurrencySearch'\r\nimport { ListSelect } from './ListSelect'\r\n\r\ninterface CurrencySearchModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  // eslint-disable-next-line react/no-unused-prop-types\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  isOpen,\r\n  onDismiss,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n}: CurrencySearchModalProps) {\r\n  const [listView, setListView] = useState<boolean>(false)\r\n  const lastOpen = useLast(isOpen)\r\n\r\n  useEffect(() => {\r\n    if (isOpen && !lastOpen) {\r\n      setListView(false)\r\n    }\r\n  }, [isOpen, lastOpen])\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n    },\r\n    [onDismiss, onCurrencySelect],\r\n  )\r\n\r\n  const handleClickChangeList = useCallback(() => {\r\n    setListView(true)\r\n  }, [])\r\n  const handleClickBack = useCallback(() => {\r\n    setListView(false)\r\n  }, [])\r\n\r\n  const selectedListUrl = useSelectedListUrl()\r\n  const noListSelected = !selectedListUrl\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\r\n      {listView ? (\r\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\r\n      ) : noListSelected ? (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      ) : (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { isAddress } from '../utils'\r\nimport useENSAddress from './useENSAddress'\r\nimport useENSName from './useENSName'\r\n\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(\r\n  nameOrAddress?: string | null,\r\n): { loading: boolean; address: string | null; name: string | null } {\r\n  const validated = isAddress(nameOrAddress)\r\n  const reverseLookup = useENSName(validated || undefined)\r\n  const lookup = useENSAddress(nameOrAddress)\r\n\r\n  return {\r\n    loading: reverseLookup.loading || lookup.loading,\r\n    address: validated || lookup.address,\r\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport { isAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\r\nimport useDebounce from './useDebounce'\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedAddress])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\r\n\r\n  const changed = debouncedAddress !== address\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport isZero from '../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\r\nimport useDebounce from './useDebounce'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\r\n  const debouncedName = useDebounce(ensName, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedName) return [undefined]\r\n    try {\r\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\r\n\r\n  const changed = debouncedName !== ensName\r\n  return {\r\n    address: changed ? null : addr.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || addr.loading,\r\n  }\r\n}\r\n","import { Currency, CurrencyAmount, Pair, Token, Trade } from 'archerswap-sdk'\r\nimport flatMap from 'lodash.flatmap'\r\nimport { useMemo } from 'react'\r\n\r\nimport { BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../constants'\r\nimport { PairState, usePairs } from '../data/Reserves'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nimport { useActiveWeb3React } from './index'\r\n\r\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // Base tokens for building intermediary trading routes\r\n  const bases: Token[] = useMemo(() => (chainId ? BASES_TO_CHECK_TRADES_AGAINST[chainId] : []), [chainId])\r\n\r\n  // All pairs from base tokens\r\n  const basePairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])).filter(\r\n        ([t0, t1]) => t0.address !== t1.address,\r\n      ),\r\n    [bases],\r\n  )\r\n\r\n  const [tokenA, tokenB] = chainId\r\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n    : [undefined, undefined]\r\n\r\n  const allPairCombinations: [Token, Token][] = useMemo(\r\n    () =>\r\n      tokenA && tokenB\r\n        ? [\r\n            // the direct pair\r\n            [tokenA, tokenB],\r\n            // token A against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\r\n            // token B against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\r\n            // each base against all bases\r\n            ...basePairs,\r\n          ]\r\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([t0, t1]) => t0.address !== t1.address)\r\n            // This filter will remove all the pairs that are not supported by the CUSTOM_BASES settings\r\n            // This option is currently not used on Pancake swap\r\n            .filter(([t0, t1]) => {\r\n              if (!chainId) return true\r\n              const customBases = CUSTOM_BASES[chainId]\r\n              if (!customBases) return true\r\n\r\n              const customBasesA: Token[] | undefined = customBases[t0.address]\r\n              const customBasesB: Token[] | undefined = customBases[t1.address]\r\n\r\n              if (!customBasesA && !customBasesB) return true\r\n              if (customBasesA && !customBasesA.find((base) => t1.equals(base))) return false\r\n              if (customBasesB && !customBasesB.find((base) => t0.equals(base))) return false\r\n\r\n              return true\r\n            })\r\n        : [],\r\n    [tokenA, tokenB, bases, basePairs, chainId],\r\n  )\r\n\r\n  const allPairs = usePairs(allPairCombinations)\r\n\r\n  // only pass along valid pairs, non-duplicated pairs\r\n  return useMemo(\r\n    () =>\r\n      Object.values(\r\n        allPairs\r\n          // filter out invalid pairs\r\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n          // filter out duplicated pairs\r\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\r\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\r\n            return memo\r\n          }, {}),\r\n      ),\r\n    [allPairs],\r\n  )\r\n}\r\n\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\r\n\r\n  return useMemo(() => {\r\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n      return (\r\n        Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 3, maxNumResults: 1 })[0] ?? null\r\n      )\r\n    }\r\n    return null\r\n  }, [allowedPairs, currencyAmountIn, currencyOut])\r\n}\r\n\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\r\n\r\n  return useMemo(() => {\r\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n      return (\r\n        Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 3, maxNumResults: 1 })[0] ??\r\n        null\r\n      )\r\n    }\r\n    return null\r\n  }, [allowedPairs, currencyIn, currencyAmountOut])\r\n}\r\n","import { parseUnits } from '@ethersproject/units'\r\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from 'archerswap-sdk'\r\nimport { ParsedQs } from 'qs'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useENS from '../../hooks/useENS'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades'\r\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\r\nimport { isAddress } from '../../utils'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\nimport { SwapState } from './reducer'\r\n\r\nimport { useUserSlippageTolerance } from '../user/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices'\r\n\r\nexport function useSwapState(): AppState['swap'] {\r\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\r\n}\r\n\r\nexport function useSwapActionHandlers(): {\r\n  onCurrencySelection: (field: Field, currency: Currency) => void\r\n  onSwitchTokens: () => void\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n  onChangeRecipient: (recipient: string | null) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const onCurrencySelection = useCallback(\r\n    (field: Field, currency: Currency) => {\r\n      dispatch(\r\n        selectCurrency({\r\n          field,\r\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'CORE' : '',\r\n        }),\r\n      )\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onSwitchTokens = useCallback(() => {\r\n    dispatch(switchCurrencies())\r\n  }, [dispatch])\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onChangeRecipient = useCallback(\r\n    (recipient: string | null) => {\r\n      dispatch(setRecipient({ recipient }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return {\r\n    onSwitchTokens,\r\n    onCurrencySelection,\r\n    onUserInput,\r\n    onChangeRecipient,\r\n  }\r\n}\r\n\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  if (!value || !currency) {\r\n    return undefined\r\n  }\r\n  try {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\r\n    if (typedValueParsed !== '0') {\r\n      return currency instanceof Token\r\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\r\n    }\r\n  } catch (error) {\r\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n    console.info(`Failed to parse input amount: \"${value}\"`, error)\r\n  }\r\n  // necessary for all paths to return a value\r\n  return undefined\r\n}\r\n\r\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\r\n  '0x0eb58E5c8aA63314ff5547289185cC4583DfCBD5', // v2 factory\r\n  '0xBe65b8f75B9F20f4C522e0067a3887FADa714800', // v2 router 01\r\n  '0x819801d9048EC5D1DEb04E72b3B2dA4bd8E5ca9e', // v2 router 02\r\n]\r\n\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\r\n  return (\r\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\r\n  )\r\n}\r\n\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo(): {\r\n  currencies: { [field in Field]?: Currency }\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmount: CurrencyAmount | undefined\r\n  v2Trade: Trade | undefined\r\n  inputError?: string\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    recipient,\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId || '0x1a639e150d2210a4be4a5f0857a9151b241e7ae4')\r\n  const outputCurrency = useCurrency(outputCurrencyId || '0x1a639e150d2210a4be4a5f0857a9151b241e7ae4')\r\n  const recipientLookup = useENS(recipient ?? undefined)\r\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\r\n\r\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\r\n    inputCurrency ?? undefined,\r\n    outputCurrency ?? undefined,\r\n  ])\r\n\r\n  const isExactIn: boolean = independentField === Field.INPUT\r\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\r\n\r\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\r\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\r\n\r\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\r\n\r\n  const currencyBalances = {\r\n    [Field.INPUT]: relevantTokenBalances[0],\r\n    [Field.OUTPUT]: relevantTokenBalances[1],\r\n  }\r\n\r\n  const currencies: { [field in Field]?: Currency } = {\r\n    [Field.INPUT]: inputCurrency ?? undefined,\r\n    [Field.OUTPUT]: outputCurrency ?? undefined,\r\n  }\r\n\r\n  let inputError: string | undefined\r\n  if (!account) {\r\n    inputError = t('Connect Wallet')\r\n  }\r\n\r\n  if (!parsedAmount) {\r\n    inputError = inputError ?? t('Enter an amount')\r\n  }\r\n\r\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n    inputError = inputError ?? t('Select a token')\r\n  }\r\n\r\n  const formattedTo = isAddress(to)\r\n  if (!to || !formattedTo) {\r\n    inputError = inputError ?? 'Enter a recipient'\r\n  } else if (\r\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\r\n  ) {\r\n    inputError = inputError ?? 'Invalid recipient'\r\n  }\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\r\n\r\n  // compare input balance to max input based on version\r\n  const [balanceIn, amountIn] = [\r\n    currencyBalances[Field.INPUT],\r\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n  ]\r\n\r\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n    inputError = `Insufficient ${amountIn.currency.symbol} balance`\r\n  }\r\n\r\n  return {\r\n    currencies,\r\n    currencyBalances,\r\n    parsedAmount,\r\n    v2Trade: v2Trade ?? undefined,\r\n    inputError,\r\n  }\r\n}\r\n\r\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\r\n  if (typeof urlParam === 'string') {\r\n    const valid = isAddress(urlParam)\r\n    if (valid) return valid\r\n    if (urlParam.toUpperCase() === 'CORE') return 'CORE'\r\n    if (valid === false) return 'CORE'\r\n  }\r\n  return 'CORE' ?? ''\r\n}\r\n\r\nfunction parseTokenAmountURLParameter(urlParam: any): string {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\r\n}\r\n\r\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\r\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\r\n}\r\n\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nfunction validatedRecipient(recipient: any): string | null {\r\n  if (typeof recipient !== 'string') return null\r\n  const address = isAddress(recipient)\r\n  if (address) return address\r\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\r\n  if (ADDRESS_REGEX.test(recipient)) return recipient\r\n  return null\r\n}\r\n\r\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\r\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\r\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\r\n  if (inputCurrency === outputCurrency) {\r\n    if (typeof parsedQs.outputCurrency === 'string') {\r\n      inputCurrency = ''\r\n    } else {\r\n      outputCurrency = ''\r\n    }\r\n  }\r\n\r\n  const recipient = validatedRecipient(parsedQs.recipient)\r\n\r\n  return {\r\n    [Field.INPUT]: {\r\n      currencyId: inputCurrency,\r\n    },\r\n    [Field.OUTPUT]: {\r\n      currencyId: outputCurrency,\r\n    },\r\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n    recipient,\r\n  }\r\n}\r\n\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch():\r\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\r\n  | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const parsedQs = useParsedQueryString()\r\n  const [result, setResult] = useState<\r\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (!chainId) return\r\n    const parsed = queryParametersToSwapState(parsedQs)\r\n\r\n    dispatch(\r\n      replaceSwapState({\r\n        typedValue: parsed.typedValue,\r\n        field: parsed.independentField,\r\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n        recipient: parsed.recipient,\r\n      }),\r\n    )\r\n\r\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, chainId])\r\n\r\n  return result\r\n}\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link as HistoryLink } from 'react-router-dom'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { RowBetween } from 'components/Row'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Tabs = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  border-radius: 3rem;\r\n  justify-content: space-evenly;\r\n`\r\n\r\nconst ActiveText = styled.div`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n`\r\n\r\nconst StyledArrowLeft = styled(ArrowLeft)`\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\nexport function FindPoolTabs() {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem' }}>\r\n        <HistoryLink to=\"/pool\">\r\n          <StyledArrowLeft />\r\n        </HistoryLink>\r\n        <ActiveText>Import Pool</ActiveText>\r\n        <QuestionHelper\r\n          text={TranslateString(256, 'Use this tool to find pairs that do not automatically appear in the interface.')}\r\n        />\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n\r\nexport function AddRemoveTabs({ adding }: { adding: boolean }) {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Tabs>\r\n      <RowBetween style={{ padding: '1rem' }}>\r\n        <HistoryLink to=\"/pool\">\r\n          <StyledArrowLeft />\r\n        </HistoryLink>\r\n        <ActiveText>{adding ? TranslateString(258, 'Add') : TranslateString(260, 'Remove')} Liquidity</ActiveText>\r\n        <QuestionHelper\r\n          text={\r\n            adding\r\n              ? TranslateString(\r\n                  264,\r\n                  'When you add liquidity, you are given pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.',\r\n                )\r\n              : TranslateString(\r\n                  266,\r\n                  'Removing pool tokens converts your position back into underlying tokens at the current rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.',\r\n                )\r\n          }\r\n        />\r\n      </RowBetween>\r\n    </Tabs>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button, ButtonProps, useWalletModal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst UnlockButton: React.FC<ButtonProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {t('Connect Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { Text } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ClickableText = styled(Text)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, IconButton, CloseIcon } from 'archerswap-uikit'\r\nimport { AutoColumn, ColumnCenter } from '../Column'\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`\r\nexport const Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nexport const ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 40px 0;\r\n`\r\n\r\nexport const BottomSection = styled(Section)`\r\n  background-color: ${({ theme }) => theme.colors.card};\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n`\r\n\r\n/**\r\n * TODO: Remove this when modal system from the UI Kit is implemented\r\n */\r\nconst StyledContentHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  & > ${Heading} {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\ntype ContentHeaderProps = {\r\n  children: ReactNode\r\n  onDismiss: () => void\r\n}\r\n\r\nexport const ContentHeader = ({ children, onDismiss }: ContentHeaderProps) => (\r\n  <StyledContentHeader>\r\n    <Heading>{children}</Heading>\r\n    <IconButton onClick={onDismiss} variant=\"text\">\r\n      <CloseIcon color=\"primary\" />\r\n    </IconButton>\r\n  </StyledContentHeader>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Spinner } from '../Shared'\r\nimport { AutoColumn } from '../Column'\r\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\r\n\r\ntype ConfirmationPendingContentProps = { onDismiss: () => void; pendingText: string }\r\n\r\nconst CustomLightSpinner = styled(Spinner)<{ size: string }>`\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n`\r\n\r\nconst ConfirmationPendingContent = ({ onDismiss, pendingText }: ConfirmationPendingContentProps) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>{t('Waiting for confirmation')}</ContentHeader>\r\n        <ConfirmedIcon>\r\n          <CustomLightSpinner src=\"/images/blue-loader.svg\" alt=\"loader\" size=\"90px\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <AutoColumn gap=\"12px\" justify=\"center\">\r\n            <Text fontSize=\"14px\">\r\n              <strong>{pendingText}</strong>\r\n            </Text>\r\n          </AutoColumn>\r\n          <Text fontSize=\"14px\">{t('Confirm this transaction in your wallet')}</Text>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ConfirmationPendingContent\r\n","import { ChainId } from 'archerswap-sdk'\r\nimport React, { useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Button, LinkExternal } from 'archerswap-uikit'\r\nimport { ArrowUpCircle } from 'react-feather'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { AutoColumn } from '../Column'\r\nimport { getSnowtraceLink } from '../../utils'\r\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\r\n\r\ntype TransactionSubmittedContentProps = {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n}\r\n\r\nconst TransactionSubmittedContent = ({ onDismiss, chainId, hash }: TransactionSubmittedContentProps) => {\r\n  const theme = useContext(ThemeContext)\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>{t('Transaction submitted')}</ContentHeader>\r\n        <ConfirmedIcon>\r\n          <ArrowUpCircle strokeWidth={0.5} size={97} color={theme.colors.primary} />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"8px\" justify=\"center\">\r\n          {chainId && hash && (\r\n            <LinkExternal href={getSnowtraceLink(chainId, hash, 'transaction')}>View on Core Scan</LinkExternal>\r\n          )}\r\n          <Button onClick={onDismiss} mt=\"20px\">\r\n            {t('Close')}\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TransactionSubmittedContent\r\n","import React from 'react'\r\nimport Modal from '../Modal'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport ConfirmationPendingContent from './ConfirmationPendingContent'\r\nimport TransactionSubmittedContent from './TransactionSubmittedContent'\r\n\r\ninterface ConfirmationModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n}\r\n\r\nconst TransactionConfirmationModal = ({\r\n  isOpen,\r\n  onDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content,\r\n}: ConfirmationModalProps) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  if (!chainId) return null\r\n\r\n  // confirmation screen\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent chainId={chainId} hash={hash} onDismiss={onDismiss} />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n","import React from 'react'\r\nimport { Wrapper, Section, BottomSection, ContentHeader } from './helpers'\r\n\r\ntype ConfirmationModalContentProps = {\r\n  title: string\r\n  onDismiss: () => void\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}\r\n\r\nconst ConfirmationModalContent = ({ title, bottomContent, onDismiss, topContent }: ConfirmationModalContentProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>{title}</ContentHeader>\r\n        {topContent()}\r\n      </Section>\r\n      <BottomSection gap=\"12px\">{bottomContent()}</BottomSection>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModalContent\r\n","import React, { useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Button, Text } from 'archerswap-uikit'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { AutoColumn } from '../Column'\r\nimport { Wrapper, Section, BottomSection, ContentHeader } from './helpers'\r\n\r\ntype TransactionErrorContentProps = { message: string; onDismiss: () => void }\r\n\r\nconst TransactionErrorContent = ({ message, onDismiss }: TransactionErrorContentProps) => {\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>Error</ContentHeader>\r\n        <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\r\n          <AlertTriangle color={theme.colors.failure} style={{ strokeWidth: 1.5 }} size={64} />\r\n          <Text fontSize=\"16px\" color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n            {message}\r\n          </Text>\r\n        </AutoColumn>\r\n      </Section>\r\n      <BottomSection gap=\"12px\">\r\n        <Button onClick={onDismiss}>Dismiss</Button>\r\n      </BottomSection>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TransactionErrorContent\r\n","import TransactionConfirmationModal from './TransactionConfirmationModal'\r\n\r\nexport { default as ConfirmationModalContent } from './ConfirmationModalContent'\r\nexport { default as ConfirmationPendingContent } from './ConfirmationPendingContent'\r\nexport { default as TransactionErrorContent } from './TransactionErrorContent'\r\nexport { default as TransactionSubmittedContent } from './TransactionSubmittedContent'\r\n\r\nexport default TransactionConfirmationModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={(event) => {\r\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title=\"Token Amount\"\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import React, { useState, useCallback, useMemo } from 'react'\r\nimport { Currency, Pair, CurrencyAmount, Percent } from 'archerswap-sdk'\r\nimport { Button, ChevronDownIcon, Text, Svg } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport CurrencyLogo, { getTokenLogoURLForMetamask } from '../CurrencyLogo'\r\nimport DoubleCurrencyLogo from '../DoubleLogo'\r\nimport { RowBetween } from '../Row'\r\nimport { Input as NumericalInput } from '../NumericalInput'\r\nimport { useActiveWeb3React } from '../../hooks'\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\r\n`\r\nconst PercentInputRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  justify-content: right;\r\n  padding: 0 1rem 0.75rem 1rem;\r\n  & div {\r\n    font-size: 15px;\r\n    margin-left: 6px;\r\n  }\r\n`\r\nconst PercentButton = styled(Text).attrs({ role: 'button' })<{ selected?: boolean }>`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ selected, theme }) => (selected ? '#EAAA08' : theme.colors.primary)};\r\n`\r\nconst CurrencySelect = styled.button<{ selected: boolean }>`\r\n  align-items: center;\r\n  height: 34px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  background-color: transparent;\r\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\r\n  border-radius: 12px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border: none;\r\n  padding: 0 0.5rem;\r\n  :focus,\r\n  :hover {\r\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\r\n  }\r\n`\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\r\n  }\r\n`\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n`\r\nconst Container = styled.div<{ hideInput: boolean }>`\r\n  border-radius: 16px;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n`\r\nconst Action = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    height: 18px;\r\n  }\r\n`\r\n\r\nconst StyleButton = styled(Text).attrs({ role: 'button' })`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\r\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'block' : 'none')};\r\n  width: 60px;\r\n  position: absolute;\r\n  bottom: -22px;\r\n  right: 0;\r\n  left: 0;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.contrast};\r\n  color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: 16px;\r\n  opacity: 0.7;\r\n`\r\n\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  maxAmount?: CurrencyAmount\r\n  label?: string\r\n  onCurrencySelect?: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  disableCurrencySelect?: boolean\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  hideInput?: boolean\r\n  otherCurrency?: Currency | null\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  maxAmount,\r\n  label,\r\n  onCurrencySelect,\r\n  currency,\r\n  disableCurrencySelect = false,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  hideInput = false,\r\n  otherCurrency,\r\n  id,\r\n  showCommonBases,\r\n}: CurrencyInputPanelProps) {\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const { account } = useActiveWeb3React()\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const { t } = useTranslation()\r\n  const translatedLabel = label || t('Input')\r\n  const handleDismissSearch = useCallback(() => {\r\n    setModalOpen(false)\r\n  }, [setModalOpen])\r\n\r\n  const allTokens = useAllTokens()\r\n  const tokenAddress = useMemo(() => {\r\n    if (currency) {\r\n      const keys = Object.keys(allTokens)\r\n      let tokenKey\r\n      keys.forEach((key) => {\r\n        if (allTokens[key].symbol === currency.symbol) {\r\n          tokenKey = key\r\n        }\r\n      })\r\n\r\n      if (tokenKey) return allTokens[tokenKey].address\r\n    }\r\n    return ''\r\n  }, [allTokens, currency])\r\n\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\r\n\r\n  const percentAmount = useMemo(\r\n    () => ({\r\n      25: maxAmount ? maxAmount.multiply(new Percent(25, 100)).toExact() : undefined,\r\n      50: maxAmount ? maxAmount.multiply(new Percent(50, 100)).toExact() : undefined,\r\n      75: maxAmount ? maxAmount.multiply(new Percent(75, 100)).toExact() : undefined,\r\n      100: maxAmount ? maxAmount.toExact() : undefined,\r\n    }),\r\n    [maxAmount],\r\n  )\r\n\r\n  const CopyIcon = () => (\r\n    <Svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n      <path\r\n        d=\"M15 1H4C2.9 1 2 1.9 2 3V16C2 16.55 2.45 17 3 17C3.55 17 4 16.55 4 16V4C4 3.45 4.45 3 5 3H15C15.55 3 16 2.55 16 2C16 1.45 15.55 1 15 1ZM19 5H8C6.9 5 6 5.9 6 7V21C6 22.1 6.9 23 8 23H19C20.1 23 21 22.1 21 21V7C21 5.9 20.1 5 19 5ZM18 21H9C8.45 21 8 20.55 8 20V8C8 7.45 8.45 7 9 7H18C18.55 7 19 7.45 19 8V20C19 20.55 18.55 21 18 21Z\"\r\n        fill=\"#EAAA08\"\r\n      />\r\n    </Svg>\r\n  )\r\n\r\n  const MetamaskIcon = () => (\r\n    <Svg viewBox=\"0 0 40 40\" width=\"16px\" color=\"text\">\r\n      <path d=\"M36.0112 3.33337L22.1207 13.6277L24.7012 7.56091L36.0112 3.33337Z\" fill=\"#E17726\" />\r\n      <path d=\"M4.00261 3.33337L17.7558 13.7238L15.2989 7.56091L4.00261 3.33337Z\" fill=\"#E27625\" />\r\n      <path d=\"M31.0149 27.2023L27.3227 32.8573L35.2287 35.0397L37.4797 27.3258L31.0149 27.2023Z\" fill=\"#E27625\" />\r\n      <path d=\"M2.53386 27.3258L4.77116 35.0397L12.6772 32.8573L8.9987 27.2023L2.53386 27.3258Z\" fill=\"#E27625\" />\r\n      <path d=\"M12.2518 17.6496L10.0419 20.9712L17.8793 21.3281L17.6048 12.8867L12.2518 17.6496Z\" fill=\"#E27625\" />\r\n      <path d=\"M27.762 17.6494L22.3129 12.7905L22.1207 21.3279L29.9581 20.9711L27.762 17.6494Z\" fill=\"#E27625\" />\r\n      <path d=\"M12.6772 32.8574L17.3989 30.5652L13.336 27.3809L12.6772 32.8574Z\" fill=\"#E27625\" />\r\n      <path d=\"M22.6009 30.5652L27.3226 32.8574L26.6637 27.3809L22.6009 30.5652Z\" fill=\"#E27625\" />\r\n      <path d=\"M27.3226 32.8575L22.6009 30.5653L22.9715 33.6399L22.9303 34.9301L27.3226 32.8575Z\" fill=\"#D5BFB2\" />\r\n      <path d=\"M12.6772 32.8575L17.0694 34.9301L17.042 33.6399L17.3989 30.5653L12.6772 32.8575Z\" fill=\"#D5BFB2\" />\r\n      <path d=\"M17.1518 25.3495L13.2262 24.1965L15.9988 22.92L17.1518 25.3495Z\" fill=\"#233447\" />\r\n      <path d=\"M22.848 25.3495L24.001 22.92L26.801 24.1965L22.848 25.3495Z\" fill=\"#233447\" />\r\n      <path d=\"M12.6773 32.8573L13.3635 27.2023L8.99876 27.3258L12.6773 32.8573Z\" fill=\"#CC6228\" />\r\n      <path d=\"M26.6364 27.2023L27.3227 32.8573L31.0149 27.3258L26.6364 27.2023Z\" fill=\"#CC6228\" />\r\n      <path\r\n        d=\"M29.9581 20.9709L22.1207 21.3278L22.8482 25.3495L24.0011 22.92L26.8012 24.1965L29.9581 20.9709Z\"\r\n        fill=\"#CC6228\"\r\n      />\r\n      <path\r\n        d=\"M13.2263 24.1965L15.9989 22.92L17.1519 25.3495L17.8793 21.3278L10.0419 20.9709L13.2263 24.1965Z\"\r\n        fill=\"#CC6228\"\r\n      />\r\n      <path d=\"M10.0419 20.9709L13.3361 27.3809L13.2263 24.1965L10.0419 20.9709Z\" fill=\"#E27525\" />\r\n      <path d=\"M26.8011 24.1965L26.6638 27.3809L29.958 20.9709L26.8011 24.1965Z\" fill=\"#E27525\" />\r\n      <path d=\"M17.8793 21.3278L17.1519 25.3494L18.0715 30.0985L18.2637 23.8396L17.8793 21.3278Z\" fill=\"#E27525\" />\r\n      <path d=\"M22.1205 21.3278L21.7499 23.8258L21.9283 30.0985L22.848 25.3494L22.1205 21.3278Z\" fill=\"#E27525\" />\r\n      <path\r\n        d=\"M22.848 25.3496L21.9284 30.0987L22.601 30.5654L26.6638 27.381L26.8011 24.1967L22.848 25.3496Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n      <path\r\n        d=\"M13.2262 24.1967L13.336 27.381L17.3989 30.5654L18.0714 30.0987L17.1518 25.3496L13.2262 24.1967Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n      <path\r\n        d=\"M22.9303 34.93L22.9715 33.6398L22.6284 33.3378H17.3714L17.042 33.6398L17.0694 34.93L12.6772 32.8574L14.2145 34.1202L17.3302 36.2751H22.6696L25.7853 34.1202L27.3226 32.8574L22.9303 34.93Z\"\r\n        fill=\"#C0AC9D\"\r\n      />\r\n      <path\r\n        d=\"M22.601 30.5653L21.9284 30.0986H18.0715L17.3989 30.5653L17.0421 33.6399L17.3715 33.3379H22.6285L22.9716 33.6399L22.601 30.5653Z\"\r\n        fill=\"#161616\"\r\n      />\r\n      <path\r\n        d=\"M36.5875 14.3003L37.7542 8.61779L36.011 3.33337L22.6009 13.2846L27.7618 17.6493L35.0365 19.7768L36.6424 17.8964L35.9424 17.3886L37.0679 16.3728L36.2169 15.7003L37.3287 14.863L36.5875 14.3003Z\"\r\n        fill=\"#763E1A\"\r\n      />\r\n      <path\r\n        d=\"M2.24573 8.61779L3.42615 14.3003L2.67123 14.863L3.78302 15.7003L2.93202 16.3728L4.05753 17.3886L3.35752 17.8964L4.96343 19.7768L12.2518 17.6493L17.399 13.2846L4.00263 3.33337L2.24573 8.61779Z\"\r\n        fill=\"#763E1A\"\r\n      />\r\n      <path\r\n        d=\"M35.0365 19.777L27.7619 17.6495L29.958 20.9712L26.6638 27.3811L31.0149 27.3262H37.4797L35.0365 19.777Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n      <path\r\n        d=\"M12.2517 17.6495L4.96332 19.777L2.53386 27.3262H8.99869L13.336 27.3811L10.0419 20.9712L12.2517 17.6495Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n      <path\r\n        d=\"M22.1205 21.3276L22.6009 13.2843L24.701 7.56067H15.2988L17.3988 13.2843L17.8792 21.3276L18.0577 23.8531L18.0714 30.0984H21.9283L21.9421 23.8531L22.1205 21.3276Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n    </Svg>\r\n  )\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <Container hideInput={hideInput}>\r\n        {!hideInput && (\r\n          <LabelRow>\r\n            <RowBetween>\r\n              <Text color=\"textDisabled\" fontSize=\"14px\">\r\n                {translatedLabel}\r\n              </Text>\r\n              {account && (\r\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n                  {!hideBalance && !!currency && selectedCurrencyBalance\r\n                    ? `${t('Balance')}: ${selectedCurrencyBalance?.toSignificant(6)}`\r\n                    : ' -'}\r\n                </Text>\r\n              )}\r\n            </RowBetween>\r\n          </LabelRow>\r\n        )}\r\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\r\n          {!hideInput && (\r\n            <>\r\n              <NumericalInput\r\n                className=\"token-amount-input\"\r\n                value={value}\r\n                onUserInput={(val) => {\r\n                  onUserInput(val)\r\n                }}\r\n              />\r\n              {account && currency && showMaxButton && label !== 'To' && (\r\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\r\n                  {t('MAX')}\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n          <CurrencySelect\r\n            selected={!!currency}\r\n            className=\"open-currency-select-button\"\r\n            onClick={() => {\r\n              if (!disableCurrencySelect) {\r\n                setModalOpen(true)\r\n              }\r\n            }}\r\n          >\r\n            <Aligner>\r\n              {pair ? (\r\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\r\n              ) : currency ? (\r\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\r\n              ) : null}\r\n              {pair ? (\r\n                <Text>\r\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\r\n                </Text>\r\n              ) : (\r\n                <Text>\r\n                  {(currency && currency.symbol && currency.symbol.length > 20\r\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                        currency.symbol.length - 5,\r\n                        currency.symbol.length,\r\n                      )}`\r\n                    : currency?.symbol) || t('Select a currency')}\r\n                </Text>\r\n              )}\r\n              {!disableCurrencySelect && <ChevronDownIcon />}\r\n            </Aligner>\r\n          </CurrencySelect>\r\n\r\n          {currency?.symbol && currency?.symbol !== 'CORE' && (\r\n            <Action>\r\n              <StyleButton\r\n                small\r\n                bold\r\n                onClick={() => {\r\n                  if (navigator.clipboard) {\r\n                    navigator.clipboard.writeText(tokenAddress)\r\n                    setIsTooltipDisplayed(true)\r\n                    setTimeout(() => {\r\n                      setIsTooltipDisplayed(false)\r\n                    }, 1000)\r\n                  }\r\n                }}\r\n              >\r\n                <CopyIcon />\r\n                <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\r\n              </StyleButton>\r\n              <StyleButton\r\n                small\r\n                bold\r\n                onClick={() =>\r\n                  registerToken(\r\n                    tokenAddress,\r\n                    currency.symbol,\r\n                    currency.decimals,\r\n                    getTokenLogoURLForMetamask(currency.symbol.toLowerCase()),\r\n                  )\r\n                }\r\n              >\r\n                <MetamaskIcon />\r\n              </StyleButton>\r\n            </Action>\r\n          )}\r\n        </InputRow>\r\n        {maxAmount && (\r\n          <PercentInputRow>\r\n            {[25, 50, 75, 100].map((percent: number) => (\r\n              <PercentButton\r\n                onClick={() => onUserInput(percentAmount[percent])}\r\n                selected={maxAmount && value !== '0' && value === percentAmount[percent]}\r\n              >\r\n                {percent < 100 ? `${percent}%` : 'MAX'}\r\n              </PercentButton>\r\n            ))}\r\n          </PercentInputRow>\r\n        )}\r\n      </Container>\r\n      {!disableCurrencySelect && onCurrencySelect && (\r\n        <CurrencySearchModal\r\n          isOpen={modalOpen}\r\n          onDismiss={handleDismissSearch}\r\n          onCurrencySelect={onCurrencySelect}\r\n          selectedCurrency={currency}\r\n          otherSelectedCurrency={otherCurrency}\r\n          showCommonBases={showCommonBases}\r\n        />\r\n      )}\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useTokenContract } from '../hooks/useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\nexport function useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\r\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\r\n\r\n  return useMemo(() => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined), [\r\n    token,\r\n    allowance,\r\n  ])\r\n}\r\n\r\nexport default useTokenAllowance\r\n","import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from 'archerswap-sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { ROUTER_ADDRESS } from '../constants'\r\nimport { useTokenAllowance } from '../data/Allowances'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\nimport { useActiveWeb3React } from './index'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string,\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return tokenContract\r\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      })\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: `Approve ${amountToApprove.currency.symbol}`,\r\n          approval: { tokenAddress: token.address, spender },\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.error('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage],\r\n  )\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledRangeInput = styled.input<{ size: number; thumbColor?: string | undefined }>`\r\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\r\n  width: 100%; /* Specific width is required for Firefox. */\r\n  background: transparent; /* Otherwise white in Chrome */\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &::-moz-focus-outer {\r\n    border: 0;\r\n  }\r\n\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ thumbColor }) => thumbColor ?? '#565a69'};\r\n    border-radius: 100%;\r\n    border: none;\r\n    transform: translateY(-50%);\r\n    color: ${({ theme }) => theme.colors.invertedContrast};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-moz-range-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ thumbColor }) => thumbColor ?? '#565a69'};\r\n    border-radius: 100%;\r\n    border: none;\r\n    color: ${({ theme }) => theme.colors.invertedContrast};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-ms-thumb {\r\n    height: ${({ size }) => size}px;\r\n    width: ${({ size }) => size}px;\r\n    background-color: ${({ thumbColor }) => thumbColor ?? '#565a69'};\r\n    border-radius: 100%;\r\n    color: ${({ theme }) => theme.colors.invertedContrast};\r\n\r\n    &:hover,\r\n    &:focus {\r\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\r\n        0px 24px 32px rgba(0, 0, 0, 0.04);\r\n    }\r\n  }\r\n\r\n  &::-webkit-slider-runnable-track {\r\n    background: linear-gradient(\r\n      90deg,\r\n      ${({ theme }) => theme.colors.primaryDark},\r\n      ${({ theme }) => theme.colors.tertiary}\r\n    );\r\n    height: 2px;\r\n  }\r\n\r\n  &::-moz-range-track {\r\n    background: linear-gradient(\r\n      90deg,\r\n      ${({ theme }) => theme.colors.primaryDark},\r\n      ${({ theme }) => theme.colors.tertiary}\r\n    );\r\n    height: 2px;\r\n  }\r\n\r\n  &::-ms-track {\r\n    width: 100%;\r\n    border-color: transparent;\r\n    color: transparent;\r\n\r\n    background: ${({ theme }) => theme.colors.primaryDark};\r\n    height: 2px;\r\n  }\r\n  &::-ms-fill-lower {\r\n    background: ${({ theme }) => theme.colors.primaryDark};\r\n  }\r\n  &::-ms-fill-upper {\r\n    background: ${({ theme }) => theme.colors.tertiary};\r\n  }\r\n`\r\n\r\ninterface InputSliderProps {\r\n  value: number\r\n  onChange: (value: number) => void\r\n  step?: number\r\n  min?: number\r\n  max?: number\r\n  size?: number\r\n  customStyle?: undefined | { [key: string]: string | number }\r\n  thumbColor?: undefined | string\r\n}\r\n\r\nexport default function Slider({\r\n  value,\r\n  onChange,\r\n  min = 0,\r\n  step = 1,\r\n  max = 100,\r\n  size = 28,\r\n  customStyle,\r\n  thumbColor,\r\n}: InputSliderProps) {\r\n  const changeCallback = useCallback(\r\n    (e) => {\r\n      onChange(parseInt(e.target.value))\r\n    },\r\n    [onChange],\r\n  )\r\n\r\n  return (\r\n    <StyledRangeInput\r\n      size={size}\r\n      thumbColor={thumbColor}\r\n      type=\"range\"\r\n      value={value}\r\n      style={customStyle ?? { width: '90%', marginLeft: 15, marginRight: 15, padding: '15px 0' }}\r\n      onChange={changeCallback}\r\n      aria-labelledby=\"input slider\"\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n    />\r\n  )\r\n}\r\n","import { Currency, CurrencyAmount, JSBI, Pair, Percent, TokenAmount } from 'archerswap-sdk'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { usePair } from '../../data/Reserves'\r\nimport { useTotalSupply } from '../../data/TotalSupply'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { tryParseAmount } from '../swap/hooks'\r\nimport { useTokenBalances } from '../wallet/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport function useBurnState(): AppState['burn'] {\r\n  return useSelector<AppState, AppState['burn']>((state) => state.burn)\r\n}\r\n\r\nexport function useDerivedBurnInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n): {\r\n  pair?: Pair | null\r\n  parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: CurrencyAmount\r\n    [Field.CURRENCY_B]?: CurrencyAmount\r\n  }\r\n  error?: string\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { independentField, typedValue } = useBurnState()\r\n\r\n  // pair + totalsupply\r\n  const [, pair] = usePair(currencyA, currencyB)\r\n\r\n  // balances\r\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\r\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\r\n\r\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n  const tokens = {\r\n    [Field.CURRENCY_A]: tokenA,\r\n    [Field.CURRENCY_B]: tokenB,\r\n    [Field.LIQUIDITY]: pair?.liquidityToken,\r\n  }\r\n\r\n  // liquidity values\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n  const liquidityValueA =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenA &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\r\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\r\n      : undefined\r\n  const liquidityValueB =\r\n    pair &&\r\n    totalSupply &&\r\n    userLiquidity &&\r\n    tokenB &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\r\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\r\n      : undefined\r\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\r\n    [Field.CURRENCY_A]: liquidityValueA,\r\n    [Field.CURRENCY_B]: liquidityValueB,\r\n  }\r\n\r\n  let percentToRemove: Percent = new Percent('0', '100')\r\n  // user specified a %\r\n  if (independentField === Field.LIQUIDITY_PERCENT) {\r\n    percentToRemove = new Percent(typedValue, '100')\r\n  }\r\n  // user specified a specific amount of liquidity tokens\r\n  else if (independentField === Field.LIQUIDITY) {\r\n    if (pair?.liquidityToken) {\r\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\r\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\r\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\r\n      }\r\n    }\r\n  }\r\n  // user specified a specific amount of token a or b\r\n  else if (tokens[independentField]) {\r\n    const independentAmount = tryParseAmount(typedValue, tokens[independentField])\r\n    const liquidityValue = liquidityValues[independentField]\r\n    if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\r\n      percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\r\n    }\r\n  }\r\n\r\n  const parsedAmounts: {\r\n    [Field.LIQUIDITY_PERCENT]: Percent\r\n    [Field.LIQUIDITY]?: TokenAmount\r\n    [Field.CURRENCY_A]?: TokenAmount\r\n    [Field.CURRENCY_B]?: TokenAmount\r\n  } = {\r\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\r\n    [Field.LIQUIDITY]:\r\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\r\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_A]:\r\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\r\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\r\n        : undefined,\r\n    [Field.CURRENCY_B]:\r\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\r\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\r\n        : undefined,\r\n  }\r\n\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = 'Connect Wallet'\r\n  }\r\n\r\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? 'Enter an amount'\r\n  }\r\n\r\n  return { pair, parsedAmounts, error }\r\n}\r\n\r\nexport function useBurnActionHandlers(): {\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return {\r\n    onUserInput,\r\n  }\r\n}\r\n","/* eslint-disable react/jsx-no-bind */\r\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { splitSignature } from '@ethersproject/bytes'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, Percent, WETH } from 'archerswap-sdk'\r\nimport { Button, Flex, Text } from 'archerswap-uikit'\r\nimport { ArrowDown, Plus } from 'react-feather'\r\nimport { RouteComponentProps } from 'react-router'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\r\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport { RowBetween, RowFixed } from '../../components/Row'\r\n\r\nimport Slider from '../../components/Slider'\r\nimport CurrencyLogo from '../../components/CurrencyLogo'\r\nimport { ROUTER_ADDRESS } from '../../constants'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { usePairContract } from '../../hooks/useContract'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { StyledInternalLink } from '../../components/Shared'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport AppBody from '../AppBody'\r\nimport { ClickableText, Wrapper } from '../Pool/styleds'\r\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\r\nimport { Dots } from '../../components/swap/styleds'\r\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState } from '../../state/burn/hooks'\r\n\r\nimport { Field } from '../../state/burn/actions'\r\nimport { useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\r\n\r\nconst OutlineCard = styled.div`\r\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  border-radius: 16px;\r\n  padding: 24px;\r\n`\r\n\r\nconst Body = styled.div`\r\n  padding-left: 24px;\r\n  padding-right: 24px;\r\n`\r\n\r\nexport default function RemoveLiquidity({\r\n  history,\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const TranslateString = useI18n()\r\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [\r\n    currencyA,\r\n    currencyB,\r\n    chainId,\r\n  ])\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  // burn state\r\n  const { independentField, typedValue } = useBurnState()\r\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\r\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\r\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\r\n\r\n  // txn values\r\n  const [txHash, setTxHash] = useState<string>('')\r\n  const [deadline] = useUserDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const formattedAmounts = {\r\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\r\n      ? '0'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\r\n      ? '<1'\r\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\r\n    [Field.LIQUIDITY]:\r\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_A]:\r\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    [Field.CURRENCY_B]:\r\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\r\n\r\n  // pair contract\r\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\r\n\r\n  // allowance handling\r\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\r\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS)\r\n  async function onAttemptToApprove() {\r\n    if (!pairContract || !pair || !library) throw new Error('missing dependencies')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n    // try to gather a signature for permission\r\n    const nonce = await pairContract.nonces(account)\r\n\r\n    const deadlineForSignature: number = Math.ceil(Date.now() / 1000) + deadline\r\n\r\n    const EIP712Domain = [\r\n      { name: 'name', type: 'string' },\r\n      { name: 'version', type: 'string' },\r\n      { name: 'chainId', type: 'uint256' },\r\n      { name: 'verifyingContract', type: 'address' },\r\n    ]\r\n    const domain = {\r\n      name: 'Archerswap LPs',\r\n      version: '1',\r\n      chainId,\r\n      verifyingContract: pair.liquidityToken.address,\r\n    }\r\n    const Permit = [\r\n      { name: 'owner', type: 'address' },\r\n      { name: 'spender', type: 'address' },\r\n      { name: 'value', type: 'uint256' },\r\n      { name: 'nonce', type: 'uint256' },\r\n      { name: 'deadline', type: 'uint256' },\r\n    ]\r\n    const message = {\r\n      owner: account,\r\n      spender: ROUTER_ADDRESS,\r\n      value: liquidityAmount.raw.toString(),\r\n      nonce: nonce.toHexString(),\r\n      deadline: deadlineForSignature,\r\n    }\r\n    const data = JSON.stringify({\r\n      types: {\r\n        EIP712Domain,\r\n        Permit,\r\n      },\r\n      domain,\r\n      primaryType: 'Permit',\r\n      message,\r\n    })\r\n\r\n    library\r\n      .send('eth_signTypedData_v4', [account, data])\r\n      .then(splitSignature)\r\n      .then((signature) => {\r\n        setSignatureData({\r\n          v: signature.v,\r\n          r: signature.r,\r\n          s: signature.s,\r\n          deadline: deadlineForSignature,\r\n        })\r\n      })\r\n      .catch((e) => {\r\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\r\n        if (e?.code !== 4001) {\r\n          approveCallback()\r\n        }\r\n      })\r\n  }\r\n\r\n  // wrapped onUserInput to clear signatures\r\n  const onUserInput = useCallback(\r\n    (field: Field, val: string) => {\r\n      setSignatureData(null)\r\n      return _onUserInput(field, val)\r\n    },\r\n    [_onUserInput],\r\n  )\r\n\r\n  const onLiquidityInput = useCallback((val: string): void => onUserInput(Field.LIQUIDITY, val), [onUserInput])\r\n  const onCurrencyAInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_A, val), [onUserInput])\r\n  const onCurrencyBInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_B, val), [onUserInput])\r\n\r\n  // tx sending\r\n  const addTransaction = useTransactionAdder()\r\n  async function onRemove() {\r\n    if (!chainId || !library || !account) throw new Error('missing dependencies')\r\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\r\n    if (!currencyAmountA || !currencyAmountB) {\r\n      throw new Error('missing currency amounts')\r\n    }\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\r\n    }\r\n\r\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\r\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\r\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\r\n\r\n    const currencyBIsETH = currencyB === ETHER\r\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\r\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\r\n\r\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\r\n\r\n    let methodNames: string[]\r\n    let args: Array<string | string[] | number | boolean>\r\n    // we have approval, use normal remove liquidity\r\n    if (approval === ApprovalState.APPROVED) {\r\n      // removeLiquidityETH\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          deadlineFromNow,\r\n        ]\r\n      }\r\n      // removeLiquidity\r\n      else {\r\n        methodNames = ['removeLiquidity']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          deadlineFromNow,\r\n        ]\r\n      }\r\n    }\r\n    // we have a signataure, use permit versions of remove liquidity\r\n    else if (signatureData !== null) {\r\n      // removeLiquidityETHWithPermit\r\n      if (oneCurrencyIsETH) {\r\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\r\n        args = [\r\n          currencyBIsETH ? tokenA.address : tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\r\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n      // removeLiquidityETHWithPermit\r\n      else {\r\n        methodNames = ['removeLiquidityWithPermit']\r\n        args = [\r\n          tokenA.address,\r\n          tokenB.address,\r\n          liquidityAmount.raw.toString(),\r\n          amountsMin[Field.CURRENCY_A].toString(),\r\n          amountsMin[Field.CURRENCY_B].toString(),\r\n          account,\r\n          signatureData.deadline,\r\n          false,\r\n          signatureData.v,\r\n          signatureData.r,\r\n          signatureData.s,\r\n        ]\r\n      }\r\n    } else {\r\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\r\n    }\r\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\r\n      methodNames.map((methodName, index) =>\r\n        router.estimateGas[methodName](...args)\r\n          .then(calculateGasMargin)\r\n          .catch((e) => {\r\n            console.error(`estimateGas failed`, index, methodName, args, e)\r\n            return undefined\r\n          }),\r\n      ),\r\n    )\r\n\r\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\r\n      BigNumber.isBigNumber(safeGasEstimate),\r\n    )\r\n\r\n    // all estimations failed...\r\n    if (indexOfSuccessfulEstimation === -1) {\r\n      console.error('This transaction would fail. Please contact support.')\r\n    } else {\r\n      const methodName = methodNames[indexOfSuccessfulEstimation]\r\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\r\n\r\n      setAttemptingTxn(true)\r\n      await router[methodName](...args, {\r\n        gasLimit: safeGasEstimate,\r\n      })\r\n        .then((response: TransactionResponse) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n              currencyA?.symbol\r\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        })\r\n        .catch((e: Error) => {\r\n          setAttemptingTxn(false)\r\n          // we only care if the error is something _other_ than the user rejected the tx\r\n          console.error(e)\r\n        })\r\n    }\r\n  }\r\n\r\n  function modalHeader() {\r\n    return (\r\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\r\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\r\n              {currencyA?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowFixed>\r\n          <Plus size=\"16\" color={theme.colors.textSubtle} />\r\n        </RowFixed>\r\n        <RowBetween align=\"flex-end\">\r\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\r\n          <RowFixed gap=\"4px\">\r\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\r\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\r\n              {currencyB?.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n\r\n        <Text small color=\"textSubtle\" textAlign=\"left\" padding=\"12px 0 0 0\" style={{ fontStyle: 'italic' }}>\r\n          {`Output is estimated. If the price changes by more than ${\r\n            allowedSlippage / 100\r\n          }% your transaction will revert.`}\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  function modalBottom() {\r\n    return (\r\n      <>\r\n        <RowBetween>\r\n          <Text color=\"textSubtle\">{`LP ${currencyA?.symbol}/${currencyB?.symbol}`} Burned</Text>\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin />\r\n            <Text>{parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}</Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        {pair && (\r\n          <>\r\n            <RowBetween>\r\n              <Text color=\"textSubtle\">{TranslateString(1182, 'Price')}</Text>\r\n              <Text>\r\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n            <RowBetween>\r\n              <div />\r\n              <Text>\r\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n              </Text>\r\n            </RowBetween>\r\n          </>\r\n        )}\r\n        <Button disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\r\n          {TranslateString(1136, 'Confirm')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const pendingText = `Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\r\n    currencyA?.symbol\r\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencyB?.symbol}`\r\n\r\n  const liquidityPercentChangeCallback = useCallback(\r\n    (value: number) => {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(WETH[chainId], currencyA)) ||\r\n        (currencyB && currencyEquals(WETH[chainId], currencyB))),\r\n  )\r\n\r\n  const handleSelectCurrencyA = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\r\n        history.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\r\n      } else {\r\n        history.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, history],\r\n  )\r\n  const handleSelectCurrencyB = useCallback(\r\n    (currency: Currency) => {\r\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\r\n        history.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\r\n      } else {\r\n        history.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\r\n      }\r\n    },\r\n    [currencyIdA, currencyIdB, history],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    setShowConfirm(false)\r\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\r\n    }\r\n    setTxHash('')\r\n  }, [onUserInput, txHash])\r\n\r\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\r\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\r\n    liquidityPercentChangeCallback,\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <AppBody>\r\n        <AddRemoveTabs adding={false} />\r\n        <Wrapper>\r\n          <TransactionConfirmationModal\r\n            isOpen={showConfirm}\r\n            onDismiss={handleDismissConfirmation}\r\n            attemptingTxn={attemptingTxn}\r\n            hash={txHash || ''}\r\n            content={() => (\r\n              <ConfirmationModalContent\r\n                title={TranslateString(1156, 'You will receive')}\r\n                onDismiss={handleDismissConfirmation}\r\n                topContent={modalHeader}\r\n                bottomContent={modalBottom}\r\n              />\r\n            )}\r\n            pendingText={pendingText}\r\n          />\r\n          <AutoColumn gap=\"md\">\r\n            <Body>\r\n              <OutlineCard>\r\n                <AutoColumn>\r\n                  <RowBetween>\r\n                    <Text>Amount</Text>\r\n                    <ClickableText\r\n                      onClick={() => {\r\n                        setShowDetailed(!showDetailed)\r\n                      }}\r\n                    >\r\n                      {showDetailed ? TranslateString(1184, 'Simple') : TranslateString(1186, 'Detailed')}\r\n                    </ClickableText>\r\n                  </RowBetween>\r\n                  <Flex justifyContent=\"start\">\r\n                    <Text fontSize=\"64px\">{formattedAmounts[Field.LIQUIDITY_PERCENT]}%</Text>\r\n                  </Flex>\r\n                  {!showDetailed && (\r\n                    <>\r\n                      <Flex mb=\"8px\">\r\n                        <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\r\n                      </Flex>\r\n                      <Flex justifyContent=\"space-around\">\r\n                        <Button\r\n                          variant=\"tertiary\"\r\n                          scale=\"sm\"\r\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}\r\n                        >\r\n                          25%\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"tertiary\"\r\n                          scale=\"sm\"\r\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}\r\n                        >\r\n                          50%\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"tertiary\"\r\n                          scale=\"sm\"\r\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}\r\n                        >\r\n                          75%\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"tertiary\"\r\n                          scale=\"sm\"\r\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                        >\r\n                          {TranslateString(166, 'Max')}\r\n                        </Button>\r\n                      </Flex>\r\n                    </>\r\n                  )}\r\n                </AutoColumn>\r\n              </OutlineCard>\r\n            </Body>\r\n            {!showDetailed && (\r\n              <>\r\n                <ColumnCenter>\r\n                  <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\r\n                </ColumnCenter>\r\n                <Body>\r\n                  <OutlineCard>\r\n                    <AutoColumn gap=\"10px\">\r\n                      <RowBetween>\r\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_A] || '-'}</Text>\r\n                        <RowFixed>\r\n                          <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\r\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokena-symbol\">\r\n                            {currencyA?.symbol}\r\n                          </Text>\r\n                        </RowFixed>\r\n                      </RowBetween>\r\n                      <RowBetween>\r\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_B] || '-'}</Text>\r\n                        <RowFixed>\r\n                          <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\r\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokenb-symbol\">\r\n                            {currencyB?.symbol}\r\n                          </Text>\r\n                        </RowFixed>\r\n                      </RowBetween>\r\n                      {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\r\n                        <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n                          {oneCurrencyIsETH ? (\r\n                            <StyledInternalLink\r\n                              to={`/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${\r\n                                currencyB === ETHER ? WETH[chainId].address : currencyIdB\r\n                              }`}\r\n                            >\r\n                              {TranslateString(1188, 'Receive WCORE')}\r\n                            </StyledInternalLink>\r\n                          ) : oneCurrencyIsWETH ? (\r\n                            <StyledInternalLink\r\n                              to={`/remove/${\r\n                                currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'CORE' : currencyIdA\r\n                              }/${currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'CORE' : currencyIdB}`}\r\n                            >\r\n                              {TranslateString(1190, 'Receive CORE')}\r\n                            </StyledInternalLink>\r\n                          ) : null}\r\n                        </RowBetween>\r\n                      ) : null}\r\n                    </AutoColumn>\r\n                  </OutlineCard>\r\n                </Body>\r\n              </>\r\n            )}\r\n            <Body style={{ paddingBottom: '24px' }}>\r\n              {showDetailed && (\r\n                <>\r\n                  <CurrencyInputPanel\r\n                    value={formattedAmounts[Field.LIQUIDITY]}\r\n                    onUserInput={onLiquidityInput}\r\n                    onMax={() => {\r\n                      onUserInput(Field.LIQUIDITY_PERCENT, '100')\r\n                    }}\r\n                    showMaxButton={!atMaxAmount}\r\n                    disableCurrencySelect\r\n                    currency={pair?.liquidityToken}\r\n                    pair={pair}\r\n                    id=\"liquidity-amount\"\r\n                  />\r\n                  <ColumnCenter>\r\n                    <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\r\n                  </ColumnCenter>\r\n                  <CurrencyInputPanel\r\n                    hideBalance\r\n                    value={formattedAmounts[Field.CURRENCY_A]}\r\n                    onUserInput={onCurrencyAInput}\r\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                    showMaxButton={!atMaxAmount}\r\n                    currency={currencyA}\r\n                    label=\"Output\"\r\n                    onCurrencySelect={handleSelectCurrencyA}\r\n                    id=\"remove-liquidity-tokena\"\r\n                  />\r\n                  <ColumnCenter>\r\n                    <Plus size=\"16\" color={theme.colors.textSubtle} />\r\n                  </ColumnCenter>\r\n                  <CurrencyInputPanel\r\n                    hideBalance\r\n                    value={formattedAmounts[Field.CURRENCY_B]}\r\n                    onUserInput={onCurrencyBInput}\r\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\r\n                    showMaxButton={!atMaxAmount}\r\n                    currency={currencyB}\r\n                    label=\"Output\"\r\n                    onCurrencySelect={handleSelectCurrencyB}\r\n                    id=\"remove-liquidity-tokenb\"\r\n                  />\r\n                </>\r\n              )}\r\n              {pair && (\r\n                <div style={{ padding: '24px' }}>\r\n                  <Flex justifyContent=\"space-between\" mb=\"8px\">\r\n                    Price:\r\n                    <div>\r\n                      1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\r\n                    </div>\r\n                  </Flex>\r\n                  <Flex justifyContent=\"space-between\">\r\n                    <div />\r\n                    <div>\r\n                      1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\r\n                    </div>\r\n                  </Flex>\r\n                </div>\r\n              )}\r\n              <div style={{ position: 'relative' }}>\r\n                {!account ? (\r\n                  <ConnectWalletButton width=\"100%\" />\r\n                ) : (\r\n                  <RowBetween>\r\n                    <Button\r\n                      onClick={onAttemptToApprove}\r\n                      variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary'}\r\n                      disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\r\n                      mr=\"8px\"\r\n                    >\r\n                      {approval === ApprovalState.PENDING ? (\r\n                        <Dots>Approving</Dots>\r\n                      ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\r\n                        'Approved'\r\n                      ) : (\r\n                        'Approve'\r\n                      )}\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        setShowConfirm(true)\r\n                      }}\r\n                      disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\r\n                      variant={\r\n                        !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                          ? 'danger'\r\n                          : 'primary'\r\n                      }\r\n                    >\r\n                      {error || 'Remove'}\r\n                    </Button>\r\n                  </RowBetween>\r\n                )}\r\n              </div>\r\n            </Body>\r\n          </AutoColumn>\r\n        </Wrapper>\r\n      </AppBody>\r\n\r\n      {pair ? (\r\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\r\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n        </AutoColumn>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\n\r\n/**\r\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\r\n * @param value value that is rapidly changing\r\n * @param onChange change handler that should receive the debounced updates to the value\r\n * @param debouncedMs how long we should wait for changes to be applied\r\n */\r\nexport default function useDebouncedChangeHandler<T>(\r\n  value: T,\r\n  onChange: (newValue: T) => void,\r\n  debouncedMs = 100,\r\n): [T, (value: T) => void] {\r\n  const [inner, setInner] = useState<T>(() => value)\r\n  const timer = useRef<ReturnType<typeof setTimeout>>()\r\n\r\n  const onChangeInner = useCallback(\r\n    (newValue: T) => {\r\n      setInner(newValue)\r\n      if (timer.current) {\r\n        clearTimeout(timer.current)\r\n      }\r\n      timer.current = setTimeout(() => {\r\n        onChange(newValue)\r\n        timer.current = undefined\r\n      }, debouncedMs)\r\n    },\r\n    [debouncedMs, onChange],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n      timer.current = undefined\r\n    }\r\n    setInner(value)\r\n  }, [value])\r\n\r\n  return [inner, onChangeInner]\r\n}\r\n"],"sourceRoot":""}