{"version":3,"sources":["components/Column/index.tsx","components/Row/index.tsx","state/multicall/hooks.ts","components/archer/CoinLogo.ts","components/CurrencyLogo/index.tsx","hooks/Tokens.ts","state/wallet/hooks.ts","components/QuestionHelper/index.tsx","state/lists/hooks.ts","state/user/hooks.tsx","components/Shared/Common.tsx","contexts/Localisation/translationsContext.ts","hooks/useI18n.ts","utils/wrappedCurrency.ts","components/Logo/index.tsx","components/Card/index.tsx","data/Reserves.ts","utils/isZero.ts","state/transactions/hooks.tsx","components/DoubleLogo/index.tsx","components/swap/styleds.tsx","utils/prices.ts","components/Modal/index.tsx","components/CardNav/index.tsx","components/Loader/index.tsx","hooks/useLast.ts","components/Popover/index.tsx","components/Tooltip/index.tsx","views/AppBody.tsx","hooks/useHttpLocations.ts","hooks/useENSContentHash.ts","components/ListLogo/index.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/styleds.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/filtering.ts","components/SearchModal/SortButton.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","hooks/useOnClickOutside.tsx","components/SearchModal/ListSelect.tsx","hooks/useToggle.ts","utils/listVersionLabel.ts","components/SearchModal/CurrencySearchModal.tsx","hooks/useENS.ts","hooks/useENSName.ts","hooks/useENSAddress.ts","hooks/Trades.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","components/ConnectWalletButton/index.tsx","components/TransactionConfirmationModal/helpers.tsx","components/TransactionConfirmationModal/ConfirmationPendingContent.tsx","components/TransactionConfirmationModal/TransactionSubmittedContent.tsx","components/TransactionConfirmationModal/TransactionConfirmationModal.tsx","components/TransactionConfirmationModal/ConfirmationModalContent.tsx","components/TransactionConfirmationModal/TransactionErrorContent.tsx","components/TransactionConfirmationModal/index.tsx","components/NumericalInput/index.tsx","components/CurrencyInputPanel/index.tsx","data/Allowances.ts","hooks/useApproveCallback.ts","utils/maxAmountSpend.ts","components/PageHeader/SlippageToleranceSetting.tsx","components/PageHeader/TransactionDeadlineSetting.tsx","components/PageHeader/ExpertModeSetting.tsx","components/PageHeader/SettingsModal.tsx","components/PageHeader/RecentTransactionsModal.tsx","components/PageHeader/index.tsx","components/AddressInputPanel/index.tsx","components/swap/FormattedPriceImpact.tsx","components/swap/SwapModalFooter.tsx","components/swap/SwapModalHeader.tsx","components/swap/ConfirmSwapModal.tsx","components/swap/SwapRoute.tsx","components/swap/AdvancedSwapDetails.tsx","components/swap/AdvancedSwapDetailsDropdown.tsx","components/swap/TradePrice.tsx","components/TokenWarningModal/index.tsx","components/SyrupWarningModal/index.tsx","components/ProgressSteps/index.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","hooks/useBlock.ts","hooks/useSwapMining.ts","views/Swap/index.tsx","components/swap/confirmPriceImpactWithoutFee.ts"],"names":["Column","styled","div","ColumnCenter","AutoColumn","gap","justify","Row","Box","align","padding","border","borderRadius","RowBetween","RowFlat","AutoRow","RowFixed","isMethodArg","x","indexOf","isValidMethodArgs","undefined","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","data","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","options","chainId","useActiveWeb3React","callResults","useSelector","state","multicall","dispatch","useDispatch","serializedCallKeys","useMemo","JSON","stringify","filter","c","Boolean","map","toCallKey","sort","useEffect","callKeys","parse","length","key","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","error","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","console","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","address","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","addresses","useSingleCallResult","CoinLogo","Logo","size","getTokenLogoURLForMetamask","symbol","StyledCoreLogo","img","StyledLogo","CurrencyLogo","currency","style","srcs","WrappedTokenInfo","tokenInfo","logoURI","ETHER","src","alt","useAllTokens","userAddedTokens","useUserAddedTokens","allTokens","useSelectedTokenList","reduce","tokenMap","token","useIsUserAddedToken","find","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","parseBytes32String","useToken","tokenAddress","tokens","isAddress","tokenContract","useTokenContract","tokenContractBytes32","useBytes32TokenContract","tokenName","tokenNameBytes32","symbolBytes32","decimals","Token","useCurrency","currencyId","isCORE","toUpperCase","useTokenBalancesWithLoadingIndicator","validatedTokens","t","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","memo","i","value","amount","JSBI","BigInt","toString","TokenAmount","useTokenBalances","useTokenBalance","account","tokenBalances","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useMulticallContract","a","CurrencyAmount","ether","useETHBalances","useCurrencyBalance","useAllTokenBalances","Object","values","QuestionWrapper","theme","colors","invertedContrast","textSubtle","QuestionHelper","text","useState","show","setShow","open","useCallback","close","marginLeft","onClick","onMouseEnter","onMouseLeave","tags","name","this","EMPTY_LIST","ChainId","MAINNET","BSCTESTNET","listCache","WeakMap","useTokenList","url","lists","byUrl","current","list","get","tagId","id","Error","set","listToTokenMap","useSelectedListUrl","selectedListUrl","useSelectedListInfo","selectedUrl","listsByUrl","pending","pendingUpdate","loadingRequestId","serializeToken","deserializeToken","serializedToken","useIsExpertMode","user","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useUserSlippageTolerance","userSlippageTolerance","slippageTolerance","updateUserSlippageTolerance","useUserDeadline","userDeadline","deadline","updateUserDeadline","useAddUserToken","addSerializedToken","useRemoveUserAddedToken","removeSerializedToken","serializedTokensMap","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","getAddress","useTrackedTokenPairs","pinnedPairs","PINNED_PAIRS","generatedPairs","flatMap","keys","BASES_TO_TRACK_LIQUIDITY_FOR","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","sorted","sortsBefore","LinkStyledButton","button","disabled","primary","StyledInternalLink","Link","StyledLink","ExternalLink","target","href","rel","rest","handleClick","event","ctrlKey","metaKey","preventDefault","rotate","keyframes","Spinner","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","useI18n","useContext","translationId","fallback","foundTranslation","translation","stringId","includesVariable","includes","interpolatedText","isEmpty","forEach","dataKey","templateKey","RegExp","replace","wrappedCurrency","WETH","wrappedCurrencyAmount","currencyAmount","raw","unwrappedToken","equals","BAD_SRCS","refresh","s","onError","Card","LightCard","borderColor","background","GreyCard","tertiary","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","isZero","hexNumberString","useTransactionAdder","response","summary","approval","hash","addTransaction","from","useAllTransactions","transactions","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","spender","allTransactions","receipt","Wrapper","sizeraw","margin","HigherLogo","CoveredLogo","DoubleCurrencyLogo","currency0","currency1","ArrowWrapper","clickable","css","SectionBreak","BottomGrouping","ErrorText","Text","severity","failure","binance","StyledBalanceMaxMini","Dots","span","SwapCallbackErrorInner","transparentize","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","BASE_FEE","Percent","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","trade","realizedLPFee","route","currentFee","multiply","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","computeSlippageAdjustedAmounts","allowedSlippage","pct","basisPointsToPercent","Field","INPUT","maximumAmountIn","OUTPUT","minimumAmountOut","warningSeverity","lessThan","BLOCKED_PRICE_IMPACT_NON_EXPERT","ALLOWED_PRICE_IMPACT_HIGH","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_LOW","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","attrs","card","mediaQueries","lg","sm","Modal","onDismiss","initialFocusRef","children","fadeTransition","useTransition","config","duration","opacity","enter","leave","item","props","aria-label","isMobile","tabIndex","StyledNav","TabContainer","TabItem","active","Bridge","Nav","activeIndex","React","activeTab","useTranslation","to","StyledSVG","svg","stroke","Loader","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","useLast","filterFn","last","setLast","prev","isDefined","useLastTruthy","PopoverContainer","ReferenceElement","Arrow","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","offset","element","styles","update","attributes","updateCallback","useInterval","ref","popper","className","arrow","TooltipContainer","Tooltip","MouseoverTooltip","BodyWrapper","AppBody","useHttpLocations","uri","ens","parseENSAddress","resolvedContentHash","ensName","ensNodeArgument","namehash","registrarContract","useENSRegistrarContract","resolverAddressResult","resolverAddress","resolverContract","useENSResolverContract","contenthash","useENSContentHash","uriToHttp","contenthashToUri","StyledListLogo","ListLogo","BaseWrapper","disable","CommonBases","onSelect","selectedCurrency","TranslateString","fontSize","marginRight","SUGGESTED_BASES","selected","FadedSpan","PaddedColumn","MenuItem","SearchInput","input","textDisabled","Separator","SeparatorDark","currencyKey","StyledBalanceText","Tag","Balance","balance","title","toExact","TagContainer","TokenTags","tag","description","slice","join","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","isTokenOnList","customAdded","removeToken","addToken","stopPropagation","justifySelf","CurrencyList","height","onCurrencySelect","otherCurrency","fixedListRef","showETH","itemData","Currency","index","itemKey","width","itemCount","itemSize","filterTokens","search","searchingAddress","lowerSearchParts","toLowerCase","split","matchesSearch","sParts","sp","startsWith","endsWith","FilterWrapper","SortButton","toggleSortOrder","ascending","useTokenComparator","comparator","balanceA","balanceB","balanceComp","greaterThan","equalTo","getTokenComparator","CurrencySearch","otherSelectedCurrency","showCommonBases","onChangeList","fixedList","ThemeContext","useRef","searchQuery","setSearchQuery","invertSearchOrder","setInvertSearchOrder","isAddressSearch","searchToken","trim","tokenComparator","audioPlay","filteredTokens","filteredSortedTokens","symbolMatch","handleCurrencySelect","audio","document","getElementById","play","inputRef","handleInput","checksummedInput","scrollTo","handleEnter","e","flex","type","placeholder","onChange","onKeyDown","iso","disableWidth","useOnClickOutside","node","handler","handlerRef","handleClickOutside","contains","addEventListener","removeEventListener","UnpaddedLinkStyledButton","StyledMenu","StyledListUrlText","ListOrigin","listUrl","host","lowerListUrl","URL","listUrlRowHTMLId","ListRow","onBack","initialState","setState","toggle","useToggle","version","selectThisList","selectList","handleAcceptListUpdate","acceptListUpdate","handleRemoveList","window","prompt","removeList","bold","overflow","textOverflow","marginTop","display","variant","major","minor","patch","minWidth","ListContainer","ListSelect","listUrlInput","setListUrlInput","adding","addError","setAddError","fetchList","useFetchListCallback","handleAddList","then","catch","message","validUrl","handleEnterKey","sortedLists","u1","u2","l1","l2","cursor","maxWidth","color","textAlign","CurrencySearchModal","listView","setListView","lastOpen","handleClickChangeList","handleClickBack","noListSelected","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","substr","changed","ENSName","useENSName","lookup","debouncedName","addr","useENSAddress","useAllCommonPairs","bases","BASES_TO_CHECK_TRADES_AGAINST","basePairs","otherBase","t0","t1","allPairCombinations","customBases","CUSTOM_BASES","customBasesA","customBasesB","allPairs","curr","liquidityToken","useSwapState","swap","useSwapActionHandlers","onCurrencySelection","field","selectCurrency","onSwitchTokens","switchCurrencies","onUserInput","typedValue","typeInput","onChangeRecipient","recipient","setRecipient","tryParseAmount","typedValueParsed","parseUnits","info","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","useDerivedSwapInfo","inputError","independentField","inputCurrencyId","outputCurrencyId","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","useTradeExactIn","bestTradeExactOut","currencyIn","currencyAmountOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseFloat","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","replaceSwapState","UnlockButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","Section","ConfirmedIcon","BottomSection","StyledContentHeader","Heading","ContentHeader","CustomLightSpinner","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","getSnowtraceLink","mt","TransactionConfirmationModal","attemptingTxn","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","StyledInput","inputRegex","Input","nextUserInput","escapeRegExp","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","PercentInputRow","PercentButton","role","CurrencySelect","darken","LabelRow","Aligner","InputPanel","hideInput","Container","shadows","inset","Action","StyleButton","isTooltipDisplayed","contrast","CurrencyInputPanel","onMax","showMaxButton","maxAmount","label","disableCurrencySelect","hideBalance","modalOpen","setModalOpen","selectedCurrencyBalance","translatedLabel","handleDismissSearch","tokenKey","setIsTooltipDisplayed","percentAmount","25","50","75","100","CopyIcon","MetamaskIcon","val","scale","small","navigator","clipboard","writeText","setTimeout","registerToken","percent","useTokenAllowance","owner","allowance","ApprovalState","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","approvalState","APPROVED","PENDING","NOT_APPROVED","UNKNOWN","approve","useExact","estimateGas","MaxUint256","estimatedGas","gasLimit","calculateGasMargin","useApproveCallbackFromTrade","ROUTER_ADDRESS","maxAmountSpend","MIN_ETH","StyledSlippageToleranceSettings","Option","Options","Label","predefinedValues","SlippageToleranceSettings","setUserslippageTolerance","setValue","setError","rawValue","Number","fontWeight","mb","mr","predefinedValue","alignItems","step","min","evt","inputValue","isWarning","StyledTransactionDeadlineSetting","TransactionDeadlineSetting","setDeadline","parseInt","ExpertModeSetting","isExpertMode","checked","defaultOnDismiss","SettingsModal","SlippageToleranceSetting","newTransactionsFirst","b","RecentTransactionsModal","sortedRecentTransactions","justifyContent","flexDirection","sortedRecentTransaction","status","icon","getRowStatus","HistoryIcon","StyledPageHeader","Details","PageHeader","isShowSetting","useModal","onPresentSettings","onPresentRecentTransactions","ContainerRow","InputContainer","AddressInputPanel","withoutSpaces","autoCapitalize","FormattedPriceImpact","ONE_BIPS","toFixed","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","tradeType","TradeType","EXACT_INPUT","PriceInfoText","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","shortenAddress","ConfirmSwapModal","originalTrade","txHash","tradeB","tradeA","modalHeader","modalBottom","confirmationContent","px","py","my","flexWrap","isLastItem","flexShrink","ml","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","price","formattedPrice","baseCurrency","quoteCurrency","WarningContainer","StyledWarningIcon","AlertTriangle","TokenWarningCard","tokenSymbol","duplicateNameOrSymbol","userToken","TokenWarningModal","understandChecked","setUnderstandChecked","toggleUnderstand","uc","handleDismiss","htmlFor","userSelect","as","SyrupWarningModal","transactionType","Grouping","Circle","confirmed","backgroundDisabled","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","recipientAddressOrName","library","recipientAddress","getRouterContract","swapMethods","push","Router","swapCallParameters","feeOnTransfer","Math","floor","BIPS_BASE","ttl","parameters","useSwapCallback","swapCalls","VALID","callback","Promise","all","args","gasEstimate","gasError","callStatic","callError","errorMessage","reason","estimatedCalls","successfulEstimation","el","ix","errorCalls","inputSymbol","outputSymbol","withRecipient","code","WrapType","NOT_APPLICABLE","wrapType","web3","getWeb3NoAccount","useBlock","block","setBlock","interval","setInterval","eth","getBlockNumber","clearInterval","useSwapMiningReward","swapReward","setSwapReward","swapMiningContract","useSwapMiningContract","fetch","getTotalUserReward","rewardObj","BigNumber","toNumber","WithdrawWrapper","isDark","Swap","loadedUrlParams","useTheme","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","isSyrup","setIsSyrup","syrupTransactionType","setSyrupTransactionType","urlLoadedTokens","handleConfirmTokenWarning","handleConfirmSyrupWarning","swapInputError","wethContract","useWETHContract","sufficientBalance","WRAP","execute","deposit","txReceipt","UNWRAP","withdraw","useWrapCallback","onWrap","wrapInputError","showWrap","parsedAmounts","isValid","dependentField","handleTypeInput","handleTypeOutput","showConfirm","tradeToConfirm","setSwapState","formattedAmounts","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","swapCallback","swapCallbackError","handleSwap","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","confirm","confirmPriceImpactWithoutFee","prevState","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","checkForSyrup","purchaseType","handleInputSelect","handleMaxInput","handleOutputSelect","swapMiningReward","takerWithdraw","useTakerWithdrawCallback","CardNav","ConnectWalletButton"],"mappings":"mOAEMA,EAASC,UAAOC,IAAV,yGAKCC,EAAeF,kBAAOD,EAAPC,CAAH,oEAKZG,EAAaH,UAAOC,IAAV,oHAML,gBAAGG,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGhCN,O,iNCnBTO,EAAMN,kBAAOO,MAAPP,CAAH,0JAIQ,qBAAGQ,OAAqB,YAC5B,qBAAGC,WACJ,qBAAGC,UACI,qBAAGC,gBAGTC,EAAaZ,kBAAOM,EAAPN,CAAH,+DAIVa,EAAUb,UAAOC,IAAV,wEAKPa,EAAUd,kBAAOM,EAAPN,CAAH,wIAER,gBAAGI,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAGD,OAIJW,EAAWf,kBAAOM,EAAPN,CAAH,mEAET,gBAAGI,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MAGrBE,O,kCClCf,qLAuBA,SAASU,EAAYC,GACnB,OAAmD,IAA5C,CAAC,SAAU,UAAUC,eAAeD,GAG7C,SAASE,EAAkBF,GACzB,YACQG,IAANH,GACCI,MAAMC,QAAQL,IAAMA,EAAEM,OAAM,SAACC,GAAD,OAAQR,EAAYQ,IAAQH,MAAMC,QAAQE,IAAOA,EAAGD,MAAMP,MAU3F,IAAMS,EAA6B,CAAEC,OAAO,EAAOC,iBAAaP,EAAWQ,UAAMR,GAGpES,EAAgC,CAC3CC,eAAgBC,KAIlB,SAASC,EAAaC,EAA6BC,GACjD,IAAQC,EAAYC,cAAZD,QACFE,EAAcC,aAClB,SAACC,GAAD,OAAWA,EAAMC,UAAUH,eAEvBI,EAAWC,cAEXC,EAA6BC,mBACjC,4BACEC,KAAKC,UAAL,iBACEb,QADF,IACEA,GADF,UACEA,EACIc,QAAO,SAACC,GAAD,OAAkBC,QAAQD,aAFvC,iBACE,EAEIE,IAAIC,YAHV,aACE,EAGIC,cAJN,QAIgB,MAElB,CAACnB,IA4BH,OAxBAoB,qBAAU,WACR,IAAMC,EAAqBT,KAAKU,MAAMZ,GACtC,GAAKR,GAA+B,IAApBmB,EAASE,OAAzB,CAEA,IAAMvB,EAAQqB,EAASJ,KAAI,SAACO,GAAD,OAASC,YAAaD,MASjD,OARAhB,EACEkB,YAAsB,CACpBxB,UACAF,QACAC,aAIG,WACLO,EACEmB,YAAyB,CACvBzB,UACAF,QACAC,iBAIL,CAACC,EAASM,EAAUP,EAASS,IAEzBC,mBACL,kBAEEX,EAAMiB,KAAgB,SAACW,GAAU,IAAD,EAC9B,IAAK1B,IAAY0B,EAAM,OAAOpC,EAE9B,IAAMqC,EAAM,UAAGzB,EAAYF,UAAf,aAAG,EAAuBgB,YAAUU,IAGhD,MAAO,CAAEnC,OAAO,EAAME,MAFH,OAANkC,QAAM,IAANA,OAAA,EAAAA,EAAQlC,OAAyB,QAAX,OAANkC,QAAM,IAANA,OAAA,EAAAA,EAAQlC,MAAgBkC,EAAOlC,KAAO,KAEvCD,YAAW,OAAEmC,QAAF,IAAEA,OAAF,EAAEA,EAAQnC,kBAErD,CAACU,EAAaJ,EAAOE,IAgBzB,IAAM4B,EAAgC,CAAErC,OAAO,EAAOoC,YAAQ1C,EAAW4C,SAAS,EAAOC,SAAS,EAAOC,OAAO,GAC1GC,EAAgC,CAAEzC,OAAO,EAAMoC,YAAQ1C,EAAW4C,SAAS,EAAMC,SAAS,EAAMC,OAAO,GAE7G,SAASE,EACPC,EACAC,EACAC,EACAC,GAEA,IAAKH,EAAY,OAAON,EACxB,IAAQrC,EAA6B2C,EAA7B3C,MAAOE,EAAsByC,EAAtBzC,KAAMD,EAAgB0C,EAAhB1C,YACrB,IAAKD,EAAO,OAAOqC,EACnB,GAAIrC,IAAUC,EAAa,OAAOwC,EAClC,IAAKG,IAAsBC,IAAaC,EAAmB,OAAOL,EAClE,IAEIL,EAFEW,EAAU7C,GAAQA,EAAK4B,OAAS,EAChCS,GAAU,OAACtC,QAAD,IAACA,IAAe,GAAK6C,EAErC,GAAIC,GAAW7C,EACb,IACEkC,EAASQ,EAAkBI,qBAAqBH,EAAU3C,GAC1D,MAAOsC,GAEP,OADAS,QAAQT,MAAM,6BAA8BK,EAAU3C,GAC/C,CACLF,OAAO,EACPsC,SAAS,EACTE,OAAO,EACPD,UACAH,UAIN,MAAO,CACLpC,OAAO,EACPsC,SAAS,EACTC,UACAH,SACAI,OAAQO,GAIL,SAASG,EACdC,EACAC,EACAC,EACA7C,GAEA,IAAMqC,EAAW3B,mBAAQ,+BAAMiC,QAAN,IAAMA,GAAN,UAAMA,EAAUG,iBAAhB,aAAM,EAAqBC,YAAYH,KAAa,CAACD,EAAUC,IAelFI,EAAUlD,EAbFY,mBACZ,kBACEiC,GAAYN,GAAYQ,GAAcA,EAAWvB,OAAS,EACtDuB,EAAW7B,KAAU,SAACiC,GACpB,MAAO,CACLC,QAASP,EAASO,QAClBC,SAAUR,EAASG,UAAUM,mBAAmBf,EAAUY,OAG9D,KACN,CAACJ,EAAYF,EAAUN,IAGWrC,GAE9BsC,EAAoBe,cAE1B,OAAO3C,mBAAQ,WACb,OAAOsC,EAAQhC,KAAI,SAACY,GAAD,OAAYM,EAAYN,EAAD,OAASe,QAAT,IAASA,OAAT,EAASA,EAAUG,UAAWT,EAAUC,QACjF,CAACD,EAAUM,EAAUK,EAASV,IAG5B,SAASgB,EACdC,EACAnB,EACAQ,EACAC,EACA7C,GAEA,IAAMqC,EAAW3B,mBAAQ,kBAAM0B,EAAkBW,YAAYH,KAAa,CAACR,EAAmBQ,IACxFO,EAA+BzC,mBACnC,kBACE2B,GAAYpD,EAAkB4D,GAC1BT,EAAkBgB,mBAAmBf,EAAUQ,QAC/C3D,IACN,CAAC2D,EAAYT,EAAmBC,IAkB5BW,EAAUlD,EAfFY,mBACZ,kBACE2B,GAAYkB,GAAaA,EAAUjC,OAAS,GAAK6B,EAC7CI,EAAUvC,KAAsB,SAACkC,GAC/B,OAAOA,GAAWC,EACd,CACED,UACAC,iBAEFjE,KAEN,KACN,CAACqE,EAAWJ,EAAUd,IAGYrC,GAE9BsC,EAAoBe,cAE1B,OAAO3C,mBAAQ,WACb,OAAOsC,EAAQhC,KAAI,SAACY,GAAD,OAAYM,EAAYN,EAAQQ,EAAmBC,EAAUC,QAC/E,CAACD,EAAUW,EAASZ,EAAmBE,IAGrC,SAASkB,EACdb,EACAC,EACAK,EACAjD,GAEA,IAAMqC,EAAW3B,mBAAQ,+BAAMiC,QAAN,IAAMA,GAAN,UAAMA,EAAUG,iBAAhB,aAAM,EAAqBC,YAAYH,KAAa,CAACD,EAAUC,IAalFhB,EAAS9B,EAXDY,mBAAgB,WAC5B,OAAOiC,GAAYN,GAAYpD,EAAkBgE,GAC7C,CACE,CACEC,QAASP,EAASO,QAClBC,SAAUR,EAASG,UAAUM,mBAAmBf,EAAUY,KAG9D,KACH,CAACN,EAAUN,EAAUY,IAEWjD,GAAS,GACtCsC,EAAoBe,cAE1B,OAAO3C,mBAAQ,WACb,OAAOwB,EAAYN,EAAD,OAASe,QAAT,IAASA,OAAT,EAASA,EAAUG,UAAWT,EAAUC,KACzD,CAACV,EAAQe,EAAUN,EAAUC,M,kKCvPnBmB,EALE3F,kBAAO4F,IAAP5F,CAAH,2DACH,qBAAG6F,QACF,qBAAGA,Q,OCEFC,EAA6B,SAACC,GACzC,MAAM,2CAAN,OAAkDA,EAAlD,SAGIC,EAAiBhG,UAAOiG,IAAV,qIACT,qBAAGJ,QACF,qBAAGA,QAKTK,EAAalG,kBAAO4F,IAAP5F,CAAH,2DACL,qBAAG6F,QACF,qBAAGA,QAGA,SAASM,EAAT,GAQX,IAAD,IAPDC,EAOC,EAPDA,SAOC,IANDP,YAMC,MANM,OAMN,EALDQ,EAKC,EALDA,MAMMC,EAAiB,CAACF,aAAoBG,IAAmBH,EAASI,UAAUC,aAAUrF,GAC5F,OAAIgF,IAAaM,QACR,cAACV,EAAD,CAAgBW,IAAI,yBAAyBd,KAAMA,EAAMQ,MAAOA,KAGlE,OAACD,QAAD,IAACA,OAAD,EAACA,EAAkBL,QACxB,cAAC,EAAD,CAAUF,KAAMA,EAAMS,KAAMA,EAAMM,IAAG,2BAAKR,QAAL,IAAKA,OAAL,EAAKA,EAAUL,cAAf,QAAyB,QAAzB,SAAyCM,MAAOA,IAErF,cAACH,EAAD,CAAYL,KAAMA,EAAMS,KAAMA,EAAMM,IAAG,2BAAKR,QAAL,IAAKA,OAAL,EAAKA,EAAUL,cAAf,QAAyB,QAAzB,SAAyCM,MAAOA,M,qQC5BpF,SAASQ,IACd,IAAQ1E,EAAYC,cAAZD,QACF2E,EAAkBC,cAClBC,EAAYC,cAElB,OAAOrE,mBAAQ,WACb,OAAKT,EAEH2E,EAEGI,QACC,SAACC,EAAUC,GAET,OADAD,EAASC,EAAMhC,SAAWgC,EACnBD,IALb,eASSH,EAAU7E,KAXA,KAcpB,CAACA,EAAS2E,EAAiBE,IAIzB,SAASK,EAAoBjB,GAElC,QADwBW,cACCO,MAAK,SAACF,GAAD,OAAWG,yBAAenB,EAAUgB,MAIpE,IAAMI,EAAgB,sBACtB,SAASC,EAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAIlE,OAAS,EACvBkE,EACAC,GAAWH,EAAcK,KAAKF,GAC9BG,YAAmBH,GACnBC,EAMC,SAASG,EAASC,GACvB,IAAQ7F,EAAYC,cAAZD,QACF8F,EAASpB,IAETzB,EAAU8C,YAAUF,GAEpBG,EAAgBC,YAAiBhD,QAAWhE,GAAW,GACvDiH,EAAuBC,YAAwBlD,QAAWhE,GAAW,GACrEgG,EAA2BhC,EAAU6C,EAAO7C,QAAWhE,EAEvDmH,EAAY7C,YAAoB0B,OAAQhG,EAAY+G,EAAe,YAAQ/G,EAAWS,KACtF2G,EAAmB9C,YACvB0B,OAAQhG,EAAYiH,EACpB,YACAjH,EACAS,KAEIkE,EAASL,YAAoB0B,OAAQhG,EAAY+G,EAAe,cAAU/G,EAAWS,KACrF4G,EAAgB/C,YAAoB0B,OAAQhG,EAAYiH,EAAsB,cAAUjH,EAAWS,KACnG6G,EAAWhD,YAAoB0B,OAAQhG,EAAY+G,EAAe,gBAAY/G,EAAWS,KAE/F,OAAOe,mBAAQ,WACb,GAAIwE,EAAO,OAAOA,EAClB,GAAKjF,GAAYiD,EAAjB,CACA,GAAIsD,EAAS1E,SAAW+B,EAAO/B,SAAWuE,EAAUvE,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAI0E,EAAS5E,OACX,OAAO,IAAI6E,QACTxG,EACAiD,EACAsD,EAAS5E,OAAO,GAChB2D,EAAoB,UAAC1B,EAAOjC,cAAR,aAAC,EAAgB,GAAjB,UAAqB2E,EAAc3E,cAAnC,aAAqB,EAAuB,GAAI,WACpE2D,EAAoB,UAACc,EAAUzE,cAAX,aAAC,EAAmB,GAApB,UAAwB0E,EAAiB1E,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACDsB,EACAjD,EACAuG,EAAS1E,QACT0E,EAAS5E,OACTiC,EAAO/B,QACP+B,EAAOjC,OACP2E,EAAc3E,OACdsD,EACAmB,EAAUvE,QACVuE,EAAUzE,OACV0E,EAAiB1E,SAId,SAAS8E,EAAYC,GAC1B,IAAMC,EAAuC,UAApB,OAAVD,QAAU,IAAVA,OAAA,EAAAA,EAAYE,eACrB3B,EAAQW,EAASe,OAAS1H,EAAYyH,GAC5C,OAAOC,EAASpC,QAAQU,I,kCC3G1B,qRAkDO,SAAS4B,EACd5D,EACA6C,GAEA,IAAMgB,EAA2BrG,mBAC/B,yCAAMqF,QAAN,IAAMA,OAAN,EAAMA,EAAQlF,QAAO,SAACmG,GAAD,OAAqD,IAA1BhB,YAAS,OAACgB,QAAD,IAACA,OAAD,EAACA,EAAG9D,mBAA7D,QAAoF,KACpF,CAAC6C,IAGGkB,EAA0BvG,mBAAQ,kBAAMqG,EAAgB/F,KAAI,SAACkG,GAAD,OAAQA,EAAGhE,aAAU,CAAC6D,IAElFI,EAAW7D,YAA8B2D,EAAyBG,IAAiB,YAAa,CAAClE,IAEjGmE,EAAsB3G,mBAAQ,kBAAMyG,EAASG,MAAK,SAACC,GAAD,OAAeA,EAAUzF,aAAU,CAACqF,IAE5F,MAAO,CACLzG,mBACE,kBACEwC,GAAW6D,EAAgBzF,OAAS,EAChCyF,EAAgB/B,QAA4D,SAACwC,EAAMtC,EAAOuC,GAAO,IAAD,IACxFC,EAAK,OAAGP,QAAH,IAAGA,GAAH,UAAGA,EAAWM,UAAd,iBAAG,EAAe7F,cAAlB,aAAG,EAAwB,GAChC+F,EAASD,EAAQE,OAAKC,OAAOH,EAAMI,iBAAc5I,EAIvD,OAHIyI,IACFH,EAAKtC,EAAMhC,SAAW,IAAI6E,cAAY7C,EAAOyC,IAExCH,IACN,IACH,KACN,CAACtE,EAAS6D,EAAiBI,IAE7BE,GAIG,SAASW,EACd9E,EACA6C,GAEA,OAAOe,EAAqC5D,EAAS6C,GAAQ,GAIxD,SAASkC,EAAgBC,EAAkBhD,GAChD,IAAMiD,EAAgBH,EAAiBE,EAAS,CAAChD,IACjD,GAAKA,EACL,OAAOiD,EAAcjD,EAAMhC,SAGtB,SAASkF,EACdF,EACAG,GAEA,IAAMtC,EAASrF,mBAAQ,yCAAM2H,QAAN,IAAMA,OAAN,EAAMA,EAAYxH,QAAO,SAACqD,GAAD,OAAiCA,aAAoBuC,kBAA9E,QAAwF,KAAI,CACjH4B,IAGIF,EAAgBH,EAAiBE,EAASnC,GAE1CuC,EAhGD,SACLC,GAIA,IAAMC,EAAoBC,cAEpBlF,EAAsB7C,mBAC1B,kBACE6H,EACIA,EACGvH,IAAIgF,KACJnF,QAAO,SAAC6H,GAAD,OAA0B,IAANA,KAC3BxH,OACH,KACN,CAACqH,IAGGvF,EAAUN,YACd8F,EACA,gBACAjF,EAAUvC,KAAI,SAACkC,GAAD,MAAa,CAACA,OAG9B,OAAOxC,mBACL,kBACE6C,EAAUyB,QAA8C,SAACwC,EAAMtE,EAASuE,GAAO,IAAD,IACtEC,EAAK,OAAG1E,QAAH,IAAGA,GAAH,UAAGA,EAAUyE,UAAb,iBAAG,EAAc7F,cAAjB,aAAG,EAAuB,GAErC,OADI8F,IAAOF,EAAKtE,GAAWyF,iBAAeC,MAAMhB,OAAKC,OAAOH,EAAMI,cAC3DN,IACN,MACL,CAACjE,EAAWP,IAiEK6F,CADUnI,mBAAQ,yCAAM2H,QAAN,IAAMA,OAAN,EAAMA,EAAYf,MAAK,SAACpD,GAAD,OAAcA,IAAaM,kBAAlD,WAAmE,CAAC6D,IACzD,CAACH,GAAW,IAE5D,OAAOxH,mBACL,yCACE2H,QADF,IACEA,OADF,EACEA,EAAYrH,KAAI,SAACkD,GACf,GAAKgE,GAAYhE,EACjB,OAAIA,aAAoBuC,QAAc0B,EAAcjE,EAAShB,SACzDgB,IAAaM,QAAc8D,EAAWJ,QAA1C,YAJJ,QAMQ,KACR,CAACA,EAASG,EAAYC,EAAYH,IAI/B,SAASW,EAAmBZ,EAAkBhE,GACnD,OAAOkE,EAAoBF,EAAS,CAAChE,IAAW,GAI3C,SAAS6E,IACd,IAAQb,EAAYhI,cAAZgI,QACFpD,EAAYH,cAEZwC,EAAWa,EAAgB,OAACE,QAAD,IAACA,SAAWhJ,EADtBwB,mBAAQ,kBAAMsI,OAAOC,OAAP,OAAcnE,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAOqC,QAAP,IAAOA,IAAY,K,yHC/Hf+B,EAAkBpL,UAAOC,IAAV,uTAUI,qBAAGoL,MAAkBC,OAAOC,oBAC1C,qBAAGF,MAAkBC,OAAOE,cAQxB,SAASC,EAAT,GAAqD,IAA3BC,EAA0B,EAA1BA,KACvC,EAAwBC,oBAAkB,GAA1C,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAOC,uBAAY,kBAAMF,GAAQ,KAAO,CAACA,IACzCG,EAAQD,uBAAY,kBAAMF,GAAQ,KAAQ,CAACA,IAEjD,OACE,sBAAMxF,MAAO,CAAE4F,WAAY,GAA3B,SACE,cAAC,IAAD,CAASP,KAAMA,EAAME,KAAMA,EAA3B,SACE,cAACR,EAAD,CAAiBc,QAASJ,EAAMK,aAAcL,EAAMM,aAAcJ,EAAlE,SAEE,qBAAKrF,IAAI,uBAAuBC,IAAI,iB,qPCrBjCL,EAAb,kDAKE,WAAYC,EAAsB6F,GAAkB,IAAD,8BACjD,cAAM7F,EAAUrE,QAASqE,EAAUpB,QAASoB,EAAUkC,SAAUlC,EAAUT,OAAQS,EAAU8F,OAL9E9F,eAImC,IAFnC6F,UAEmC,EAEjD,EAAK7F,UAAYA,EACjB,EAAK6F,KAAOA,EAHqC,EALrD,yCAWE,WACE,OAAOE,KAAK/F,UAAUC,YAZ1B,GAAsCkC,SAqBhC6D,GAA2B,mBAC9BC,UAAQC,QAAU,IADY,cAE9BD,UAAQE,WAAa,IAFS,GAK3BC,EACe,qBAAZC,QAA0B,IAAIA,QAAwC,KA+BxE,SAASC,EAAaC,GAC3B,IAAMC,EAAQ1K,aAAkD,SAACC,GAAD,OAAWA,EAAMyK,MAAMC,SACvF,OAAOrK,mBAAQ,WAAO,IAAD,EACnB,IAAKmK,EAAK,OAAOP,EACjB,IAAMU,EAAO,UAAGF,EAAMD,UAAT,aAAG,EAAYG,QAC5B,IAAKA,EAAS,OAAOV,EACrB,IACE,OApCC,SAAwBW,GAC7B,IAAMrJ,EAAM,OAAG8I,QAAH,IAAGA,OAAH,EAAGA,EAAWQ,IAAID,GAC9B,GAAIrJ,EAAQ,OAAOA,EAEnB,IAAMZ,EAAMiK,EAAKlF,OAAOf,QACtB,SAACC,EAAUX,GAAe,IAAD,MACjB6F,EAAe,oBACnB7F,EAAU6F,YADS,iBACnB,EACInJ,KAAI,SAACmK,GAAW,IAAD,EACf,GAAI,UAACF,EAAKd,YAAN,aAAC,EAAYgB,GACjB,OAAO,2BAAKF,EAAKd,KAAKgB,IAAtB,IAA8BC,GAAID,cAJnB,aACnB,EAKItK,QAAO,SAAC9B,GAAD,OAAqBgC,QAAQhC,aANrB,QAM4B,GAC3CmG,EAAQ,IAAIb,EAAiBC,EAAW6F,GAC9C,QAA+CjL,IAA3C+F,EAASC,EAAMjF,SAASiF,EAAMhC,SAAwB,MAAMmI,MAAM,qBACtE,OAAO,2BACFpG,GADL,kBAEGC,EAAMjF,QAFT,2BAGOgF,EAASC,EAAMjF,UAHtB,kBAIKiF,EAAMhC,QAAUgC,QAfb,eAmBLoF,IAGP,OADS,OAATI,QAAS,IAATA,KAAWY,IAAIL,EAAMjK,GACdA,EAUIuK,CAAeP,GACtB,MAAOhJ,GAEP,OADAS,QAAQT,MAAM,yCAA0CA,GACjDsI,KAER,CAACQ,EAAOD,IAGN,SAASW,IACd,OAAOpL,aAA4D,SAACC,GAAD,OAAWA,EAAMyK,MAAMW,mBAGrF,SAAS1G,IACd,OAAO6F,EAAaY,KAGf,SAASE,IAAmG,IAAD,IAC1GC,EAAcH,IACdI,EAAaxL,aAAkD,SAACC,GAAD,OAAWA,EAAMyK,MAAMC,SACtFE,EAAOU,EAAcC,EAAWD,QAAezM,EACrD,MAAO,CACL8L,QAAO,iBAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAMD,eAAR,QAAmB,KAC1Ba,QAAO,iBAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAMa,qBAAR,QAAyB,KAChChK,QAAoC,QAAvB,OAAJmJ,QAAI,IAAJA,OAAA,EAAAA,EAAMc,qB,udC7EnB,SAASC,EAAe9G,GACtB,MAAO,CACLjF,QAASiF,EAAMjF,QACfiD,QAASgC,EAAMhC,QACfsD,SAAUtB,EAAMsB,SAChB3C,OAAQqB,EAAMrB,OACduG,KAAMlF,EAAMkF,MAIhB,SAAS6B,EAAiBC,GACxB,OAAO,IAAIzF,QACTyF,EAAgBjM,QAChBiM,EAAgBhJ,QAChBgJ,EAAgB1F,SAChB0F,EAAgBrI,OAChBqI,EAAgB9B,MAoDb,SAAS+B,IACd,OAAO/L,aAA0D,SAACC,GAAD,OAAWA,EAAM+L,KAAKC,kBAGlF,SAASC,IACd,IAAM/L,EAAWC,cACX+L,EAAaJ,IAEbK,EAAsB3C,uBAAY,WACtCtJ,EAASkM,YAAqB,CAAEJ,gBAAiBE,OAChD,CAACA,EAAYhM,IAEhB,MAAO,CAACgM,EAAYC,GAGf,SAASE,IACd,IAAMnM,EAAWC,cAYjB,MAAO,CAXuBJ,aAAiE,SAACC,GAC9F,OAAOA,EAAM+L,KAAKO,yBAGa9C,uBAC/B,SAAC+C,GACCrM,EAASsM,YAA4B,CAAEF,sBAAuBC,OAEhE,CAACrM,KAME,SAASuM,IACd,IAAMvM,EAAWC,cAYjB,MAAO,CAXcJ,aAAwD,SAACC,GAC5E,OAAOA,EAAM+L,KAAKW,gBAGIlD,uBACtB,SAACmD,GACCzM,EAAS0M,YAAmB,CAAEF,aAAcC,OAE9C,CAACzM,KAME,SAAS2M,IACd,IAAM3M,EAAWC,cACjB,OAAOqJ,uBACL,SAAC3E,GACC3E,EAAS4M,YAAmB,CAAEjB,gBAAiBF,EAAe9G,QAEhE,CAAC3E,IAIE,SAAS6M,IACd,IAAM7M,EAAWC,cACjB,OAAOqJ,uBACL,SAAC5J,EAAiBiD,GAChB3C,EAAS8M,YAAsB,CAAEpN,UAASiD,eAE5C,CAAC3C,IAIE,SAASsE,IACd,IAAQ5E,EAAYC,cAAZD,QACFqN,EAAsBlN,aAAkD,qBAAGgM,KAAQrG,UAEzF,OAAOrF,mBAAQ,WAAO,IAAD,EACnB,OAAKT,EACE+I,OAAOC,OAAP,UAAcqE,EAAoBrN,UAAlC,QAAyD,IAAIe,IAAIiL,GADnD,KAEpB,CAACqB,EAAqBrN,IAG3B,SAASsN,EAAcC,GACrB,MAAO,CACLC,OAAQzB,EAAewB,EAAKC,QAC5BC,OAAQ1B,EAAewB,EAAKE,SAIzB,SAASC,IACd,IAAMpN,EAAWC,cAEjB,OAAOqJ,uBACL,SAAC2D,GACCjN,EAASqN,YAAkB,CAAEC,eAAgBN,EAAcC,QAE7D,CAACjN,IASE,SAASuN,EAAT,GAAsE,IAAD,mBAAxCC,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAIvH,QAAMsH,EAAO9N,QAASgO,OAAKC,WAAWH,EAAQC,GAAS,GAAI,iBAAkB,aAMnF,SAASG,IACd,IAAQlO,EAAYC,cAAZD,QACF8F,EAASpB,cAGTyJ,EAAc1N,mBAAQ,wBAAOT,GAAO,UAAGoO,IAAapO,UAAhB,QAAiC,KAAK,CAACA,IAG3EqO,EAAmC5N,mBACvC,kBACET,EACIsO,IAAQvF,OAAOwF,KAAKzI,IAAS,SAACD,GAAkB,IAAD,EACvCZ,EAAQa,EAAOD,GAErB,OAEE,UAAC2I,IAA6BxO,UAA9B,QAA0C,IAEvCe,KAAI,SAAC0N,GACJ,OAAIA,EAAKxL,UAAYgC,EAAMhC,QAClB,KAEF,CAACwL,EAAMxJ,MAEfrE,QAAO,SAAC8N,GAAD,OAAkC,OAANA,QAG1C,KACN,CAAC5I,EAAQ9F,IAIL2O,EAAuBxO,aAAiD,qBAAGgM,KAAQyC,SAEnFC,EAA8BpO,mBAAQ,WAC1C,IAAKT,IAAY2O,EAAsB,MAAO,GAC9C,IAAMG,EAAWH,EAAqB3O,GACtC,OAAK8O,EAEE/F,OAAOwF,KAAKO,GAAU/N,KAAI,SAACgO,GAChC,MAAO,CAAC/C,EAAiB8C,EAASC,GAAQvB,QAASxB,EAAiB8C,EAASC,GAAQtB,YAHjE,KAKrB,CAACkB,EAAsB3O,IAEpBgP,EAAevO,mBAAQ,kBAAMoO,EAAUI,OAAOZ,GAAgBY,OAAOd,KAAc,CACvFE,EACAF,EACAU,IAGF,OAAOpO,mBAAQ,WAEb,IAAMyO,EAAQF,EAAajK,QAA0C,SAACwC,EAAD,GAA6B,IAAD,mBAApBuG,EAAoB,KAAZC,EAAY,KACzFoB,EAASrB,EAAOsB,YAAYrB,GAC5BzM,EAAM6N,EAAM,UAAMrB,EAAO7K,QAAb,YAAwB8K,EAAO9K,SAA/B,UAA8C8K,EAAO9K,QAArD,YAAgE6K,EAAO7K,SACzF,OAAIsE,EAAKjG,KACTiG,EAAKjG,GAAO6N,EAAS,CAACrB,EAAQC,GAAU,CAACA,EAAQD,IAD3BvG,IAGrB,IAEH,OAAOwB,OAAOwF,KAAKW,GAAOnO,KAAI,SAACO,GAAD,OAAS4N,EAAM5N,QAC5C,CAAC0N,M,+OChQOK,EAAmBxR,UAAOyR,OAAV,kTAKjB,qBAAGC,SAA2B,UAAY,aAC3C,gBAAGrG,EAAH,EAAGA,MAAH,SAAUqG,SAA2BrG,EAAMC,OAAOE,WAAaH,EAAMC,OAAOqG,WAIhE,qBAAGD,SAA2B,KAAO,eAKrC,qBAAGA,SAA2B,KAAO,eAS/CE,EAAqB5R,kBAAO6R,IAAP7R,CAAH,0RAGpB,qBAAGqL,MAAkBC,OAAOqG,WAiBjCG,EAAa9R,UAAO4K,EAAV,0RAGL,qBAAGS,MAAkBC,OAAOqG,WAoBhC,SAASI,EAAT,GAK8E,IAAD,IAJlFC,cAIkF,MAJzE,SAIyE,EAHlFC,EAGkF,EAHlFA,KAGkF,IAFlFC,WAEkF,MAF5E,sBAE4E,EAD/EC,EAC+E,uCAC5EC,EAAcrG,uBAClB,SAACsG,GACkB,WAAXL,GAAuBK,EAAMC,SAAWD,EAAME,SAClDF,EAAMG,mBAGV,CAACR,IAEH,OAAO,cAACF,EAAD,aAAYE,OAAQA,EAAQE,IAAKA,EAAKD,KAAMA,EAAM/F,QAASkG,GAAiBD,IAGrF,IAAMM,EAASC,oBAAH,sHASCC,EAAU3S,UAAOiG,IAAV,kGACFwM,I,sDC5FZG,EAA4C,CAChDC,aAAc,GACdC,gBAAiB,cAGNC,EAAsBC,wBAAcJ,GCmClCK,IAvCC,WACd,IAAQJ,EAAiBK,qBAAWH,GAA5BF,aAER,OAAO,SAACM,EAAuBC,GAA8C,IAA5BxR,EAA2B,uDAAP,GACnE,GAA4B,IAAxBiR,EAAarP,OACf,OAAO4P,EAGT,IAAMC,EAAmBR,EAAavL,MAAK,SAACgM,GAC1C,OAAOA,EAAY1R,KAAK2R,WAAaJ,KAGvC,GAAIE,EAAkB,CACpB,IAAQ3H,EAAS2H,EAAiBzR,KAA1B8J,KACF8H,EAAmB9H,EAAK+H,SAAS,KAEvC,GAAID,EAAkB,CACpB,IAAIE,EAAmBhI,EAGvB,OAAIiI,kBAAQ/R,GACHwR,GAGTlI,OAAOwF,KAAK9O,GAAMgS,SAAQ,SAACC,GACzB,IAAMC,EAAc,IAAIC,OAAJ,WAAeF,EAAf,KAA2B,KAC/CH,EAAmBA,EAAiBM,QAAQF,EAAalS,EAAKiS,OAGzDH,GAGT,OAAOhI,EAGT,OAAO0H,K,kCC3CX,kHAEO,SAASa,EAAgB7N,EAAgCjE,GAE9D,OAAOA,GAAWiE,IAAaM,QAAQwN,OAAK/R,GAAWiE,aAAoBuC,QAAQvC,OAAWhF,EAGzF,SAAS+S,EACdC,EACAjS,GAEA,IAAMiF,EAAQgN,GAAkBjS,EAAU8R,EAAgBG,EAAehO,SAAUjE,QAAWf,EAC9F,OAAOgG,GAASgN,EAAiB,IAAInK,cAAY7C,EAAOgN,EAAeC,UAAOjT,EAGzE,SAASkT,EAAelN,GAC7B,OAAIA,EAAMmN,OAAOL,OAAK9M,EAAMjF,UAAkBuE,QACvCU,I,yHCdHoN,EAA6C,GAYpC,SAAS5O,EAAT,GAAkD,IAAlCU,EAAiC,EAAjCA,KAAMM,EAA2B,EAA3BA,IAAQuL,EAAmB,8BAC9D,EAAoBxG,mBAAiB,GAA5B8I,EAAT,oBAEM9N,EAA0BL,EAAKgB,MAAK,SAACoN,GAAD,OAAQF,EAASE,MAE3D,OAAI/N,EAEA,+CACMwL,GADN,IAEEvL,IAAKA,EACLD,IAAKA,EACLgO,QAAS,WACHhO,IAAK6N,EAAS7N,IAAO,GACzB8N,GAAQ,SAAC9K,GAAD,OAAOA,EAAI,SAMpB,cAAC,IAAD,eAAgBwI,M,+HChCnByC,EAAO5U,UAAOC,IAAV,kGAGG,qBAAGQ,WACJ,qBAAGC,UAEAkU,MAER,IAAMC,EAAY7U,kBAAO4U,EAAP5U,CAAH,gFACA,qBAAGqL,MAAkBC,OAAOwJ,eAC5B,qBAAGzJ,MAAkBC,OAAOyJ,cAGrCC,EAAWhV,kBAAO4U,EAAP5U,CAAH,sDACC,qBAAGqL,MAAkBC,OAAO2J,a,4ICLtCC,E,qEAFNC,EAAiB,IAAIC,IAAUC,KAS9B,SAASC,EAAS/K,GACvB,IAAQpI,EAAYC,cAAZD,QAEF8F,EAASrF,mBACb,kBACE2H,EAAWrH,KAAI,mCAAEqS,EAAF,KAAaC,EAAb,WAA4B,CACzCvB,YAAgBsB,EAAWpT,GAC3B8R,YAAgBuB,EAAWrT,SAE/B,CAACA,EAASoI,IAGNkL,EAAgB7S,mBACpB,kBACEqF,EAAO/E,KAAI,YAAuB,IAAD,mBAApB+M,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAOsE,OAAOrE,GAAUC,OAAKC,WAAWH,EAAQC,QAAU9O,OAE1F,CAAC6G,IAGG/C,EAAUM,YAA8BiQ,EAAeN,EAAgB,eAE7E,OAAOvS,mBAAQ,WACb,OAAOsC,EAAQhC,KAAI,SAACY,EAAQ6F,GAC1B,IAAgB+L,EAAsB5R,EAA9BA,OAAkBE,EAAYF,EAAZE,QACpBiM,EAAShI,EAAO0B,GAAG,GACnBuG,EAASjI,EAAO0B,GAAG,GAEzB,GAAI3F,EAAS,MAAO,CAACkR,EAAUS,QAAS,MACxC,IAAK1F,IAAWC,GAAUD,EAAOsE,OAAOrE,GAAS,MAAO,CAACgF,EAAUU,QAAS,MAC5E,IAAKF,EAAU,MAAO,CAACR,EAAUW,WAAY,MAC7C,IAAQC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SAClB,EAAyB9F,EAAOsB,YAAYrB,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAON,EAAP,KAAeC,EAAf,KACA,MAAO,CACLsF,EAAUc,OACV,IAAI7F,OAAK,IAAIlG,cAAY0F,EAAQmG,EAAS9L,YAAa,IAAIC,cAAY2F,EAAQmG,EAAS/L,mBAG3F,CAAC9E,EAAS+C,IAGR,SAASgO,EAAQhG,EAAmBC,GACzC,OAAOoF,EAAS,CAAC,CAACrF,EAAQC,KAAU,I,SAjD1BgF,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,wCCPG,SAASgB,EAAOC,GAC7B,MAAO,SAAStO,KAAKsO,GALvB,mC,kCCCA,4KASO,SAASC,IAId,MAA6BhU,cAArBD,EAAR,EAAQA,QAASiI,EAAjB,EAAiBA,QACX3H,EAAWC,cAEjB,OAAOqJ,uBACL,SACEsK,GAEI,IAAD,yDADiG,GAAlGC,EACC,EADDA,QAASC,EACR,EADQA,SAEX,GAAKnM,GACAjI,EAAL,CAEA,IAAQqU,EAASH,EAATG,KACR,IAAKA,EACH,MAAMjJ,MAAM,8BAEd9K,EAASgU,YAAe,CAAED,OAAME,KAAMtM,EAASjI,UAASoU,WAAUD,gBAEpE,CAAC7T,EAAUN,EAASiI,IAKjB,SAASuM,IAAgE,IAAD,EACrExU,EAAYC,cAAZD,QAEFI,EAAQD,aAAgD,SAACoS,GAAD,OAAOA,EAAEkC,gBAEvE,OAAOzU,GAAO,UAAGI,EAAMJ,UAAT,QAA0B,GAenC,SAAS0U,EAAoBC,GAClC,OAAO,IAAIC,MAAOC,UAAYF,EAAGG,UAAY,MAIxC,SAASC,EAAsBlP,EAAkCmP,GACtE,IAAMC,EAAkBT,IACxB,OAAO/T,mBACL,iBAC0B,kBAAjBoF,GACY,kBAAZmP,GACPjM,OAAOwF,KAAK0G,GAAiB5N,MAAK,SAACgN,GACjC,IAAMM,EAAKM,EAAgBZ,GAC3B,IAAKM,EAAI,OAAO,EAChB,GAAIA,EAAGO,QACL,OAAO,EAET,IAAQd,EAAaO,EAAbP,SACR,QAAKA,IACEA,EAASY,UAAYA,GAAWZ,EAASvO,eAAiBA,GAAgB6O,EAAoBC,SAEzG,CAACM,EAAiBD,EAASnP,M,qHCxEzBsP,EAAUtX,UAAOC,IAAV,kIAIK,gBAAGsX,EAAH,EAAGA,QAAH,SAAYC,QAAmB,WAAQD,EAAU,EAAI,GAAGvN,WAAzB,SACtC,qBAAGqB,MAAkBC,OAAOI,QAUjC+L,EAAazX,kBAAOmG,IAAPnG,CAAH,2CAGV0X,EAAc1X,kBAAOmG,IAAPnG,CAAH,iEAEP,gBAAGuX,EAAH,EAAGA,QAAH,iBAAqBA,EAAU,GAAGvN,WAAlC,SAGK,SAAS2N,EAAT,GAKc,IAJ3BC,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BhS,YAE0B,MAFnB,GAEmB,MAD1B2R,cAC0B,SAC1B,OACE,eAACF,EAAD,CAASC,QAAS1R,EAAM2R,OAAQA,EAAhC,UACGI,GAAa,cAACH,EAAD,CAAYrR,SAAUwR,EAAW/R,KAAI,UAAKA,EAAKmE,WAAV,QAClD6N,GACC,cAACH,EAAD,CAAatR,SAAUyR,EAAWhS,KAAI,UAAKA,EAAKmE,WAAV,MAA0BuN,QAAS1R,EAAMQ,MAAO,CAAE4F,WAAY,U,ibC/B/FqL,EAAUtX,UAAOC,IAAV,mDAIP6X,EAAe9X,UAAOC,IAAV,sDAGrB,qBAAG8X,UAECC,cADK,8HAOL,QAGKC,EAAejY,UAAOC,IAAV,sFAGH,qBAAGoL,MAAkBC,OAAO2J,YAGrCiD,EAAiBlY,UAAOC,IAAV,iDAIdkY,EAAYnY,kBAAOoY,KAAPpY,CAAH,2CACX,gBAAGqL,EAAH,EAAGA,MAAOgN,EAAV,EAAUA,SAAV,OACM,IAAbA,GAA+B,IAAbA,EACdhN,EAAMC,OAAOgN,QACA,IAAbD,EACAhN,EAAMC,OAAOiN,QACA,IAAbF,EACAhN,EAAMC,OAAOI,KACbL,EAAMC,OAAO7G,WAGR+T,EAAuBxY,UAAOyR,OAAV,kcAGX,qBAAGpG,MAAkBC,OAAOC,oBAQvC,qBAAGF,MAAkBC,OAAOE,cAOf,qBAAGH,MAAkBC,OAAO2J,YAG5B,qBAAG5J,MAAkBC,OAAO2J,YAMvCwD,EAAOzY,UAAO0Y,KAAV,oUAqBXC,EAAyB3Y,UAAOC,IAAV,6TACN,gBAAGoL,EAAH,EAAGA,MAAH,OAAeuN,YAAe,GAAKvN,EAAMC,OAAOgN,YAQ3D,qBAAGjN,MAAkBC,OAAOgN,WASjCO,EAAsC7Y,UAAOC,IAAV,gNACnB,gBAAGoL,EAAH,EAAGA,MAAH,OAAeuN,YAAe,GAAKvN,EAAMC,OAAOgN,YAU/D,SAASQ,EAAT,GAA0D,IAA7B5U,EAA4B,EAA5BA,MAClC,OACE,eAACyU,EAAD,WACE,cAACE,EAAD,UACE,cAAC,IAAD,CAAehT,KAAM,OAEvB,4BAAI3B,OAKH,IAAM6U,EAAwB/Y,kBAAOG,IAAPH,CAAH,qIACZ,gBAAGqL,EAAH,EAAGA,MAAH,OAAeuN,YAAe,GAAKvN,EAAMC,OAAOqG,YAC3D,qBAAGtG,MAAkBC,OAAOqG,Y,wNC7HjCqH,EAAW,IAAIC,UAAQnP,OAAKC,OAAO,IAAKD,OAAKC,OAAO,MACpDmP,EAAsB,IAAID,UAAQnP,OAAKC,OAAO,KAAQD,OAAKC,OAAO,MAClEoP,EAA2BD,EAAoBE,SAASJ,GAGvD,SAASK,EACdC,GAOA,IAAMC,EAAiBD,EAEnBJ,EAAoBE,SAClBE,EAAME,MAAMzI,MAAM7J,QAChB,SAACuS,GAAD,OAAoCA,EAAWC,SAASP,KACxDD,SAJJ9X,EASEuY,EAAgCL,GAASC,EAAgBD,EAAMM,YAAYR,SAASG,QAAiBnY,EAe3G,MAAO,CAAEyY,sBAZ4BF,EACjC,IAAIV,UAAJ,OAAYU,QAAZ,IAAYA,OAAZ,EAAYA,EAA+BG,UAA3C,OAAsDH,QAAtD,IAAsDA,OAAtD,EAAsDA,EAA+BI,kBACrF3Y,EAU0DmY,cAN5DA,GACAD,IACCA,EAAMU,uBAAuB/P,cAC1B,IAAIA,cAAYqP,EAAMU,YAAY5S,MAAOmS,EAAcG,SAASJ,EAAMU,YAAY3F,KAAK4F,UACvFpP,iBAAeC,MAAMyO,EAAcG,SAASJ,EAAMU,YAAY3F,KAAK4F,YAMpE,SAASC,EACdZ,EACAa,GACwC,IAAD,EACjCC,EAAMC,YAAqBF,GACjC,OAAO,EAAP,iBACGG,IAAMC,MADT,OACiBjB,QADjB,IACiBA,OADjB,EACiBA,EAAOkB,gBAAgBJ,IADxC,cAEGE,IAAMG,OAFT,OAEkBnB,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAOoB,iBAAiBN,IAF1C,EAMK,SAASO,EAAgBf,GAC9B,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAagB,SAASC,OACvB,OAACjB,QAAD,IAACA,OAAD,EAACA,EAAagB,SAASE,OACvB,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAagB,SAASG,OACvB,OAACnB,QAAD,IAACA,OAAD,EAACA,EAAagB,SAASI,MACpB,EADsD,EADG,EADF,EADM,EAO/D,SAASC,EAAqB3B,EAAe4B,GAClD,OAAK5B,EAGE4B,EAAQ,UACR5B,EAAM6B,eAAeC,SAASC,cAAc,GADpC,YAC0C/B,EAAMU,YAAY5T,SAASL,OADrE,cAETuT,EAAMgC,aAAalV,SAASL,QAFnB,UAIRuT,EAAM6B,eAAeE,cAAc,GAJ3B,YAIiC/B,EAAMgC,aAAalV,SAASL,OAJ7D,cAKTuT,EAAMU,YAAY5T,SAASL,QAPxB,K,+KClELwV,EAAwBC,YAASC,KAEjCC,EAAsB1b,kBAAOub,EAAPvb,CAAH,0QAcnB2b,EAAwBH,YAASI,KAGjCC,EAAsB7b,mBAAO,cAAG8b,UAAH,EAAcC,UAAd,EAAyBC,OAAzB,EAAiCC,OAAjC,IAA4C9J,EAA5C,kEACjC,cAACwJ,EAAD,eAA2BxJ,OAC1B+J,MAAM,CACP,aAAc,UAHYlc,CAAH,gbAOD,qBAAGqL,MAAkBC,OAAO6Q,QAC5B,qBAAG9Q,MAAkBC,OAAOyJ,aACtB6D,YAAe,IAAM,YAKjC,qBAAGoD,OAAuB,WAAa,YAGnD,gBAAGD,EAAH,EAAGA,UAAH,OACAA,GACA/D,cADS,6DAEO+D,MAEhB,gBAAGD,EAAH,EAAGA,UAAH,OACAA,GACA9D,cADS,6DAEO8D,MAKhB,qBAAGzQ,MAAkB+Q,aAAaC,MAGlC,qBAAGhR,MAAkB+Q,aAAaE,MAezB,SAASC,EAAT,GAOC,IANdN,EAMa,EANbA,OACAO,EAKa,EALbA,UAKa,IAJbV,iBAIa,aAHbC,iBAGa,MAHD,GAGC,EAFbU,EAEa,EAFbA,gBACAC,EACa,EADbA,SAEMC,EAAiBC,YAAcX,EAAQ,KAAM,CACjDY,OAAQ,CAAEC,SAAU,KACpBpG,KAAM,CAAEqG,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAGpB,OACE,mCACGJ,EAAezZ,KACd,gBAAGga,EAAH,EAAGA,KAAMzZ,EAAT,EAASA,IAAK0Z,EAAd,EAAcA,MAAd,OACED,GACE,cAACxB,EAAD,CAA+BrV,MAAO8W,EAAOX,UAAWA,EAAWC,gBAAiBA,EAApF,SACE,eAACZ,EAAD,CACEuB,aAAW,iBACXtB,UAAWA,EACXC,UAAWA,EACXC,OAAQqB,WAJV,WAQIZ,GAAmBY,WAAW,qBAAKC,SAAU,IAAQ,KAEtDZ,MAXqBjZ,U,sHCxFhC8Z,EAAYvd,UAAOC,IAAV,oDAGTud,EAAexd,UAAOC,IAAV,0EAIZwd,EAAUzd,kBAAO6R,IAAP7R,CAAH,0fAGM,SAACmd,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAM9R,MAAMC,OAAO2J,YAC7D,SAACkI,GAAD,OAAWA,EAAM9R,MAAMC,OAAO2J,YAMhC,SAACkI,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAM9R,MAAMC,OAAOE,cAC7D,SAAC2R,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAM9R,MAAMC,OAAOE,cACxD,SAAC2R,GAAD,OAAYA,EAAMO,OAAS,IAAM,OAK9B,SAACP,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAM9R,MAAMC,OAAOE,cAUpEmS,EAAS3d,UAAO4K,EAAV,0fAGO,SAACuS,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAM9R,MAAMC,OAAO2J,YAC7D,SAACkI,GAAD,OAAWA,EAAM9R,MAAMC,OAAO2J,YAMhC,SAACkI,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAM9R,MAAMC,OAAOE,cAC7D,SAAC2R,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAM9R,MAAMC,OAAOE,cACxD,SAAC2R,GAAD,OAAYA,EAAMO,OAAS,IAAM,OAK9B,SAACP,GAAD,OAAYA,EAAMO,OAAS,UAAYP,EAAM9R,MAAMC,OAAOE,cAqC3DoS,IA3Bf,YAA6D,IAAD,IAA7CC,mBAA6C,MAA/B,EAA+B,EAE1D,EAAkCC,IAAMnS,SAASkS,GAAjD,mBAAOE,EAAP,KACQ7U,GADR,KACc8U,cAAN9U,GACR,OACE,cAACqU,EAAD,UACE,eAACC,EAAD,WACE,cAACC,EAAD,CAASC,OAAsB,IAAdK,EAAiBzQ,GAAG,gBAAgB2Q,GAAG,QAAxD,SACG/U,EAAE,UAEL,cAACuU,EAAD,CAASC,OAAsB,IAAdK,EAAiBzQ,GAAG,gBAAgB2Q,GAAG,QAAxD,SACG/U,EAAE,eAEL,cAACuU,EAAD,CAASC,OAAsB,IAAdK,EAAiBzQ,GAAG,mBAAmB2Q,GAAG,cAA3D,SACGZ,WAAWnU,EAAE,SAAWA,EAAE,gBAE7B,cAACyU,EAAD,CAAQD,OAAsB,IAAdK,EAAiBzQ,GAAG,kBAAkB2E,KAAK,oCAAoCD,OAAO,SAAtG,SACG9I,EAAE,mB,0HCjFPuJ,EAASC,oBAAH,sHASNwL,EAAYle,UAAOme,IAAV,iIACG1L,GACN,qBAAG5M,QACJ,qBAAGA,QAEA,gBAAGuY,EAAH,EAAGA,OAAQ/S,EAAX,EAAWA,MAAX,cAAuB+S,QAAvB,IAAuBA,IAAU/S,EAAMC,OAAOqG,WAQ7C,SAAS0M,EAAT,GAAyF,IAAD,IAAtExY,YAAsE,MAA/D,OAA+D,EAAvDuY,EAAuD,EAAvDA,OAAWjM,EAA4C,iCACrG,OACE,cAAC+L,EAAD,yBAAWI,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6B3Y,KAAMA,EAAMuY,OAAQA,GAAYjM,GAA9G,aACE,sBACEsM,EAAE,6HACFC,YAAY,MACZC,cAAc,QACdC,eAAe,e,yHC1BR,SAASC,EACtBjV,EACAkV,GAEA,MAAwBnT,mBAA+BmT,GAAYA,EAASlV,GAASA,OAAQxI,GAA7F,mBAAO2d,EAAP,KAAaC,EAAb,KAQA,OAPA3b,qBAAU,WACR2b,GAAQ,SAACC,GAEP,OAD2BH,GAAWA,EAASlV,GACzBA,EACfqV,OAER,CAACH,EAAUlV,IACPmV,EAGT,SAASG,EAAaje,GACpB,OAAa,OAANA,QAAoBG,IAANH,EAOhB,SAASke,EAAiBvV,GAC/B,OAAOiV,EAAQjV,EAAOsV,K,+MCvBlBE,EAAmBpf,UAAOC,IAAV,yQAGN,SAACkd,GAAD,OAAYA,EAAMvR,KAAO,UAAY,YACxC,SAACuR,GAAD,OAAYA,EAAMvR,KAAO,EAAI,KAG1B,qBAAGP,MAAkBC,OAAOyJ,cACtB,qBAAG1J,MAAkBC,OAAO2J,WACtB2D,YAAe,GAAK,YACrC,qBAAGvN,MAAkBC,OAAOE,cAIjC6T,EAAmBrf,UAAOC,IAAV,sDAIhBqf,EAAQtf,UAAOC,IAAV,qvBAYa,qBAAGoL,MAAkBC,OAAO2J,YAElC,qBAAG5J,MAAkBC,OAAOyJ,cA4C/B,SAASwK,EAAT,GAAiF,IAAD,IAA7DC,EAA6D,EAA7DA,QAAS5T,EAAoD,EAApDA,KAAM8Q,EAA8C,EAA9CA,SAA8C,IAApC+C,iBAAoC,MAAxB,OAAwB,EAC7F,EAAgD9T,mBAAgC,MAAhF,mBAAO+T,EAAP,KAAyBC,EAAzB,KACA,EAA0ChU,mBAAgC,MAA1E,mBAAOiU,EAAP,KAAsBC,EAAtB,KACA,EAAwClU,mBAAgC,MAAxE,mBAAOmU,EAAP,KAAqBC,EAArB,KACA,EAAuCC,YAAUN,EAAkBE,EAAe,CAChFH,YACAQ,SAAU,QACVC,UAAW,CACT,CAAE5T,KAAM,SAAUpK,QAAS,CAAEie,OAAQ,CAAC,EAAG,KACzC,CAAE7T,KAAM,QAASpK,QAAS,CAAEke,QAASN,OALjCO,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,WAQlBC,EAAiBzU,uBAAY,WAC7BuU,GACFA,MAED,CAACA,IAGJ,OAFAG,YAAYD,EAAgB5U,EAAO,IAAM,MAGvC,qCACE,cAACyT,EAAD,CAAkBqB,IAAKf,EAAvB,SAAoDjD,IACpD,cAAC,IAAD,UACE,eAAC0C,EAAD,yBAAkBxT,KAAMA,EAAM8U,IAAKb,EAAyBxZ,MAAOga,EAAOM,QAAYJ,EAAWI,QAAjG,cACGnB,EACD,cAACF,EAAD,aACEsB,UAAS,oCAAWL,EAAWI,cAAtB,aAAW,EAAoB,gCAA/B,QAA2D,IACpED,IAAKX,EACL1Z,MAAOga,EAAOQ,OACVN,EAAWM,iBC7G3B,IAAMC,EAAmB9gB,UAAOC,IAAV,iHAWP,SAAS8gB,EAAT,GAAmD,IAAhCrV,EAA+B,EAA/BA,KAASyG,EAAsB,wBAC/D,OAAO,cAACoN,EAAD,aAASC,QAAS,cAACsB,EAAD,UAAmBpV,KAA8ByG,IAGrE,SAAS6O,EAAT,GAA8E,IAAlDtE,EAAiD,EAAjDA,SAAavK,EAAoC,4BAClF,EAAwBxG,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAOC,uBAAY,kBAAMF,GAAQ,KAAO,CAACA,IACzCG,EAAQD,uBAAY,kBAAMF,GAAQ,KAAQ,CAACA,IACjD,OACE,cAACkV,EAAD,2BAAa5O,GAAb,IAAmBvG,KAAMA,EAAzB,SACE,qBAAKO,aAAcL,EAAMM,aAAcJ,EAAvC,SACG0Q,S,+GCtBIuE,EAAcjhB,kBAAO4U,IAAP5U,CAAH,uGAUT,SAASkhB,EAAT,GAA+D,IAA5CxE,EAA2C,EAA3CA,SAChC,OAAO,cAACuE,EAAD,UAAcvE,M,0TCTR,SAASyE,EAAiBC,GACvC,IAAMC,EAAMze,mBAAQ,kBAAOwe,EAAME,YAAgBF,QAAOhgB,IAAY,CAACggB,IAC/DG,ECCO,SAA2BC,GAA4E,IAAD,MAC7GC,EAAkB7e,mBAAQ,WAC9B,IAAK4e,EAAS,MAAO,MAACpgB,GACtB,IACE,OAAOogB,EAAU,CAACE,mBAASF,IAAY,MAACpgB,GACxC,MAAO8C,GACP,MAAO,MAAC9C,MAET,CAACogB,IACEG,EAAoBC,aAAwB,GAC5CC,EAAwBnc,YAAoBic,EAAmB,WAAYF,GAC3EK,EAAe,UAAGD,EAAsB/d,cAAzB,aAAG,EAA+B,GACjDie,EAAmBC,YACvBF,GAAmB5L,YAAO4L,QAAmB1gB,EAAY0gB,GACzD,GAEIG,EAAcvc,YAAoBqc,EAAkB,cAAeN,GAEzE,MAAO,CACLQ,YAAW,oBAAEA,EAAYne,cAAd,aAAE,EAAqB,UAAvB,QAA6B,KACxCE,QAAS6d,EAAsB7d,SAAWie,EAAYje,SDrB5Bke,CAAiB,OAACb,QAAD,IAACA,OAAD,EAACA,EAAKG,SACnD,OAAO5e,mBAAQ,WACb,OAAIye,EACKE,EAAoBU,YAAcE,YAAUC,YAAiBb,EAAoBU,cAAgB,GAEnGb,EAAMe,YAAUf,GAAO,KAC7B,CAACC,EAAKE,EAAoBU,YAAab,I,uBERtCiB,EAAiBriB,kBAAO4F,IAAP5F,CAAH,2DACT,qBAAG6F,QACF,qBAAGA,QAGA,SAASyc,EAAT,GAUX,IATF7b,EASC,EATDA,QACAJ,EAQC,EARDA,MAQC,IAPDR,YAOC,MAPM,OAON,EANDe,EAMC,EANDA,IAOMN,EAAiB6a,EAAiB1a,GAExC,OAAO,cAAC4b,EAAD,CAAgBzb,IAAKA,EAAKf,KAAMA,EAAMS,KAAMA,EAAMD,MAAOA,I,6CCZ5Dkc,EAAcviB,UAAOC,IAAV,uPACK,gBAAGoL,EAAH,EAAGA,MAAH,SAAUmX,QAAyB,cAAgBnX,EAAMC,OAAO2J,YAOxE,qBAAGuN,SAA0B,aACnB,gBAAGnX,EAAH,EAAGA,MAAH,SAAUmX,SAA0BnX,EAAMC,OAAOC,oBAGnD,gBAAGF,EAAH,EAAGA,MAAH,SAAUmX,SAAyBnX,EAAMC,OAAO2J,YACzD,qBAAGuN,SAAyB,SAG1B,SAASC,EAAT,GAQX,IAPFtgB,EAOC,EAPDA,QACAugB,EAMC,EANDA,SACAC,EAKC,EALDA,iBAMMC,EAAkB3P,cACxB,OACE,eAAC,IAAD,CAAY7S,IAAI,KAAhB,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMyiB,SAAS,OAAf,0BACA,cAACpX,EAAA,EAAD,CAAgBC,KAAMkX,EAAgB,KAAM,4DAE9C,eAAC,IAAD,CAASxiB,IAAI,MAAb,UACE,eAACmiB,EAAD,CACErW,QAAS,WACFyW,GAAqBpb,yBAAeob,EAAkBjc,UACzDgc,EAAShc,UAGb8b,QAASG,IAAqBjc,QANhC,UAQE,cAACP,EAAA,EAAD,CAAcC,SAAUM,QAAOL,MAAO,CAAEyc,YAAa,KACrD,cAAC,KAAD,uBAEA3gB,EAAU4gB,IAAgB5gB,GAAW,IAAIe,KAAI,SAACkE,GAC9C,IAAM4b,EAAWL,aAA4Bha,SAASga,EAAiBvd,UAAYgC,EAAMhC,QACzF,OACE,eAACmd,EAAD,CAAarW,QAAS,kBAAO8W,GAAYN,EAAStb,IAAQob,QAASQ,EAAnE,UACE,cAAC7c,EAAA,EAAD,CAAcC,SAAUgB,EAAOf,MAAO,CAAEyc,YAAa,KACrD,cAAC,KAAD,UAAO1b,EAAMrB,WAFmEqB,EAAMhC,kB,+DCvDvF6d,GAAYjjB,kBAAOe,IAAPf,CAAH,+DACX,qBAAGqL,MAAkBC,OAAOqG,WAI1BuR,GAAeljB,kBAAOG,IAAPH,CAAH,uEAKZmjB,GAAWnjB,kBAAOY,IAAPZ,CAAH,qRAMT,qBAAG0R,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAGrG,EAAH,EAAGA,MAAH,SAAUqG,UAA4BrG,EAAMC,OAAO6Q,QAE9D,gBAAGzK,EAAH,EAAGA,SAAUsR,EAAb,EAAaA,SAAb,OAA6BtR,GAAYsR,EAAW,GAAM,KAG1DI,GAAcpjB,UAAOqjB,MAAV,oeAWb,qBAAGhY,MAAkBC,OAAOI,QAEjB,qBAAGL,MAAkBC,OAAO2J,YAMrC,qBAAG5J,MAAkBC,OAAOgY,gBAIjB,qBAAGjY,MAAkBC,OAAOqG,WAIvC4R,GAAYvjB,UAAOC,IAAV,sFAGA,qBAAGoL,MAAkBC,OAAOC,oBAGrCiY,GAAgBxjB,UAAOC,IAAV,sFAGJ,qBAAGoL,MAAkBC,OAAO2J,Y,WC7ClD,SAASwO,GAAYrd,GACnB,OAAOA,aAAoBuC,QAAQvC,EAAShB,QAAUgB,IAAaM,QAAQ,QAAU,GAGvF,IAAMgd,GAAoB1jB,kBAAOoY,KAAPpY,CAAH,yHAOjB2jB,GAAM3jB,UAAOC,IAAV,ySACa,qBAAGoL,MAAkBC,OAAO2J,YACvC,qBAAG5J,MAAkBC,OAAOE,cAYvC,SAASoY,GAAT,GAA4D,IAAzCC,EAAwC,EAAxCA,QACjB,OAAO,cAACH,GAAD,CAAmBI,MAAOD,EAAQE,UAAlC,SAA8CF,EAAQxI,cAAc,KAG7E,IAAM2I,GAAehkB,UAAOC,IAAV,4EAKlB,SAASgkB,GAAT,GAA0D,IAArC7d,EAAoC,EAApCA,SACnB,KAAMA,aAAoBG,KACxB,OAAO,yBAGT,IAAQ8F,EAASjG,EAATiG,KACR,IAAKA,GAAwB,IAAhBA,EAAK7I,OAAc,OAAO,yBAEvC,IAAM0gB,EAAM7X,EAAK,GAEjB,OACE,eAAC2X,GAAD,WACE,cAAC,KAAD,CAAkBtY,KAAMwY,EAAIC,YAA5B,SACE,cAACR,GAAD,UAAmBO,EAAI5X,MAAb4X,EAAI5W,MAEfjB,EAAK7I,OAAS,EACb,cAAC,KAAD,CACEkI,KAAMW,EACH+X,MAAM,GACNlhB,KAAI,gBAAGoJ,EAAH,EAAGA,KAAM6X,EAAT,EAASA,YAAT,gBAA8B7X,EAA9B,aAAuC6X,MAC3CE,KAAK,QAJV,SAME,cAACV,GAAD,oBAEA,QAKV,SAASW,GAAT,GAYI,IAXFle,EAWC,EAXDA,SACAsc,EAUC,EAVDA,SACA6B,EASC,EATDA,WACAC,EAQC,EARDA,cACAne,EAOC,EAPDA,MAQA,EAA6BjE,cAArBgI,EAAR,EAAQA,QAASjI,EAAjB,EAAiBA,QACXsB,EAAMggB,GAAYrd,GAClBqe,EAAoBxd,cACpByd,EAAmBC,YAAcF,EAAmBre,GACpDwe,EAAcvd,YAAoBjB,GAClCyd,EAAU7Y,YAAkB,OAACZ,QAAD,IAACA,SAAWhJ,EAAWgF,GAEnDye,EAAcvV,cACdwV,EAAW1V,cAGjB,OACE,eAAC+T,GAAD,CACE9c,MAAOA,EACPua,UAAS,qBAAgBnd,GACzByI,QAAS,kBAAOqY,EAAa,KAAO7B,KACpChR,SAAU6S,EACVvB,SAAUwB,EALZ,UAOE,cAACre,EAAA,EAAD,CAAcC,SAAUA,EAAUP,KAAK,SACvC,eAAC9F,EAAA,EAAD,WACE,cAAC,KAAD,CAAM+jB,MAAO1d,EAASkG,KAAtB,SAA6BlG,EAASL,SACtC,eAACkd,GAAD,WACIyB,IAAoBE,GAAiBxe,aAAoBG,IAYvD,KAXF,eAAC,KAAD,2BAEE,cAAC,IAAD,CACE2F,QAAS,SAACmG,GACRA,EAAM0S,kBACF5iB,GAAWiE,aAAoBuC,SAAOkc,EAAY1iB,EAASiE,EAAShB,UAH5E,yBAUFsf,GAAqBE,GAAiBxe,aAAoBG,IAYxD,KAXF,eAAC,KAAD,8BAEE,cAAC,IAAD,CACE2F,QAAS,SAACmG,GACRA,EAAM0S,kBACF3e,aAAoBuC,SAAOmc,EAAS1e,IAH5C,4BAYR,cAAC6d,GAAD,CAAW7d,SAAUA,IACrB,cAAC,IAAD,CAAUC,MAAO,CAAE2e,YAAa,YAAhC,SACGnB,EAAU,cAACD,GAAD,CAASC,QAASA,IAAczZ,EAAU,cAACiU,GAAA,EAAD,IAAa,UAM3D,SAAS4G,GAAT,GAgBX,IAfFC,EAeC,EAfDA,OACA3a,EAcC,EAdDA,WACAoY,EAaC,EAbDA,iBACAwC,EAYC,EAZDA,iBACAC,EAWC,EAXDA,cACAC,EAUC,EAVDA,aACAC,EASC,EATDA,QAUMC,EAAW3iB,mBAAQ,kBAAO0iB,EAAO,CAAIE,WAAS9e,OAAb,mBAAuB6D,IAAvB,YAAyCA,KAAc,CAACA,EAAY+a,IAErGhlB,EAAMyL,uBACV,YAA6B,IAA1BnK,EAAyB,EAAzBA,KAAM6jB,EAAmB,EAAnBA,MAAOpf,EAAY,EAAZA,MACRD,EAAqBxE,EAAK6jB,GAC1BlB,EAAathB,QAAQ0f,GAAoBpb,yBAAeob,EAAkBvc,IAC1Eoe,EAAgBvhB,QAAQmiB,GAAiB7d,yBAAe6d,EAAehf,IAE7E,OACE,cAACke,GAAD,CACEje,MAAOA,EACPD,SAAUA,EACVme,WAAYA,EACZ7B,SANiB,kBAAMyC,EAAiB/e,IAOxCoe,cAAeA,MAIrB,CAACW,EAAkBC,EAAezC,IAG9B+C,EAAU3Z,uBAAY,SAAC0Z,EAAe7jB,GAAhB,OAA8B6hB,GAAY7hB,EAAK6jB,MAAS,IAEpF,OACE,cAAC,IAAD,CACEP,OAAQA,EACRxE,IAAK2E,EACLM,MAAM,OACNJ,SAAUA,EACVK,UAAWL,EAAS/hB,OACpBqiB,SAAU,GACVH,QAASA,EAPX,SASGplB,ICzMA,SAASwlB,GAAa7d,EAAiB8d,GAC5C,GAAsB,IAAlBA,EAAOviB,OAAc,OAAOyE,EAEhC,IAAM+d,EAAmB9d,YAAU6d,GAEnC,GAAIC,EACF,OAAO/d,EAAOlF,QAAO,SAACqE,GAAD,OAAWA,EAAMhC,UAAY4gB,KAGpD,IAAMC,EAAmBF,EACtBG,cACAC,MAAM,OACNpjB,QAAO,SAAC2R,GAAD,OAAOA,EAAElR,OAAS,KAE5B,GAAgC,IAA5ByiB,EAAiBziB,OACnB,OAAOyE,EAGT,IAAMme,EAAgB,SAAC1R,GACrB,IAAM2R,EAAS3R,EACZwR,cACAC,MAAM,OACNpjB,QAAO,SAAC2E,GAAD,OAASA,EAAIlE,OAAS,KAEhC,OAAOyiB,EAAiB1kB,OAAM,SAACsP,GAAD,OAAoB,IAAbA,EAAErN,QAAgB6iB,EAAO7c,MAAK,SAAC8c,GAAD,OAAQA,EAAGC,WAAW1V,IAAMyV,EAAGE,SAAS3V,UAG7G,OAAO5I,EAAOlF,QAAO,SAACqE,GACpB,IAAQrB,EAAiBqB,EAAjBrB,OAAQuG,EAASlF,EAATkF,KAEhB,OAAQvG,GAAUqgB,EAAcrgB,IAAauG,GAAQ8Z,EAAc9Z,MAIxDwZ,I,GChCFW,GAAgBzmB,kBAAOe,IAAPf,CAAH,oNAEJ,qBAAGqL,MAAkBC,OAAO6Q,QACvC,qBAAG9Q,MAAkBC,OAAOI,QAWxB,SAASgb,GAAT,GAMX,IALFC,EAKC,EALDA,gBACAC,EAIC,EAJDA,UAKA,OACE,cAACH,GAAD,CAAeva,QAASya,EAAxB,SACE,cAAC,KAAD,CAAM9D,SAAS,OAAf,SAAuB+D,EAAY,SAAM,aCYxC,SAASC,GAAmB3L,GACjC,IAAM7R,EAAW4B,cACX6b,EAAalkB,mBAAQ,kBAxB7B,SAA4ByG,GAG1B,OAAO,SAAoB4G,EAAeC,GAKxC,IArBuB6W,EAAwBC,EAwBzCC,GAxBiBF,EAqBN1d,EAAS4G,EAAO7K,SArBc4hB,EAsB9B3d,EAAS6G,EAAO9K,SArB/B2hB,GAAYC,EACPD,EAASG,YAAYF,IAAa,EAAID,EAASI,QAAQH,GAAY,EAAI,EAE5ED,GAAYA,EAASG,YAAY,MAC3B,EAENF,GAAYA,EAASE,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhBD,EAA0BA,EAE1BhX,EAAOlK,QAAUmK,EAAOnK,OAEnBkK,EAAOlK,OAAOmgB,cAAgBhW,EAAOnK,OAAOmgB,eAAiB,EAAI,EAEnEjW,EAAOlK,QAAcmK,EAAOnK,QAAX,EAAyB,GAMlBqhB,CAAkB,OAAC/d,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAOzG,mBAAQ,WACb,OAAIsY,EACK,SAACjL,EAAeC,GAAhB,OAAgE,EAA9B4W,EAAW7W,EAAQC,IAEvD4W,IACN,CAAC5L,EAAU4L,ICXT,SAASO,GAAT,GAQkB,IAPvB1E,EAOsB,EAPtBA,iBACAwC,EAMsB,EANtBA,iBACAmC,EAKsB,EALtBA,sBACAC,EAIsB,EAJtBA,gBACA/K,EAGsB,EAHtBA,UACAP,EAEsB,EAFtBA,OAGQ/S,GADc,EADtBse,aAEcxJ,cAAN9U,GACA/G,EAAYC,cAAZD,QAGFslB,GAFQvU,qBAAWwU,gBAEPC,oBAClB,EAAsChc,mBAAiB,IAAvD,mBAAOic,EAAP,KAAoBC,EAApB,KACA,EAAkDlc,oBAAkB,GAApE,mBAAOmc,EAAP,KAA0BC,EAA1B,KACM/gB,EAAYH,cAGZmhB,EAAkB9f,YAAU0f,GAC5BK,EAAclgB,YAAS6f,GAEvBtC,EAAmB1iB,mBAAQ,WAC/B,IAAM8R,EAAIkT,EAAY1B,cAAcgC,OACpC,MAAa,KAANxT,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,GAAqB,SAANA,IAC5D,CAACkT,IAEEO,EAAkBtB,GAAmBiB,GAErCM,EAAY9lB,aAAqD,SAACC,GAAD,OAAWA,EAAM+L,KAAK8Z,aAEvFC,EAA0BzlB,mBAAQ,WACtC,OAAIolB,EAAwBC,EAAc,CAACA,GAAe,GACnDnC,GAAa5a,OAAOC,OAAOnE,GAAY4gB,KAC7C,CAACI,EAAiBC,EAAajhB,EAAW4gB,IAEvCU,EAAgC1lB,mBAAQ,WAC5C,GAAIqlB,EAAa,MAAO,CAACA,GACzB,IAAM3W,EAAS+W,EAAejlB,KAAK+kB,GAC7BI,EAAcX,EACjB1B,cACAC,MAAM,OACNpjB,QAAO,SAAC2R,GAAD,OAAOA,EAAElR,OAAS,KAC5B,OAAI+kB,EAAY/kB,OAAS,EAAU8N,EAE7B,GAAN,mBACM2W,EAAc,CAACA,GAAe,IADpC,YAGK3W,EAAOvO,QAAO,SAACqE,GAAD,aAAW,UAAAA,EAAMrB,cAAN,eAAcmgB,iBAAkBqC,EAAY,OAH1E,YAIKjX,EAAOvO,QAAO,SAACqE,GAAD,aAAW,UAAAA,EAAMrB,cAAN,eAAcmgB,iBAAkBqC,EAAY,UAEzE,CAACF,EAAgBT,EAAaK,EAAaE,IAExCK,EAAuBzc,uBAC3B,SAAC3F,GAGC,GAFA+e,EAAiB/e,GACjBoW,IACI4L,EAAW,CACb,IAAMK,EAAQC,SAASC,eAAe,WAClCF,GACFA,EAAMG,UAIZ,CAACpM,EAAW2I,EAAkBiD,IAIhC/kB,qBAAU,WACJ4Y,GAAQ4L,EAAe,MAC1B,CAAC5L,IAGJ,IAAM4M,EAAWlB,mBACXmB,EAAc/c,uBAAY,SAACsG,GAAW,IAAD,EACnCgR,EAAQhR,EAAML,OAAOpI,MACrBmf,EAAmB7gB,YAAUmb,GACnCwE,EAAekB,GAAoB1F,GACnC,UAAAoE,EAAUva,eAAV,SAAmB8b,SAAS,KAC3B,IAEGC,EAAcld,uBAClB,SAACmd,GACC,GAAc,UAAVA,EAAEzlB,IAEJ,GAAU,SADAmkB,EAAY1B,cAAcgC,OAElCM,EAAqB9hB,cAChB,GAAI4hB,EAAqB9kB,OAAS,EAAG,CAAC,IAAD,GAExC,UAAA8kB,EAAqB,GAAGviB,cAAxB,eAAgCmgB,iBAAkB0B,EAAYM,OAAOhC,eACrC,IAAhCoC,EAAqB9kB,QAErBglB,EAAqBF,EAAqB,OAKlD,CAACA,EAAsBE,EAAsBZ,IAIzChF,GADmBhV,cACDqF,eACxB,OACE,eAAClT,EAAA,EAAD,CAAQsG,MAAO,CAAEsf,MAAO,OAAQwD,KAAM,OAAtC,UACE,eAACjG,GAAD,CAAc9iB,IAAI,OAAlB,UACE,eAAC,IAAD,WACE,eAAC,KAAD,WACG8I,EAAE,kBACH,cAACuC,EAAA,EAAD,CACEC,KAAMkX,EACJ,IACA,0FAIN,cAAC,IAAD,CAAW1W,QAASsQ,OAEtB,cAAC4G,GAAD,CACEgG,KAAK,OACL9b,GAAG,qBACH+b,YAAangB,EAAE,gCACfU,MAAOge,EACPlH,IAAKmI,EACLS,SAAUR,EACVS,UAAWN,IAEZ1B,GACC,cAAC9E,EAAD,CAAatgB,QAASA,EAASugB,SAAU8F,EAAsB7F,iBAAkBA,IAEnF,eAAC,IAAD,WACE,cAAC,KAAD,CAAME,SAAS,OAAf,SAAuB3Z,EAAE,gBACzB,cAACwd,GAAD,CAAYE,UAAWkB,EAAmBnB,gBAAiB,kBAAMoB,GAAqB,SAACyB,GAAD,OAAUA,cAIpG,cAACjG,GAAD,IAEA,qBAAKld,MAAO,CAAE8iB,KAAM,KAApB,SACE,cAAC,IAAD,CAAWM,cAAY,EAAvB,SACG,gBAAGvE,EAAH,EAAGA,OAAH,OACC,cAACD,GAAD,CACEC,OAAQA,EACRI,QAASA,EACT/a,WAAY+d,EACZnD,iBAAkBqD,EAClBpD,cAAekC,EACf3E,iBAAkBA,EAClB0C,aAAcoC,SAMrB,QAgCQJ,I,yCC5NR,SAASqC,GACdC,EACAC,GAEA,IAAMC,EAAalC,iBAAiCiC,GACpDvmB,qBAAU,WACRwmB,EAAW3c,QAAU0c,IACpB,CAACA,IAEJvmB,qBAAU,WACR,IAAMymB,EAAqB,SAACZ,GAAmB,IAAD,IAC5C,oBAAIS,EAAKzc,eAAT,aAAI,EAAc6c,SAASb,EAAElX,eAA7B,UAGI6X,EAAW3c,SAAS2c,EAAW3c,WAKrC,OAFAwb,SAASsB,iBAAiB,YAAaF,GAEhC,WACLpB,SAASuB,oBAAoB,YAAaH,MAE3C,CAACH,I,6BCDN,IAAMO,GAA2BlqB,kBAAOwR,IAAPxR,CAAH,kFAGjB,qBAAG0R,SAA2B,MAAQ,OAG7C0N,GAAmBpf,UAAOC,IAAV,ggBAEN,SAACkd,GAAD,OAAYA,EAAMvR,KAAO,UAAY,YACxC,SAACuR,GAAD,OAAYA,EAAMvR,KAAO,EAAI,KAE1B,qBAAGP,MAAkBC,OAAOC,oBACtB,qBAAGF,MAAkBC,OAAO2J,YAGvC,qBAAG5J,MAAkBC,OAAOE,cAUjC2e,GAAanqB,UAAOC,IAAV,4IAQVmqB,GAAoBpqB,UAAOC,IAAV,kKASvB,SAASoqB,GAAT,GAAuD,IAAjCC,EAAgC,EAAhCA,QACd9I,EAAU5e,mBAAQ,kCAAM0e,YAAgBgJ,UAAtB,aAAM,EAA0B9I,UAAS,CAAC8I,IAC5DC,EAAO3nB,mBAAQ,WACnB,IAAI4e,EAAJ,CACA,IAAMgJ,EAAeF,EAAQpE,cAC7B,GAAIsE,EAAajE,WAAW,YAAciE,EAAajE,WAAW,WAChE,OAAO+D,EAET,IAEE,OADY,IAAIG,IAAIH,GACTC,KACX,MAAOrmB,GACP,WAED,CAAComB,EAAS9I,IACb,OAAO,0CAAGA,QAAH,IAAGA,IAAW+I,IAGvB,SAASG,GAAiBJ,GACxB,MAAM,YAAN,OAAmBA,EAAQtW,QAAQ,MAAO,MAG5C,IAAM2W,GAAUjhB,gBAAK,YAAgF,IAA7D4gB,EAA4D,EAA5DA,QAASM,EAAmD,EAAnDA,OACzC9c,EAAaxL,aAAkD,SAACC,GAAD,OAAWA,EAAMyK,MAAMC,SACtFU,EAAkBD,cAClBjL,EAAWC,cACjB,EAAkDoL,EAAWwc,GAA5Cnd,EAAjB,EAAQD,QAA8Ba,EAAtC,EAAuBC,cAEjBuW,EAAa+F,IAAY3c,EAE/B,EC7Fa,WAAiE,IAA9Ckd,EAA6C,wDAC7E,EAA0Blf,mBAASkf,GAAnC,mBAAOtoB,EAAP,KAAcuoB,EAAd,KACMC,EAAShf,uBAAY,kBAAM+e,GAAS,SAAC7L,GAAD,OAAWA,OAAO,IAC5D,MAAO,CAAC1c,EAAOwoB,GD0FQC,EAAU,GAAjC,mBAAOlf,EAAP,KAAaif,EAAb,KACMpB,EAAOhC,mBACb,EAAgDhc,qBAAhD,mBAAO+T,EAAP,KAAyBC,EAAzB,KACA,EAA0ChU,qBAA1C,mBAAOiU,EAAP,KAAsBC,EAAtB,KAEA,EAA+BG,aAAUN,EAAkBE,EAAe,CACxEH,UAAW,OACXQ,SAAU,QACVC,UAAW,CAAC,CAAE5T,KAAM,SAAUpK,QAAS,CAAEie,OAAQ,CAAC,EAAG,QAH/CE,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,WAMhBmJ,GAAkBC,EAAM7d,EAAOif,OAAS3pB,GAExC,IE1GuC6pB,EF0GjCC,EAAiBnf,uBAAY,WAC7BwY,IAEJ9hB,EAAS0oB,aAAWb,IACpBM,OACC,CAACnoB,EAAU8hB,EAAY+F,EAASM,IAE7BQ,EAAyBrf,uBAAY,WACpCgC,GACLtL,EAAS4oB,aAAiBf,MACzB,CAAC7nB,EAAU6nB,EAASvc,IAEjBud,EAAmBvf,uBAAY,WAC/B,WAAAwf,OAAOC,OAAP,uEACF/oB,EAASgpB,aAAWnB,MAErB,CAAC7nB,EAAU6nB,IACR1H,EAAkB3P,cACxB,OAAK9F,EAGH,eAAC,IAAD,CAAmB3M,MAAM,SAASC,QAAQ,OAAO6M,GAAIod,GAAiBJ,GAAtE,UACGnd,EAAK1G,QACJ,cAAC6b,EAAD,CAAUjc,MAAO,CAAEyc,YAAa,QAAUrc,QAAS0G,EAAK1G,QAASG,IAAG,UAAKuG,EAAKb,KAAV,gBAEpE,qBAAKjG,MAAO,CAAEsf,MAAO,OAAQT,OAAQ,OAAQpC,YAAa,UAE5D,eAAC/iB,EAAA,EAAD,CAAQsG,MAAO,CAAE8iB,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAMuC,KAAMnH,EAAY1B,SAAS,OAAOxc,MAAO,CAAEslB,SAAU,SAAUC,aAAc,YAAnF,SACGze,EAAKb,SAGV,cAAC,IAAD,CACEjG,MAAO,CACLwlB,UAAW,OAFf,SAKE,cAACzB,GAAD,CAAmBtG,MAAOwG,EAA1B,SACE,cAACD,GAAD,CAAYC,QAASA,WAI3B,eAACH,GAAD,CAAYzJ,IAAKiJ,EAAjB,UACE,qBAAKtjB,MAAO,CAAEylB,QAAS,gBAAkBpL,IAAKf,EAA9C,SACE,cAAC,IAAD,CACEtZ,MAAO,CACLsf,MAAO,OACP7C,YAAa,OAEf5W,QAAS6e,EACTgB,QAAQ,YANV,SAQE,cAAC,IAAD,QAIHjgB,GACC,eAACsT,GAAD,2BAAkBxT,MAAI,EAAC8U,IAAKb,EAAyBxZ,MAAOga,EAAOM,QAAYJ,EAAWI,QAA1F,cACE,8BAAMxT,IErKuB8d,EFqKE9d,EAAK8d,QEpKxC,IAAN,OAAWA,EAAQe,MAAnB,YAA4Bf,EAAQgB,MAApC,YAA6ChB,EAAQiB,UFqK3C,cAAC1I,GAAD,IACA,cAAC,IAAD,CAAcvR,KAAI,gDAA2CqY,GAA7D,SACG1H,EAAgB,KAAM,eAEzB,cAACsH,GAAD,CAA0Bhe,QAASof,EAAkB5Z,SAA6C,IAAnCxG,OAAOwF,KAAK5C,GAAYtK,OAAvF,yBAGCuK,GACC,cAACmc,GAAD,CAA0Bhe,QAASkf,EAAnC,gCAKP7G,EACC,cAAC,IAAD,CAAQ7S,UAAQ,EAACrL,MAAO,CAAEsf,MAAO,OAAQwG,SAAU,QAAnD,sBAIA,mCACE,cAAC,IAAD,CACEvL,UAAU,gBACVva,MAAO,CACLsf,MAAO,OACPwG,SAAU,UAEZjgB,QAASgf,EANX,wBA1DIZ,GAHM,QA6Ed8B,GAAgBpsB,UAAOC,IAAV,6DAKZ,SAASosB,GAAT,GAA2F,IAAD,EAApE7P,EAAoE,EAApEA,UAAWoO,EAAyD,EAAzDA,OACtC,EAAwCjf,mBAAiB,IAAzD,mBAAO2gB,EAAP,KAAqBC,EAArB,KAEM9pB,EAAWC,cACXsK,EAAQ1K,aAAkD,SAACC,GAAD,OAAWA,EAAMyK,MAAMC,SACjFuf,EAASvpB,QAAO,UAAC+J,EAAMsf,UAAP,aAAC,EAAqBre,kBAC5C,EAAgCtC,mBAAwB,MAAxD,mBAAO8gB,EAAP,KAAiBC,EAAjB,KAEM5D,EAAc/c,uBAAY,SAACmd,GAC/BqD,EAAgBrD,EAAElX,OAAOpI,OACzB8iB,EAAY,QACX,IACGC,EAAYC,eAEZC,EAAgB9gB,uBAAY,WAC5BygB,IACJE,EAAY,MACZC,EAAUL,GACPQ,MAAK,WACJP,EAAgB,OAEjBQ,OAAM,SAAC7oB,GACNwoB,EAAYxoB,EAAM8oB,SAClBvqB,EAASgpB,aAAWa,UAEvB,CAACE,EAAQ/pB,EAAUkqB,EAAWL,IAE3BW,EAAoBrqB,mBAAQ,WAChC,OAAOuf,YAAUmK,GAAc9oB,OAAS,GAAKP,QAAQqe,YAAgBgL,MACpE,CAACA,IAEEY,EAAiBnhB,uBACrB,SAACmd,GACK+D,GAAsB,UAAV/D,EAAEzlB,KAChBopB,MAGJ,CAACA,EAAeI,IAGZE,EAAcvqB,mBAAQ,WAE1B,OADiBsI,OAAOwF,KAAK1D,GAE1BjK,QAAO,SAACunB,GACP,OAAOrnB,QAAQ+J,EAAMsd,GAASpd,YAE/B9J,MAAK,SAACgqB,EAAIC,GACT,IAAiBC,EAAOtgB,EAAMogB,GAAtBlgB,QACSqgB,EAAOvgB,EAAMqgB,GAAtBngB,QACR,OAAIogB,GAAMC,EACDD,EAAGhhB,KAAK4Z,cAAgBqH,EAAGjhB,KAAK4Z,eAClC,EACDoH,EAAGhhB,KAAK4Z,gBAAkBqH,EAAGjhB,KAAK4Z,cAClC,EACA,EAEFoH,GAAY,EACZC,EAAW,EACR,OAEV,CAACvgB,IACE4V,EAAkB3P,cACxB,OACE,eAAClT,EAAA,EAAD,CAAQsG,MAAO,CAAEsf,MAAO,OAAQwD,KAAM,OAAtC,UACE,cAACjG,GAAD,UACE,eAAC,IAAD,WACE,8BACE,cAAC,KAAD,CAAW7c,MAAO,CAAEmnB,OAAQ,WAAathB,QAAS0e,MAEpD,cAAC,KAAD,CAAM/H,SAAS,OAAf,SAAuBD,EAAgB,KAAM,kBAC7C,cAAC,IAAD,CAAW1W,QAASsQ,SAIxB,cAAC+G,GAAD,IAEA,eAACL,GAAD,CAAc9iB,IAAI,OAAlB,UACE,eAAC,KAAD,CAAMsrB,MAAI,EAAV,uBACa,IACX,cAACjgB,EAAA,EAAD,CACEC,KAAMkX,EACJ,IACA,+MAIN,eAAC,IAAD,WACE,cAACQ,GAAD,CACEgG,KAAK,OACL9b,GAAG,iBACH+b,YAAY,kCACZzf,MAAO0iB,EACPhD,SAAUR,EACVS,UAAW2D,EACX7mB,MAAO,CAAE6e,OAAQ,UAAWvkB,aAAc,GAAIF,QAAS,UAEzD,cAAC,IAAD,CAAQyL,QAAS2gB,EAAexmB,MAAO,CAAEonB,SAAU,MAAOxhB,WAAY,OAASyF,UAAWub,EAA1F,oBAIDR,EACC,cAAC,KAAD,CAAMiB,MAAM,UAAU5J,MAAO2I,EAAUpmB,MAAO,CAAEulB,aAAc,WAAYD,SAAU,UAApF,SACGc,IAED,QAGN,cAAClJ,GAAD,IAEA,cAAC6I,GAAD,UACGe,EAAYjqB,KAAI,SAAConB,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,EAASM,OAAQA,GAAnCN,QAGlB,cAAC/G,GAAD,IAEA,qBAAKld,MAAO,CAAE5F,QAAS,OAAQktB,UAAW,UAA1C,SACE,cAAC,IAAD,CAAc1b,KAAK,yBAAnB,+BGnTO,SAAS2b,GAAT,GAMe,IAL5B3R,EAK2B,EAL3BA,OACAO,EAI2B,EAJ3BA,UACA2I,EAG2B,EAH3BA,iBACAxC,EAE2B,EAF3BA,iBACA2E,EAC2B,EAD3BA,sBAEA,EAAgC3b,oBAAkB,GAAlD,mBAAOkiB,EAAP,KAAiBC,EAAjB,KACMC,EAAWlP,YAAQ5C,GAEzB5Y,qBAAU,WACJ4Y,IAAW8R,GACbD,GAAY,KAEb,CAAC7R,EAAQ8R,IAEZ,IAAMvF,EAAuBzc,uBAC3B,SAAC3F,GACC+e,EAAiB/e,GACjBoW,MAEF,CAACA,EAAW2I,IAGR6I,EAAwBjiB,uBAAY,WACxC+hB,GAAY,KACX,IACGG,EAAkBliB,uBAAY,WAClC+hB,GAAY,KACX,IAGGI,GADkBxgB,cAGxB,OACE,cAAC6O,EAAA,EAAD,CAAON,OAAQA,EAAQO,UAAWA,EAAWT,UAAW,GAAID,UAAW+R,EAAW,GAAKK,EAAiB,EAAI,GAA5G,SACGL,EACC,cAACxB,GAAD,CAAY7P,UAAWA,EAAWoO,OAAQqD,IAE1C,cAAC5G,GAAD,CACEpL,OAAQA,EACRO,UAAWA,EACX2I,iBAAkBqD,EAClBhB,aAAcwG,EACdrL,iBAAkBA,EAClB2E,sBAAuBA,EACvBC,iBAAiB,Q,sICxDZ,SAAS4G,EACtBC,GAEA,IAAMC,EAAYnmB,YAAUkmB,GACtBE,ECAO,SAAoBlpB,GAAiE,IAAD,MAC3FmpB,EAAmBC,YAAYppB,EAAS,KACxCqc,EAAkB7e,mBAAQ,WAC9B,IAAK2rB,IAAqBrmB,YAAUqmB,GAAmB,MAAO,MAACntB,GAC/D,IACE,OAAOmtB,EAAmB,CAAC7M,mBAAS,GAAD,OAAI6M,EAAiBrI,cAAcuI,OAAO,GAA1C,mBAAgE,MAACrtB,GACpG,MAAO8C,GACP,MAAO,MAAC9C,MAET,CAACmtB,IACE5M,EAAoBC,aAAwB,GAC5CE,EAAkBpc,YAAoBic,EAAmB,WAAYF,GACrEI,EAAqB,UAAGC,EAAgBhe,cAAnB,aAAG,EAAyB,GACjDie,EAAmBC,YACvBH,IAA0B3L,YAAO2L,GAAyBA,OAAwBzgB,GAClF,GAEIkL,EAAO5G,YAAoBqc,EAAkB,OAAQN,GAErDiN,EAAUH,IAAqBnpB,EACrC,MAAO,CACLupB,QAASD,EAAU,KAAH,oBAAUpiB,EAAKxI,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9CE,QAAS0qB,GAAW5M,EAAgB9d,SAAWsI,EAAKtI,SDtBhC4qB,CAAWP,QAAajtB,GACxCytB,EEHO,SAAuBrN,GAAwE,IAAD,MACrGsN,EAAgBN,YAAYhN,EAAS,KACrCC,EAAkB7e,mBAAQ,WAC9B,IAAKksB,EAAe,MAAO,MAAC1tB,GAC5B,IACE,OAAO0tB,EAAgB,CAACpN,mBAASoN,IAAkB,MAAC1tB,GACpD,MAAO8C,GACP,MAAO,MAAC9C,MAET,CAAC0tB,IACEnN,EAAoBC,aAAwB,GAC5CE,EAAkBpc,YAAoBic,EAAmB,WAAYF,GACrEI,EAAqB,UAAGC,EAAgBhe,cAAnB,aAAG,EAAyB,GACjDie,EAAmBC,YACvBH,IAA0B3L,YAAO2L,GAAyBA,OAAwBzgB,GAClF,GAEI2tB,EAAOrpB,YAAoBqc,EAAkB,OAAQN,GAErDiN,EAAUI,IAAkBtN,EAClC,MAAO,CACLpc,QAASspB,EAAU,KAAH,oBAAUK,EAAKjrB,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9CE,QAAS0qB,GAAW5M,EAAgB9d,SAAW+qB,EAAK/qB,SFnBvCgrB,CAAcZ,GAE7B,MAAO,CACLpqB,QAASsqB,EAActqB,SAAW6qB,EAAO7qB,QACzCoB,QAASipB,GAAaQ,EAAOzpB,QAC7BkH,KAAMgiB,EAAcK,QAAUL,EAAcK,SAAWN,GAAaQ,EAAOzpB,SAAUgpB,GAAwB,Q,4VGRjH,SAASa,EAAkB1Z,EAAsBC,GAC/C,IAAQrT,EAAYC,cAAZD,QAGF+sB,EAAiBtsB,mBAAQ,kBAAOT,EAAUgtB,IAA8BhtB,GAAW,KAAK,CAACA,IAGzFitB,EAA8BxsB,mBAClC,kBACE6N,IAAQye,GAAO,SAACte,GAAD,OAA4Bse,EAAMhsB,KAAI,SAACmsB,GAAD,MAAe,CAACze,EAAMye,SAAatsB,QACtF,mCAAEusB,EAAF,KAAMC,EAAN,YAAcD,EAAGlqB,UAAYmqB,EAAGnqB,aAEpC,CAAC8pB,IAGH,EAAyB/sB,EACrB,CAAC8R,YAAgBsB,EAAWpT,GAAU8R,YAAgBuB,EAAWrT,IACjE,MAACf,OAAWA,GAFhB,mBAAO6O,EAAP,KAAeC,EAAf,KAIMsf,EAAwC5sB,mBAC5C,kBACEqN,GAAUC,EACN,CAEE,CAACD,EAAQC,IAFX,mBAIKgf,EAAMhsB,KAAI,SAAC0N,GAAD,MAA0B,CAACX,EAAQW,OAJlD,YAMKse,EAAMhsB,KAAI,SAAC0N,GAAD,MAA0B,CAACV,EAAQU,OANlD,YAQKwe,IAEFrsB,QAAO,SAACkF,GAAD,OAAsChF,QAAQgF,EAAO,IAAMA,EAAO,OACzElF,QAAO,mCAAEusB,EAAF,KAAMC,EAAN,YAAcD,EAAGlqB,UAAYmqB,EAAGnqB,WAGvCrC,QAAO,YAAe,IAAD,mBAAZusB,EAAY,KAARC,EAAQ,KACpB,IAAKptB,EAAS,OAAO,EACrB,IAAMstB,EAAcC,IAAavtB,GACjC,IAAKstB,EAAa,OAAO,EAEzB,IAAME,EAAoCF,EAAYH,EAAGlqB,SACnDwqB,EAAoCH,EAAYF,EAAGnqB,SAEzD,OAAKuqB,IAAiBC,KAClBD,IAAiBA,EAAaroB,MAAK,SAACsJ,GAAD,OAAU2e,EAAGhb,OAAO3D,UACvDgf,IAAiBA,EAAatoB,MAAK,SAACsJ,GAAD,OAAU0e,EAAG/a,OAAO3D,UAI/D,KACN,CAACX,EAAQC,EAAQgf,EAAOE,EAAWjtB,IAG/B0tB,EAAWva,YAASka,GAG1B,OAAO5sB,mBACL,kBACEsI,OAAOC,OACL0kB,EAEG9sB,QAAO,SAACe,GAAD,OAAgDb,QAAQa,EAAO,KAAOoR,IAAUc,QAAUlS,EAAO,OAExGoD,QAAwC,SAACwC,EAAD,GAAqB,IAAD,EAAVomB,EAAU,oBAE3D,OADApmB,EAAKomB,EAAKC,eAAe3qB,SAAzB,UAAoCsE,EAAKomB,EAAKC,eAAe3qB,gBAA7D,QAAyE0qB,EAClEpmB,IACN,OAET,CAACmmB,I,yEC3DE,SAASG,IACd,OAAO1tB,aAAwC,SAACC,GAAD,OAAWA,EAAM0tB,QAG3D,SAASC,IAMd,IAAMztB,EAAWC,cACXytB,EAAsBpkB,uBAC1B,SAACqkB,EAAchqB,GACb3D,EACE4tB,YAAe,CACbD,QACAvnB,WAAYzC,aAAoBuC,QAAQvC,EAAShB,QAAUgB,IAAaM,QAAQ,OAAS,QAI/F,CAACjE,IAqBH,MAAO,CACL6tB,eAnBqBvkB,uBAAY,WACjCtJ,EAAS8tB,iBACR,CAAC9tB,IAkBF0tB,sBACAK,YAjBkBzkB,uBAClB,SAACqkB,EAAcK,GACbhuB,EAASiuB,YAAU,CAAEN,QAAOK,kBAE9B,CAAChuB,IAcDkuB,kBAXwB5kB,uBACxB,SAAC6kB,GACCnuB,EAASouB,YAAa,CAAED,iBAE1B,CAACnuB,KAYE,SAASquB,EAAelnB,EAAgBxD,GAC7C,GAAKwD,GAAUxD,EAGf,IACE,IAAM2qB,EAAmBC,qBAAWpnB,EAAOxD,EAASsC,UAAUsB,WAC9D,GAAyB,MAArB+mB,EACF,OAAO3qB,aAAoBuC,QACvB,IAAIsB,cAAY7D,EAAU0D,OAAKC,OAAOgnB,IACtClmB,iBAAeC,MAAMhB,OAAKC,OAAOgnB,IAEvC,MAAO7sB,GAEPS,QAAQssB,KAAR,yCAA+CrnB,EAA/C,KAAyD1F,IAM7D,IAAMgtB,EAAoC,CACxC,6CACA,6CACA,8CAQF,SAASC,EAAgB7X,EAAc8X,GACrC,OACE9X,EAAME,MAAM6X,KAAK7nB,MAAK,SAACpC,GAAD,OAAWA,EAAMhC,UAAYgsB,MACnD9X,EAAME,MAAMzI,MAAMvH,MAAK,SAACkG,GAAD,OAAUA,EAAKqgB,eAAe3qB,UAAYgsB,KAK9D,SAASE,IAMb,IAAD,QAwCIC,EAKe,EAIwC,EAhDnDnnB,EAAYhI,cAAZgI,QACAlB,EAAM8U,cAAN9U,EAER,EAMI8mB,IALFwB,EADF,EACEA,iBACAf,EAFF,EAEEA,WAC6BgB,EAH/B,EAGGnX,IAAMC,OAAU1R,WACa6oB,EAJhC,EAIGpX,IAAMG,QAAW5R,WAClB+nB,EALF,EAKEA,UAGIe,EAAgB/oB,YAAY6oB,GAAmB,8CAC/CG,EAAiBhpB,YAAY8oB,GAAoB,8CACjDG,EAAkB1D,YAAM,OAACyC,QAAD,IAACA,SAAaxvB,GACtC6c,EAAiB,UAAkB,OAAd2S,EAAqBxmB,EAAUynB,EAAgBzsB,eAAnD,QAA+D,KAEhF0sB,EAAwBxnB,YAAmB,OAACF,QAAD,IAACA,SAAWhJ,EAAW,QACtEuwB,QADsE,IACtEA,SAAiBvwB,EADqD,OAEtEwwB,QAFsE,IAEtEA,SAAkBxwB,IAGd2wB,EAAqBP,IAAqBlX,IAAMC,MAChDyX,EAAelB,EAAeL,EAAD,UAAcsB,EAAYJ,EAAgBC,SAA1C,aAA6DxwB,GAE1F6wB,EDrDD,SAAyBC,EAAmCC,GACjE,IAAMC,EAAenD,EAAiB,OAACiD,QAAD,IAACA,OAAD,EAACA,EAAkB9rB,SAAU+rB,GAEnE,OAAOvvB,mBAAQ,WACoD,IAAD,EAAhE,OAAIsvB,GAAoBC,GAAeC,EAAa5uB,OAAS,GAC3D,UACE6uB,QAAMJ,iBAAiBG,EAAcF,EAAkBC,EAAa,CAAEG,QAAS,EAAGC,cAAe,IAAK,UADxG,QAIK,OACN,CAACH,EAAcF,EAAkBC,IC2CXK,CAAgBT,EAAYC,OAAe5wB,EAA5B,OAAuCwwB,QAAvC,IAAuCA,SAAkBxwB,GAC3FqxB,EDtCD,SAA0BC,EAAuBC,GACtD,IAAMP,EAAenD,EAAkByD,EAAD,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAmBvsB,UAEtE,OAAOxD,mBAAQ,WACoD,IAAD,EAAhE,OAAI8vB,GAAcC,GAAqBP,EAAa5uB,OAAS,GAC3D,UACE6uB,QAAMI,kBAAkBL,EAAcM,EAAYC,EAAmB,CAAEL,QAAS,EAAGC,cAAe,IAAK,UADzG,QAKK,OACN,CAACH,EAAcM,EAAYC,IC2BJC,CAAgB,OAACjB,QAAD,IAACA,SAAiBvwB,EAAY2wB,OAA2B3wB,EAAf4wB,GAE9Ea,EAAUd,EAAYE,EAAmBQ,EAEzCK,GAAgB,mBACnBxY,IAAMC,MAAQuX,EAAsB,IADjB,cAEnBxX,IAAMG,OAASqX,EAAsB,IAFlB,GAKhBvnB,GAA2C,mBAC9C+P,IAAMC,MADwC,OAChCoX,QADgC,IAChCA,SAAiBvwB,GADe,cAE9CkZ,IAAMG,OAFwC,OAE/BmX,QAF+B,IAE/BA,SAAkBxwB,GAFa,IAM5CgJ,IACHmnB,EAAaroB,EAAE,mBAGZ8oB,KACHT,EAAU,UAAGA,SAAH,QAAiBroB,EAAE,oBAG1BqB,EAAW+P,IAAMC,QAAWhQ,EAAW+P,IAAMG,UAChD8W,EAAU,UAAGA,SAAH,QAAiBroB,EAAE,mBAG/B,IACyB,EADnB6pB,EAAc7qB,YAAU+V,GAC9B,GAAKA,GAAO8U,GAEL,IAC6C,IAAlD7B,EAAwBhwB,QAAQ6xB,IAC/Bd,GAAoBd,EAAgBc,EAAkBc,IACtDN,GAAqBtB,EAAgBsB,EAAmBM,GACzD,CAAC,IAAD,EACAxB,EAAU,UAAGA,SAAH,QAAiB,0BAN3BA,EAAU,UAAGA,SAAH,QAAiB,oBAS7B,MAA0B3iB,cAAnBuL,EAAP,oBAEM6Y,EAA0BH,GAAW1Y,GAAmBD,YAA+B2Y,EAAS1Y,GAGtG,EAA8B,CAC5B2Y,EAAiBxY,IAAMC,OACvByY,EAA0BA,EAAwB1Y,IAAMC,OAAS,MAF5D0Y,EAAP,KAAkBC,EAAlB,KASA,OAJID,GAAaC,GAAYD,EAAUrY,SAASsY,KAC9C3B,EAAU,uBAAmB2B,EAAS9sB,SAASL,OAArC,aAGL,CACLwE,aACAuoB,mBACAd,eACAa,QAAO,OAAEA,QAAF,IAAEA,SAAWzxB,EACpBmwB,cAIJ,SAAS4B,EAA8BC,GAAwB,IAAD,EAC5D,GAAwB,kBAAbA,EAAuB,CAChC,IAAM1xB,EAAQwG,YAAUkrB,GACxB,GAAI1xB,EAAO,OAAOA,EAClB,GAA+B,SAA3B0xB,EAASrqB,cAA0B,MAAO,OAC9C,IAAc,IAAVrH,EAAiB,MAAO,OAE9B,iBAAO,QAAP,EAAiB,GAYnB,IAAM2xB,EAAiB,qFACjBC,EAAgB,sBAUf,SAASC,EAA2BC,GAAgC,IAAD,EACpE7B,EAAgBwB,EAA8BK,EAAS7B,eACvDC,EAAiBuB,EAA8BK,EAAS5B,gBACxDD,IAAkBC,IACmB,kBAA5B4B,EAAS5B,eAClBD,EAAgB,GAEhBC,EAAiB,IAIrB,IA/BoCwB,EA+B9BxC,EApBR,SAA4BA,GAC1B,MAAyB,kBAAdA,EAA+B,KAC1B1oB,YAAU0oB,KAEtByC,EAAexrB,KAAK+oB,IACpB0C,EAAczrB,KAAK+oB,GADoBA,EAEpC,MAcW6C,CAAmBD,EAAS5C,WAE9C,OAAO,EAAP,iBACGtW,IAAMC,MAAQ,CACb1R,WAAY8oB,IAFhB,cAIGrX,IAAMG,OAAS,CACd5R,WAAY+oB,IALhB,2BA/B2B,kBAFSwB,EAwCOI,EAASE,cAtCZC,MAAMC,WAAWR,IAAwB,GAAXA,GA+BtE,iCA5BF,SAA2CA,GACzC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAASlN,cAA6B5L,IAAMG,OAASH,IAAMC,MAmC9EsZ,CAAkCL,EAASM,aAR/D,0BASElD,GATF,EAcK,SAASmD,IAGd,IAAQ5xB,EAAYC,cAAZD,QACFM,EAAWC,cACX8wB,ECnQO,WACb,IAAQzN,EAAWiO,cAAXjO,OACR,OAAOnjB,mBACL,kBAAOmjB,GAAUA,EAAOviB,OAAS,EAAID,gBAAMwiB,EAAQ,CAAEkO,aAAa,EAAOC,mBAAmB,IAAU,KACtG,CAACnO,ID+PcoO,GACjB,EAA4BxoB,qBAA5B,mBAAO7H,EAAP,KAAeswB,EAAf,KAsBA,OAlBA/wB,qBAAU,WACR,GAAKlB,EAAL,CACA,IAAMkyB,EAASd,EAA2BC,GAE1C/wB,EACE6xB,YAAiB,CACf7D,WAAY4D,EAAO5D,WACnBL,MAAOiE,EAAO7C,iBACdC,gBAAiB4C,EAAO/Z,IAAMC,OAAO1R,WACrC6oB,iBAAkB2C,EAAO/Z,IAAMG,QAAQ5R,WACvC+nB,UAAWyD,EAAOzD,aAItBwD,EAAU,CAAE3C,gBAAiB4C,EAAO/Z,IAAMC,OAAO1R,WAAY6oB,iBAAkB2C,EAAO/Z,IAAMG,QAAQ5R,gBAEnG,CAACpG,EAAUN,IAEP2B,I,qFE7QMywB,IAZ6B,SAACpX,GAC3C,IAAQjU,EAAM8U,cAAN9U,EACR,EAA0BsrB,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,aAAeH,EAAOC,GAAhDC,sBAER,OACE,cAAC,IAAD,yBAAQzoB,QAASyoB,GAA2BxX,GAA5C,aACGjU,EAAE,uB,yMCPIoO,EAAUtX,UAAOC,IAAV,iEAIP40B,EAAU70B,kBAAOG,IAAPH,CAAH,8CAIP80B,EAAgB90B,kBAAOE,IAAPF,CAAH,gDAIb+0B,EAAgB/0B,kBAAO60B,EAAP70B,CAAH,+HACJ,qBAAGqL,MAAkBC,OAAO6Q,QAQ5C6Y,EAAsBh1B,UAAOC,IAAV,uGAIjBg1B,KAUKC,EAAgB,SAAC,GAAD,IAAGxY,EAAH,EAAGA,SAAUF,EAAb,EAAaA,UAAb,OAC3B,eAACwY,EAAD,WACE,cAAC,IAAD,UAAUtY,IACV,cAAC,IAAD,CAAYxQ,QAASsQ,EAAWuP,QAAQ,OAAxC,SACE,cAAC,IAAD,CAAW2B,MAAM,kBClCjByH,EAAqBn1B,kBAAO2S,IAAP3S,CAAH,2DACZ,qBAAG6F,QACJ,qBAAGA,QAyBCuvB,EAtBoB,SAAC,GAAiE,IAA/D5Y,EAA8D,EAA9DA,UAAW6Y,EAAmD,EAAnDA,YACvCnsB,EAAM8U,cAAN9U,EACR,OACE,cAACoO,EAAD,UACE,eAACud,EAAD,WACE,cAAC,EAAD,CAAerY,UAAWA,EAA1B,SAAsCtT,EAAE,8BACxC,cAAC4rB,EAAD,UACE,cAACK,EAAD,CAAoBxuB,IAAI,0BAA0BC,IAAI,SAASf,KAAK,WAEtE,eAAC,IAAD,CAAYzF,IAAI,OAAOC,QAAQ,SAA/B,UACE,cAAC,IAAD,CAAYD,IAAI,OAAOC,QAAQ,SAA/B,SACE,cAAC,KAAD,CAAMwiB,SAAS,OAAf,SACE,iCAASwS,QAGb,cAAC,KAAD,CAAMxS,SAAS,OAAf,SAAuB3Z,EAAE,sD,mBCSpBosB,EAvBqB,SAAC,GAAoE,IAAlE9Y,EAAiE,EAAjEA,UAAWra,EAAsD,EAAtDA,QAASqU,EAA6C,EAA7CA,KACnDnL,EAAQ6H,qBAAWwU,gBACjBxe,EAAM8U,cAAN9U,EACR,OACE,cAACoO,EAAD,UACE,eAACud,EAAD,WACE,cAAC,EAAD,CAAerY,UAAWA,EAA1B,SAAsCtT,EAAE,2BACxC,cAAC4rB,EAAD,UACE,cAAC,IAAD,CAAepW,YAAa,GAAK7Y,KAAM,GAAI6nB,MAAOriB,EAAMC,OAAOqG,YAEjE,eAAC,IAAD,CAAYvR,IAAI,MAAMC,QAAQ,SAA9B,UACG8B,GAAWqU,GACV,cAAC,IAAD,CAAcvE,KAAMsjB,YAAiBpzB,EAASqU,EAAM,eAApD,+BAEF,cAAC,IAAD,CAAQtK,QAASsQ,EAAWgZ,GAAG,OAA/B,SACGtsB,EAAE,oBCUAusB,EA1BsB,SAAC,GAOP,IAN7BxZ,EAM4B,EAN5BA,OACAO,EAK4B,EAL5BA,UACAkZ,EAI4B,EAJ5BA,cACAlf,EAG4B,EAH5BA,KACA6e,EAE4B,EAF5BA,YACA7V,EAC4B,EAD5BA,QAEQrd,EAAYC,cAAZD,QAER,OAAKA,EAIH,cAACoa,EAAA,EAAD,CAAON,OAAQA,EAAQO,UAAWA,EAAWT,UAAW,GAAxD,SACG2Z,EACC,cAAC,EAAD,CAA4BlZ,UAAWA,EAAW6Y,YAAaA,IAC7D7e,EACF,cAAC,EAAD,CAA6BrU,QAASA,EAASqU,KAAMA,EAAMgG,UAAWA,IAEtEgD,MAVe,MCHRmW,EAZkB,SAAC,GAAoF,IAAlF7R,EAAiF,EAAjFA,MAAO8R,EAA0E,EAA1EA,cAAepZ,EAA2D,EAA3DA,UAAWqZ,EAAgD,EAAhDA,WACnE,OACE,eAACve,EAAD,WACE,eAACud,EAAD,WACE,cAAC,EAAD,CAAerY,UAAWA,EAA1B,SAAsCsH,IACrC+R,OAEH,cAACd,EAAD,CAAe30B,IAAI,OAAnB,SAA2Bw1B,U,UCYlBE,EApBiB,SAAC,GAA0D,IAAxD9I,EAAuD,EAAvDA,QAASxQ,EAA8C,EAA9CA,UACpCnR,EAAQ6H,qBAAWwU,gBACzB,OACE,eAACpQ,EAAD,WACE,eAACud,EAAD,WACE,cAAC,EAAD,CAAerY,UAAWA,EAA1B,mBACA,eAAC,IAAD,CAAYnW,MAAO,CAAEwlB,UAAW,GAAIprB,QAAS,UAAYL,IAAI,OAAOC,QAAQ,SAA5E,UACE,cAAC,IAAD,CAAeqtB,MAAOriB,EAAMC,OAAOgN,QAASjS,MAAO,CAAEqY,YAAa,KAAO7Y,KAAM,KAC/E,cAAC,KAAD,CAAMgd,SAAS,OAAO6K,MAAM,UAAUrnB,MAAO,CAAEsnB,UAAW,SAAUhI,MAAO,OAA3E,SACGqH,UAIP,cAAC+H,EAAD,CAAe30B,IAAI,OAAnB,SACE,cAAC,IAAD,CAAQ8L,QAASsQ,EAAjB,2BChBOiZ,O,+QCHTM,EAAc/1B,UAAOqjB,MAAV,snBACN,gBAAGnf,EAAH,EAAGA,MAAOmH,EAAV,EAAUA,MAAV,OAAuBnH,EAAQmH,EAAMC,OAAOgN,QAAUjN,EAAMC,OAAOI,QAS9D,gBAAGlL,EAAH,EAAGA,MAAH,OAAeA,GAASA,KAqB3B,qBAAG6K,MAAkBC,OAAOI,QAInCsqB,EAAajiB,OAAO,0BAEbkiB,EAAQnY,IAAMpU,MAAK,YAWyC,IAVvEE,EAUsE,EAVtEA,MACA4mB,EASsE,EATtEA,YACAnH,EAQsE,EARtEA,YACGlX,EAOmE,qDAOtE,OACE,cAAC4jB,EAAD,2BACM5jB,GADN,IAEEvI,MAAOA,EACP0f,SAAU,SAACjX,GAVE,IAAC6jB,GACM,MADNA,EAYH7jB,EAAML,OAAOpI,MAAMoK,QAAQ,KAAM,OAXlBgiB,EAAWnuB,KAAKsuB,YAAaD,MACvD1F,EAAY0F,IAaZE,UAAU,UACVtS,MAAM,eACNuS,aAAa,MACbC,YAAY,MAEZlN,KAAK,OACLmN,QAAQ,sBACRlN,YAAaA,GAAe,MAC5BmN,UAAW,EACXC,UAAW,GACXC,WAAW,c,QC9DXC,EAAW32B,UAAOC,IAAV,iHAID,qBAAG+iB,SAA2B,8BAAgC,kCAErE4T,EAAkB52B,UAAOC,IAAV,yNAWf42B,EAAgB72B,kBAAOoY,MAAM8D,MAAM,CAAE4a,KAAM,UAA3B92B,CAAH,4GAIR,gBAAGgjB,EAAH,EAAGA,SAAU3X,EAAb,EAAaA,MAAb,OAA0B2X,EAAW,UAAY3X,EAAMC,OAAOqG,WAEnEolB,EAAiB/2B,UAAOyR,OAAV,kVAMT,gBAAGuR,EAAH,EAAGA,SAAU3X,EAAb,EAAaA,MAAb,OAA0B2X,EAAW3X,EAAMC,OAAOI,KAAO,aAS5C,gBAAGL,EAAH,EAAGA,MAAH,OAAe2rB,YAAO,IAAM3rB,EAAMC,OAAO+X,UAG3D4T,EAAWj3B,UAAOC,IAAV,yPAIH,qBAAGoL,MAAkBC,OAAOI,QAM1B,gBAAGL,EAAH,EAAGA,MAAH,OAAe2rB,YAAO,GAAK3rB,EAAMC,OAAOE,eAG/C0rB,EAAUl3B,UAAO0Y,KAAV,yGAKPye,EAAan3B,UAAOC,IAAV,kKAIG,qBAAGm3B,UAA6B,MAAQ,UACrC,qBAAG/rB,MAAkBC,OAAOyJ,cAG5CsiB,EAAYr3B,UAAOC,IAAV,kGAEO,qBAAGoL,MAAkBC,OAAOyJ,cAClC,qBAAG1J,MAAkBisB,QAAQC,SAEvCC,EAASx3B,UAAOC,IAAV,yGASNw3B,EAAcz3B,kBAAOoY,MAAM8D,MAAM,CAAE4a,KAAM,UAA3B92B,CAAH,4GAIN,qBAAGqL,MAAkBC,OAAOqG,WAGjCoP,EAAU/gB,UAAOC,IAAV,wOACA,qBAAGy3B,mBAA+C,QAAU,UAOnD,qBAAGrsB,MAAkBC,OAAOqsB,YACvC,qBAAGtsB,MAAkBC,OAAOC,oBAsBxB,SAASqsB,EAAT,GAgBc,IAf3BhuB,EAe0B,EAf1BA,MACA4mB,EAc0B,EAd1BA,YACAqH,EAa0B,EAb1BA,MACAC,EAY0B,EAZ1BA,cACAC,EAW0B,EAX1BA,UACAC,EAU0B,EAV1BA,MACA7S,EAS0B,EAT1BA,iBACA/e,EAQ0B,EAR1BA,SAQ0B,IAP1B6xB,6BAO0B,aAN1BC,mBAM0B,aAL1BxoB,YAK0B,MALnB,KAKmB,MAJ1B0nB,iBAI0B,SAH1BhS,EAG0B,EAH1BA,cACA9X,EAE0B,EAF1BA,GACAia,EAC0B,EAD1BA,gBAEA,EAAkC5b,oBAAS,GAA3C,mBAAOwsB,EAAP,KAAkBC,EAAlB,KACQhuB,EAAYhI,cAAZgI,QACFiuB,EAA0BrtB,YAAkB,OAACZ,QAAD,IAACA,SAAWhJ,EAAZ,OAAuBgF,QAAvB,IAAuBA,SAAYhF,GAC7E8H,EAAM8U,cAAN9U,EACFovB,EAAkBN,GAAS9uB,EAAE,SAC7BqvB,GAAsBxsB,uBAAY,WACtCqsB,GAAa,KACZ,CAACA,IAEEpxB,GAAYH,cACZmB,GAAepF,mBAAQ,WAEzB,IACI41B,EAFN,GAAIpyB,IACW8E,OAAOwF,KAAK1J,IAEpB4M,SAAQ,SAACnQ,GACRuD,GAAUvD,GAAKsC,SAAWK,EAASL,SACrCyyB,EAAW/0B,MAIX+0B,GAAU,OAAOxxB,GAAUwxB,GAAUpzB,QAE3C,MAAO,KACN,CAAC4B,GAAWZ,IAEf,GAAoDuF,oBAAS,GAA7D,qBAAO+rB,GAAP,MAA2Be,GAA3B,MAEMC,GAAgB91B,mBACpB,iBAAO,CACL+1B,GAAIZ,EAAYA,EAAUre,SAAS,IAAIT,UAAQ,GAAI,MAAM8K,eAAY3iB,EACrEw3B,GAAIb,EAAYA,EAAUre,SAAS,IAAIT,UAAQ,GAAI,MAAM8K,eAAY3iB,EACrEy3B,GAAId,EAAYA,EAAUre,SAAS,IAAIT,UAAQ,GAAI,MAAM8K,eAAY3iB,EACrE03B,IAAKf,EAAYA,EAAUhU,eAAY3iB,KAEzC,CAAC22B,IAGGgB,GAAW,kBACf,cAAC,KAAD,CAAKpT,MAAM,KAAKT,OAAO,KAAK5G,QAAQ,YAApC,SACE,sBACEG,EAAE,0UACFF,KAAK,eAKLya,GAAe,kBACnB,eAAC,KAAD,CAAK1a,QAAQ,YAAYqH,MAAM,OAAO+H,MAAM,OAA5C,UACE,sBAAMjP,EAAE,oEAAoEF,KAAK,YACjF,sBAAME,EAAE,oEAAoEF,KAAK,YACjF,sBAAME,EAAE,oFAAoFF,KAAK,YACjG,sBAAME,EAAE,mFAAmFF,KAAK,YAChG,sBAAME,EAAE,oFAAoFF,KAAK,YACjG,sBAAME,EAAE,kFAAkFF,KAAK,YAC/F,sBAAME,EAAE,mEAAmEF,KAAK,YAChF,sBAAME,EAAE,oEAAoEF,KAAK,YACjF,sBAAME,EAAE,oFAAoFF,KAAK,YACjG,sBAAME,EAAE,mFAAmFF,KAAK,YAChG,sBAAME,EAAE,kEAAkEF,KAAK,YAC/E,sBAAME,EAAE,8DAA8DF,KAAK,YAC3E,sBAAME,EAAE,oEAAoEF,KAAK,YACjF,sBAAME,EAAE,oEAAoEF,KAAK,YACjF,sBACEE,EAAE,kGACFF,KAAK,YAEP,sBACEE,EAAE,kGACFF,KAAK,YAEP,sBAAME,EAAE,oEAAoEF,KAAK,YACjF,sBAAME,EAAE,mEAAmEF,KAAK,YAChF,sBAAME,EAAE,oFAAoFF,KAAK,YACjG,sBAAME,EAAE,mFAAmFF,KAAK,YAChG,sBACEE,EAAE,gGACFF,KAAK,YAEP,sBACEE,EAAE,kGACFF,KAAK,YAEP,sBACEE,EAAE,6LACFF,KAAK,YAEP,sBACEE,EAAE,kIACFF,KAAK,YAEP,sBACEE,EAAE,kMACFF,KAAK,YAEP,sBACEE,EAAE,kMACFF,KAAK,YAEP,sBACEE,EAAE,yGACFF,KAAK,YAEP,sBACEE,EAAE,0GACFF,KAAK,YAEP,sBACEE,EAAE,mKACFF,KAAK,gBAKX,OACE,eAAC4Y,EAAD,CAAY7pB,GAAIA,EAAhB,UACE,eAAC+pB,EAAD,CAAWD,UAAWA,EAAtB,WACIA,GACA,cAACH,EAAD,UACE,eAAC32B,EAAA,EAAD,WACE,cAAC,KAAD,CAAMotB,MAAM,eAAe7K,SAAS,OAApC,SACGyV,IAEFluB,GACC,cAAC,KAAD,CAAM8B,QAAS2rB,EAAOhV,SAAS,OAAOxc,MAAO,CAAEylB,QAAS,SAAU0B,OAAQ,WAA1E,UACI0K,GAAiB9xB,GAAYiyB,EAA9B,UACMnvB,EAAE,WADR,oBACuBmvB,QADvB,IACuBA,OADvB,EACuBA,EAAyBhd,cAAc,IAC3D,YAMd,eAACsb,EAAD,CAAUtwB,MAAO+wB,EAAY,CAAE32B,QAAS,IAAKE,aAAc,OAAU,GAAIqiB,SAAUiV,EAAnF,WACIb,GACA,qCACE,cAAC,EAAD,CACExW,UAAU,qBACVhX,MAAOA,EACP4mB,YAAa,SAACyI,GACZzI,EAAYyI,MAGf7uB,GAAWhE,GAAY0xB,GAA2B,OAAVE,GACvC,cAAC,IAAD,CAAQ9rB,QAAS2rB,EAAOqB,MAAM,KAAKnN,QAAQ,OAA3C,SACG7iB,EAAE,YAKX,cAAC6tB,EAAD,CACE/T,WAAY5c,EACZwa,UAAU,8BACV1U,QAAS,WACF+rB,GACHG,GAAa,IALnB,SASE,eAAClB,EAAD,WACGxnB,EACC,cAAC,IAAD,CAAoBkI,UAAWlI,EAAKC,OAAQkI,UAAWnI,EAAKE,OAAQ/J,KAAM,GAAI2R,QAAM,IAClFpR,EACF,cAACD,EAAA,EAAD,CAAcC,SAAUA,EAAUP,KAAK,OAAOQ,MAAO,CAAEyc,YAAa,SAClE,KACHpT,EACC,eAAC,KAAD,kBACGA,QADH,IACGA,OADH,EACGA,EAAMC,OAAO5J,OADhB,WACyB2J,QADzB,IACyBA,OADzB,EACyBA,EAAME,OAAO7J,UAGtC,cAAC,KAAD,WACIK,GAAYA,EAASL,QAAUK,EAASL,OAAOvC,OAAS,GAAxD,UACK4C,EAASL,OAAOqe,MAAM,EAAG,GAD9B,cACsChe,EAASL,OAAOqe,MAClDhe,EAASL,OAAOvC,OAAS,EACzB4C,EAASL,OAAOvC,SAHpB,OAKE4C,QALF,IAKEA,OALF,EAKEA,EAAUL,SAAWmD,EAAE,wBAG7B+uB,GAAyB,cAAC,IAAD,UAItB,OAAR7xB,QAAQ,IAARA,OAAA,EAAAA,EAAUL,SAA+B,UAAb,OAARK,QAAQ,IAARA,OAAA,EAAAA,EAAUL,SAC7B,eAACyxB,EAAD,WACE,eAACC,EAAD,CACE0B,OAAK,EACLzN,MAAI,EACJxf,QAAS,WACHktB,UAAUC,YACZD,UAAUC,UAAUC,UAAUtxB,IAC9BywB,IAAsB,GACtBc,YAAW,WACTd,IAAsB,KACrB,OATT,UAaE,cAACM,GAAD,IACA,cAAChY,EAAD,CAAS2W,mBAAoBA,GAA7B,uBAEF,cAACD,EAAD,CACE0B,OAAK,EACLzN,MAAI,EACJxf,QAAS,kBACPstB,YACExxB,GACA5B,EAASL,OACTK,EAASsC,SACT5C,YAA2BM,EAASL,OAAOmgB,iBARjD,SAYE,cAAC8S,GAAD,YAKPjB,GACC,cAACnB,EAAD,UACG,CAAC,GAAI,GAAI,GAAI,KAAK1zB,KAAI,SAACu2B,GAAD,OACrB,cAAC5C,EAAD,CACE3qB,QAAS,kBAAMskB,EAAYkI,GAAce,KACzCzW,SAAU+U,GAAuB,MAAVnuB,GAAiBA,IAAU8uB,GAAce,GAFlE,SAIGA,EAAU,IAAV,UAAmBA,EAAnB,KAAgC,iBAMzCxB,GAAyB9S,GACzB,cAACyI,EAAA,EAAD,CACE3R,OAAQkc,EACR3b,UAAW+b,GACXpT,iBAAkBA,EAClBxC,iBAAkBvc,EAClBkhB,sBAAuBlC,EACvBmC,gBAAiBA,S,sNC/XpB,SAASmS,EAAkBtyB,EAAeuyB,EAAgBxiB,GAC/D,IAAMtS,EAAWuD,YAAgB,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAOhC,SAAS,GAE5CD,EAASvC,mBAAQ,iBAAM,CAAC+2B,EAAOxiB,KAAU,CAACwiB,EAAOxiB,IACjDyiB,EAAYl0B,YAAoBb,EAAU,YAAaM,GAAQrB,OAErE,OAAOlB,mBAAQ,kBAAOwE,GAASwyB,EAAY,IAAI3vB,cAAY7C,EAAOwyB,EAAU5vB,iBAAc5I,IAAY,CACpGgG,EACAwyB,IAIWF,ICLHG,E,6CAQL,SAASC,EACdC,EACA5iB,GAEA,IAAQ/M,EAAYhI,cAAZgI,QACFhD,EAAQ2yB,aAA2B9vB,cAAc8vB,EAAgB3yB,WAAQhG,EACzE44B,EAAmBN,EAAkBtyB,EAAD,OAAQgD,QAAR,IAAQA,SAAWhJ,EAAW+V,GAClE8iB,EAAkB/iB,YAAqB,OAAC9P,QAAD,IAACA,OAAD,EAACA,EAAOhC,QAAS+R,GAGxD+iB,EAA+Bt3B,mBAAQ,WAC3C,OAAKm3B,GAAoB5iB,EACrB4iB,EAAgB3zB,WAAaM,QAAcmzB,EAAcM,SAExDH,EAGEA,EAAiBpf,SAASmf,GAC7BE,EACEJ,EAAcO,QACdP,EAAcQ,aAChBR,EAAcM,SAPYN,EAAcS,QAHHT,EAAcS,UAWtD,CAACP,EAAiBC,EAAkBC,EAAiB9iB,IAElDhP,EAAgBC,YAAgB,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAOhC,SACxCqR,EAAiBL,cAEjBmkB,EAAUxuB,sBAAW,sBAAC,8BAAAnB,EAAA,yDACtBsvB,IAAkBL,EAAcQ,aADV,uBAExB11B,QAAQT,MAAM,oCAFU,6BAKrBkD,EALqB,uBAMxBzC,QAAQT,MAAM,YANU,6BAUrBiE,EAVqB,uBAWxBxD,QAAQT,MAAM,yBAXU,6BAerB61B,EAfqB,wBAgBxBp1B,QAAQT,MAAM,6BAhBU,8BAoBrBiT,EApBqB,wBAqBxBxS,QAAQT,MAAM,cArBU,kCAyBtBs2B,GAAW,EAzBW,UA0BCryB,EAAcsyB,YAAYF,QAAQpjB,EAASujB,KAAY3N,OAAM,WAGtF,OADAyN,GAAW,EACJryB,EAAcsyB,YAAYF,QAAQpjB,EAAS4iB,EAAgB1lB,IAAIrK,eA7B9C,eA0BpB2wB,EA1BoB,yBAiCnBxyB,EACJoyB,QAAQpjB,EAASqjB,EAAWT,EAAgB1lB,IAAIrK,WAAa0wB,IAAY,CACxEE,SAAUC,YAAmBF,KAE9B7N,MAAK,SAACzW,GACLI,EAAeJ,EAAU,CACvBC,QAAQ,WAAD,OAAayjB,EAAgB3zB,SAASL,QAC7CwQ,SAAU,CAAEvO,aAAcZ,EAAMhC,QAAS+R,gBAG5C4V,OAAM,SAAC7oB,GAEN,MADAS,QAAQT,MAAM,0BAA2BA,GACnCA,MA7CgB,4CA+CzB,CAACg2B,EAAe9yB,EAAOe,EAAe4xB,EAAiB5iB,EAASV,IAEnE,MAAO,CAACyjB,EAAeK,GAIlB,SAASO,EAA4BxhB,GAAqC,IAAtBa,EAAqB,uDAAH,EACrE4f,EAAkBn3B,mBACtB,kBAAO0W,EAAQY,YAA+BZ,EAAOa,GAAiBG,IAAMC,YAASnZ,IACrF,CAACkY,EAAOa,IAEV,OAAO2f,EAAmBC,EAAiBgB,M,SA7FjClB,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,6DCbZ,uDAOO,SAASmB,EAAe5mB,GAC7B,GAAKA,EACL,OAAIA,EAAehO,WAAaM,QAC1BoD,OAAKod,YAAY9S,EAAeC,IAAK4mB,KAChCpwB,iBAAeC,MAAMhB,OAAKsP,SAAShF,EAAeC,IAAK4mB,MAEzDpwB,iBAAeC,MAAMhB,OAAKC,OAAO,IAEnCqK,I,qICJH8mB,EAAkCl7B,UAAOC,IAAV,oDAI/Bk7B,EAASn7B,UAAOC,IAAV,+CAINm7B,EAAUp7B,UAAOC,IAAV,8OAKTk7B,EAIAA,GAIA,qBAAG9vB,MAAkB+Q,aAAaE,MAKhC+e,EAAQr7B,UAAOC,IAAV,6FAMLq7B,EAAmB,CACvB,CAAEtD,MAAO,OAAQpuB,MAAO,IACxB,CAAEouB,MAAO,OAAQpuB,MAAO,IACxB,CAAEouB,MAAO,KAAMpuB,MAAO,IAsFT2xB,EAnFmB,WAChC,IAAQryB,EAAM8U,cAAN9U,EACR,EAA0D0F,cAA1D,mBAAOC,EAAP,KAA8B2sB,EAA9B,KACA,EAA0B7vB,mBAASkD,EAAwB,KAA3D,mBAAOjF,EAAP,KAAc6xB,EAAd,KACA,EAA0B9vB,mBAAwB,MAAlD,mBAAOzH,EAAP,KAAcw3B,EAAd,KA8BA,OAvBAr4B,qBAAU,WACR,IACE,IAAMs4B,EAAmB,IAAR/xB,GACZgyB,OAAOjI,MAAMgI,IAAaA,EAAW,GAAKA,EAxDhC,KAyDbH,EAAyBG,GACzBD,EAAS,OAETA,EAASxyB,EAAE,sCAEb,SACAwyB,EAASxyB,EAAE,yCAEZ,CAACU,EAAO8xB,EAAUF,EAA0BtyB,IAG/C7F,qBAAU,WACJwL,EApEmB,GAqErB6sB,EAASxyB,EAAE,8BACF2F,EArEa,KAsEtB6sB,EAASxyB,EAAE,uCAEZ,CAAC2F,EAAuB6sB,EAAUxyB,IAGnC,eAACgyB,EAAD,WACE,eAACG,EAAD,WACE,cAAC,KAAD,CAAMh1B,MAAO,CAAEw1B,WAAY,KAA3B,SAAmC3yB,EAAE,wBACrC,cAACuC,EAAA,EAAD,CACEC,KAAMxC,EAAE,oGAGZ,eAACkyB,EAAD,WACE,cAAC,IAAD,CAAMU,GAAI,CAAC,MAAO,GAAIC,GAAI,CAAC,EAAG,OAA9B,SACGT,EAAiBp4B,KAAI,YAAwC,IAArC80B,EAAoC,EAApCA,MAAcgE,EAAsB,EAA7BpyB,MAG9B,OACE,cAACuxB,EAAD,UACE,cAAC,IAAD,CAAQpP,QAASniB,IAAUoyB,EAAkB,UAAY,WAAY9vB,QAJrD,kBAAMuvB,EAASO,IAI/B,SACGhE,KAFQgE,QAQnB,eAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,cAACd,EAAD,UACE,cAAC,IAAD,CACE/R,KAAK,SACL8P,MAAM,KACNgD,KAAM,GACNC,IAAK,GACL9S,YAAY,KACZzf,MAAOA,EACP0f,SA5DS,SAAC8S,GACpB,IAAeC,EAAeD,EAAIpqB,OAA1BpI,MACR6xB,EAAS7H,WAAWyI,KA2DVC,UAAqB,OAAVp4B,MAGf,cAACi3B,EAAD,UACE,cAAC,KAAD,CAAMtY,SAAS,OAAf,uBAIL3e,GACC,cAAC,KAAD,CAAMsxB,GAAG,MAAM9H,MAAM,UAArB,SACGxpB,QCtHLq4B,EAAmCv8B,UAAOC,IAAV,oDAIhCo7B,EAAQr7B,UAAOC,IAAV,6FAMLqa,EAAQta,UAAOC,IAAV,wLAIHg2B,IAIA7d,MAmDOokB,EA7CoB,WACjC,IAAQtzB,EAAM8U,cAAN9U,EACR,EAAgC8F,cAAhC,mBAAOE,EAAP,KAAiButB,EAAjB,KACA,EAA0B9wB,mBAASuD,EAAW,IAA9C,mBAAOtF,EAAP,KAAc6xB,EAAd,KACA,EAA0B9vB,mBAAwB,MAAlD,mBAAOzH,EAAP,KAAcw3B,EAAd,KAsBA,OAdAr4B,qBAAU,WACR,IACE,IAAMs4B,EAAmB,GAAR/xB,GACZgyB,OAAOjI,MAAMgI,IAAaA,EAAW,GACxCc,EAAYd,GACZD,EAAS,OAETA,EAASxyB,EAAE,2BAEb,SACAwyB,EAASxyB,EAAE,8BAEZ,CAACU,EAAO8xB,EAAUe,EAAavzB,IAGhC,eAACqzB,EAAD,WACE,eAAC,EAAD,WACE,cAAC,KAAD,CAAMl2B,MAAO,CAAEw1B,WAAY,KAA3B,SAAmC3yB,EAAE,0BACrC,cAACuC,EAAA,EAAD,CAAgBC,KAAMxC,EAAE,+EAE1B,eAACoR,EAAD,WACE,cAAC,IAAD,CAAO8O,KAAK,SAAS8S,KAAK,IAAIC,IAAI,IAAIvyB,MAAOA,EAAO0f,SA3BrC,SAAC8S,GACpB,IAAeC,EAAeD,EAAIpqB,OAA1BpI,MACR6xB,EAASiB,SAASL,EAAY,QA0B1B,cAAC,KAAD,UAAOnzB,EAAE,gBAEVhF,GACC,cAAC,KAAD,CAAMsxB,GAAG,MAAM9H,MAAM,UAArB,SACGxpB,QC9DLoT,EAAUtX,UAAOC,IAAV,iIAOPo7B,EAAQr7B,UAAOC,IAAV,6FAuBI08B,EAjBW,WACxB,IAAQzzB,EAAM8U,cAAN9U,EACR,EAA4CsF,cAA5C,mBAAOouB,EAAP,KAAqBluB,EAArB,KAEA,OACE,eAAC4I,EAAD,WACE,eAAC,EAAD,WACE,cAAC,KAAD,CAAMjR,MAAO,CAAEw1B,WAAY,KAA3B,SAAmC3yB,EAAE,iBACrC,cAACuC,EAAA,EAAD,CACEC,KAAMxC,EAAE,4FAGZ,cAAC,KAAD,CAAQ2zB,QAASD,EAActT,SAAU,kBAAM5a,KAAuBwqB,MAAM,WCpB5E4D,EAAmB,kBAAM,MAahBC,EAXO,SAAC,GAA0D,IAAD,IAAvDvgB,iBAAuD,MAA3CsgB,EAA2C,EACtE5zB,EAAM8U,cAAN9U,EACR,OACE,eAAC,IAAD,CAAO4a,MAAO5a,EAAE,YAAasT,UAAWA,EAAxC,UACE,cAACwgB,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,qCCNAF,EAAmB,kBAAM,MAEzBG,EAAuB,SAACryB,EAAuBsyB,GAAxB,OAAkDA,EAAEjmB,UAAYrM,EAAEqM,WAsEhFkmB,EAtDiB,SAAC,GAAoE,IAAD,IAAjE3gB,iBAAiE,MAArDsgB,EAAqD,EAC1F5zB,EAAM8U,cAAN9U,EACR,EAA6B9G,cAArBgI,EAAR,EAAQA,QAASjI,EAAjB,EAAiBA,QACXiV,EAAkBT,cAGlBymB,EAA2Bx6B,mBAAQ,WAEvC,OADYsI,OAAOC,OAAOiM,GACfrU,OAAO8T,KAAqBzT,KAAK65B,KAC3C,CAAC7lB,IAEJ,OACE,eAAC,IAAD,CAAO0M,MAAO5a,EAAE,uBAAwBsT,UAAWA,EAAnD,WACIpS,GACA,eAAC,IAAD,CAAMizB,eAAe,SAASC,cAAc,SAASrB,WAAW,SAAhE,UACE,cAAC,KAAD,CAAMH,GAAG,MAAMpQ,MAAI,EAAnB,SACGxiB,EAAE,iEAEL,cAAC,IAAD,CAAQ6iB,QAAQ,WAAWmN,MAAM,KAAKhtB,QAASsQ,EAA/C,SACGtT,EAAE,cAIRkB,GAAWjI,GAA+C,IAApCi7B,EAAyB55B,QAC9C,eAAC,IAAD,CAAM65B,eAAe,SAASC,cAAc,SAASrB,WAAW,SAAhE,UACE,cAAC,KAAD,CAAMH,GAAG,MAAMpQ,MAAI,EAAnB,SACGxiB,EAAE,4BAEL,cAAC,IAAD,CAAQ6iB,QAAQ,WAAWmN,MAAM,KAAKhtB,QAASsQ,EAA/C,SACGtT,EAAE,cAIRkB,GACCjI,GACAi7B,EAAyBl6B,KAAI,SAACq6B,GAC5B,IAAQ/mB,EAAkB+mB,EAAlB/mB,KAAMF,EAAYinB,EAAZjnB,QACd,EAnDW,SAACinB,GACpB,IAAQ/mB,EAAkB+mB,EAAlB/mB,KAAMa,EAAYkmB,EAAZlmB,QAEd,OAAKb,EAIDA,GAA4B,KAAb,OAAPa,QAAO,IAAPA,OAAA,EAAAA,EAASmmB,QACZ,CAAEC,KAAM,cAAC,IAAD,CAAqB/P,MAAM,YAAcA,MAAO,WAG1D,CAAE+P,KAAM,cAAC,IAAD,CAAW/P,MAAM,YAAcA,MAAO,WAP5C,CAAE+P,KAAM,cAACpf,EAAA,EAAD,IAAYqP,MAAO,QA+CJgQ,CAAaH,GAA7BE,EAAR,EAAQA,KAAM/P,EAAd,EAAcA,MAEd,OACE,mCACE,eAAC,IAAD,CAAiBuO,WAAW,SAASoB,eAAe,gBAAgBvB,GAAG,MAAvE,UACE,cAAC,IAAD,CAAc7pB,KAAMsjB,YAAiBpzB,EAASqU,EAAM,eAAgBkX,MAAOA,EAA3E,gBACGpX,QADH,IACGA,IAAWE,IAEbinB,IAJQjnB,YC3DnBmnB,EAAc,kBAClB,cAAC,KAAD,CAAKhY,MAAM,KAAKT,OAAO,KAAK5G,QAAQ,YAApC,SACE,sBACEG,EAAE,2RACFF,KAAK,eAKLqf,EAAmB59B,UAAOC,IAAV,+EACO,qBAAGoL,MAAkBC,OAAOwJ,eAInD+oB,EAAU79B,UAAOC,IAAV,wCAsCE69B,IAlCI,SAAC,GAA6E,IAA3Eha,EAA0E,EAA1EA,MAAOK,EAAmE,EAAnEA,YAAmE,IAAtD4Z,qBAAsD,SAAhCrhB,EAAgC,EAAhCA,SACtDxT,EAAM8U,cAAN9U,EACR,EAA4B80B,aAAS,cAAC,EAAD,KAA9BC,EAAP,oBACA,EAAsCD,aAAS,cAAC,EAAD,KAAxCE,EAAP,oBAEA,OACE,eAACN,EAAD,WACE,eAAC,IAAD,CAAM3B,WAAW,SAAjB,UACE,eAAC4B,EAAD,WACE,cAAC,IAAD,CAAS/B,GAAG,MAAMpO,MAAM,OAAxB,SACG5J,IAEFK,GACC,cAAC,KAAD,CAAMuJ,MAAM,eAAe7K,SAAS,OAApC,SACGsB,OAIN4Z,GACC,cAAC,IAAD,CAAYhS,QAAQ,OAAO7f,QAAS+xB,EAAmBna,MAAO5a,EAAE,YAAhE,SACE,cAAC,IAAD,CAASyc,MAAM,OAAO+H,MAAM,cAG/BqQ,GACC,cAAC,IAAD,CAAYhS,QAAQ,OAAO7f,QAASgyB,EAA6Bpa,MAAO5a,EAAE,uBAA1E,SACE,cAAC,EAAD,SAILwT,GAAY,cAAC,KAAD,CAAM8Y,GAAG,OAAT,SAAiB9Y,S,qMClD9Bya,EAAan3B,UAAOC,IAAV,sLAKM,qBAAGoL,MAAkBC,OAAOC,oBAK5C4yB,EAAen+B,UAAOC,IAAV,8OAKI,gBAAGiE,EAAH,EAAGA,MAAOmH,EAAV,EAAUA,MAAV,OAAuBnH,EAAQmH,EAAMC,OAAOgN,QAAUjN,EAAMC,OAAOC,oBACtD,qBAAGrH,MAAqB,WAAa,gBACtD,qBAAGA,MAAqB,WAAa,gBACjC,qBAAGmH,MAAkBC,OAAOC,oBAG5C6yB,EAAiBp+B,UAAOC,IAAV,0DAKdg2B,EAAQj2B,UAAOqjB,MAAV,0kBAMW,qBAAGhY,MAAkBC,OAAOC,oBACtB,qBAAGrH,MAAqB,WAAa,gBACtD,gBAAGA,EAAH,EAAGA,MAAOmH,EAAV,EAAUA,MAAV,OAAuBnH,EAAQmH,EAAMC,OAAOgN,QAAUjN,EAAMC,OAAOqG,WAMjE,qBAAGtG,MAAkBC,OAAOgY,gBAe5B,qBAAGjY,MAAkBC,OAAOgY,gBAI1B,SAAS+a,EAAT,GAUX,IATF/wB,EASC,EATDA,GACA1D,EAQC,EARDA,MACA0f,EAOC,EAPDA,SAQQnnB,EAAYC,cAAZD,QACA+G,EAAM8U,cAAN9U,EACR,EAAmCilB,YAAOvkB,GAAlCxE,EAAR,EAAQA,QAASpB,EAAjB,EAAiBA,QAASsI,EAA1B,EAA0BA,KAEpBwc,EAAc/c,uBAClB,SAACsG,GACC,IACMisB,EADQjsB,EAAML,OAAOpI,MACCoK,QAAQ,OAAQ,IAC5CsV,EAASgV,KAEX,CAAChV,IAGGplB,EAAQjB,QAAQ2G,EAAMpG,OAAS,IAAMQ,IAAYoB,GAEvD,OACE,cAAC+xB,EAAD,CAAY7pB,GAAIA,EAAhB,SACE,cAAC6wB,EAAD,CAAcj6B,MAAOA,EAArB,SACE,cAACk6B,EAAD,UACE,eAAC,IAAD,CAAYh+B,IAAI,KAAhB,UACE,eAACE,EAAA,EAAD,WACE,cAAC,KAAD,CAAMotB,MAAM,aAAamO,WAAY,IAAKhZ,SAAS,OAAnD,SACG3Z,EAAE,eAEJ9D,GAAWjD,GACV,cAAC,IAAD,CAAc8P,KAAMsjB,YAAiBpzB,EAAD,OAAUmK,QAAV,IAAUA,IAAQlH,EAAS,WAAYiB,MAAO,CAAEwc,SAAU,QAA9F,SACG3Z,EAAE,4BAIT,cAAC+sB,EAAD,CACErV,UAAU,0BACVwI,KAAK,OACLiN,aAAa,MACbC,YAAY,MACZiI,eAAe,MACf7H,WAAW,QACXrN,YAAangB,EAAE,8BACfhF,MAAOA,EACPqyB,QAAQ,wBACRjN,SAAUR,EACVlf,MAAOA,a,iFCjHN,SAAS40B,EAAT,GAA2E,IAA3C5kB,EAA0C,EAA1CA,YAC7C,OACE,cAAC,IAAD,CAAWiJ,SAAS,OAAOxK,SAAUsC,YAAgBf,GAArD,SACGA,EAAeA,EAAYgB,SAAS6jB,KAAY,SAAjC,UAA+C7kB,EAAY8kB,QAAQ,GAAnE,KAA4E,MCOnF,SAASC,EAAT,GAYX,IAAD,QAXDrlB,EAWC,EAXDA,MACAslB,EAUC,EAVDA,UACAzkB,EASC,EATDA,gBACA0kB,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBAQA,EAAwCnzB,oBAAkB,GAA1D,mBAAOozB,EAAP,KAAqBC,EAArB,KACMhM,EAA0BpwB,mBAAQ,kBAAMsX,YAA+BZ,EAAOa,KAAkB,CACpGA,EACAb,IAEF,EAAiD1W,mBAAQ,kBAAMyW,YAA2BC,KAAQ,CAACA,IAA3FO,EAAR,EAAQA,sBAAuBN,EAA/B,EAA+BA,cACzBlB,EAAWsC,YAAgBd,GACzB3Q,EAAM8U,cAAN9U,EAER,OACE,qCACE,eAAC,IAAD,CAAY9I,IAAI,MAAhB,UACE,eAACE,EAAA,EAAD,CAAYE,MAAM,SAAlB,UACE,cAAC,KAAD,CAAMqiB,SAAS,OAAf,SAAuB3Z,EAAE,WACzB,eAAC,KAAD,CACE2Z,SAAS,OACTxc,MAAO,CACLg3B,eAAgB,SAChBpB,WAAY,SACZnQ,QAAS,OACT6B,UAAW,QACXsR,YAAa,MACbpD,WAAY,KARhB,UAWG5gB,YAAqB3B,EAAOylB,GAC7B,cAAC,IAAD,CAAsB7yB,QAAS,kBAAM8yB,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAQl5B,KAAM,aAKpB,eAACvF,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAMuiB,SAAS,OAAf,SACGvJ,EAAM4lB,YAAcC,YAAUC,YAAcl2B,EAAE,oBAAsBA,EAAE,kBAEzE,cAACuC,EAAA,EAAD,CACEC,KAAMxC,EACJ,6GAIN,eAAC5I,EAAA,EAAD,WACE,cAAC,KAAD,CAAMuiB,SAAS,OAAf,SACGvJ,EAAM4lB,YAAcC,YAAUC,YAA9B,oBACGpM,EAAwB1Y,IAAMG,eADjC,aACG,EAAuCY,cAAc,UADxD,QAC8D,IAD9D,oBAEG2X,EAAwB1Y,IAAMC,cAFjC,aAEG,EAAsCc,cAAc,UAFvD,QAE6D,MAEhE,cAAC,KAAD,CAAMwH,SAAS,OAAO5W,WAAW,MAAjC,SACGqN,EAAM4lB,YAAcC,YAAUC,YAC3B9lB,EAAMgC,aAAalV,SAASL,OAC5BuT,EAAMU,YAAY5T,SAASL,eAIrC,eAACzF,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAMuiB,SAAS,OAAf,SAAuB3Z,EAAE,kBACzB,cAACuC,EAAA,EAAD,CAAgBC,KAAMxC,EAAE,kFAE1B,cAACs1B,EAAD,CAAsB5kB,YAAaC,OAErC,eAACvZ,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAMuiB,SAAS,OAAf,SAAuB3Z,EAAE,4BACzB,cAACuC,EAAA,EAAD,CACEC,KAAMxC,EACJ,mJAIN,cAAC,KAAD,CAAM2Z,SAAS,OAAf,SACGtJ,EAAa,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAe8B,cAAc,GAAnC,YAAyC/B,EAAMU,YAAY5T,SAASL,QAAW,YAKnG,eAAC,IAAD,WACE,cAAC,IAAD,CACEmG,QAAS0yB,EACTltB,SAAUotB,EACV/S,QAAS1T,EAAW,EAAI,SAAW,UACnCmd,GAAG,OACHloB,GAAG,uBACHqY,MAAM,OANR,SAQkBzc,EAAfmP,EAAW,EAAM,cAAmB,kBAGtCwmB,EAAmB,cAAC,IAAD,CAAmB36B,MAAO26B,IAAuB,W,0BC7GvEQ,EAAgBr/B,kBAAOoY,KAAPpY,CAAH,iIAKN,qBAAGqL,MAAkBC,OAAOqG,WAK1B,SAAS2tB,EAAT,GAYX,IAAD,IAXDhmB,EAWC,EAXDA,MACAa,EAUC,EAVDA,gBACAyW,EASC,EATDA,UACA2O,EAQC,EARDA,kBACAC,EAOC,EAPDA,gBAQMxM,EAA0BpwB,mBAAQ,kBAAMsX,YAA+BZ,EAAOa,KAAkB,CACpGb,EACAa,IAEMN,EAA0BjX,mBAAQ,kBAAMyW,YAA2BC,KAAQ,CAACA,IAA5EO,sBACF4lB,EAAsB9kB,YAAgBd,GAEtCxO,EAAQ6H,qBAAWwU,gBAEzB,OACE,eAAC,IAAD,CAAYtnB,IAAI,KAAKiG,MAAO,CAAEwlB,UAAW,QAAzC,UACE,eAACvrB,EAAA,EAAD,CAAYE,MAAM,WAAlB,UACE,eAACF,EAAA,EAAD,CAAUF,IAAI,MAAd,UACE,cAAC+F,EAAA,EAAD,CAAcC,SAAUkT,EAAMU,YAAY5T,SAAUP,KAAK,OAAOQ,MAAO,CAAEyc,YAAa,UACtF,cAAC,KAAD,CACED,SAAS,OACT6K,MAAO6R,GAAqBjmB,EAAM4lB,YAAcC,YAAUO,aAAer0B,EAAMC,OAAOqG,QAAU,OAFlG,SAIG2H,EAAMU,YAAYqB,cAAc,QAGrC,cAAC/a,EAAA,EAAD,CAAUF,IAAI,MAAd,SACE,cAAC,KAAD,CAAMyiB,SAAS,OAAOxc,MAAO,CAAE4F,WAAY,OAAQ4vB,WAAY,KAA/D,SACGviB,EAAMU,YAAY5T,SAASL,cAIlC,cAACzF,EAAA,EAAD,UACE,cAAC,IAAD,CAAWuF,KAAK,KAAK6nB,MAAOriB,EAAMC,OAAOE,WAAYnF,MAAO,CAAE4F,WAAY,MAAOkgB,SAAU,YAE7F,eAAC7rB,EAAA,EAAD,CAAYE,MAAM,WAAlB,UACE,eAACF,EAAA,EAAD,CAAUF,IAAI,MAAd,UACE,cAAC+F,EAAA,EAAD,CAAcC,SAAUkT,EAAMgC,aAAalV,SAAUP,KAAK,OAAOQ,MAAO,CAAEyc,YAAa,UACvF,cAAC,KAAD,CACED,SAAS,OACTxc,MAAO,CAAE4F,WAAY,OAAQ4vB,WAAY,KACzCnO,MACE+R,EAAsB,EAClBp0B,EAAMC,OAAOgN,QACbinB,GAAqBjmB,EAAM4lB,YAAcC,YAAUC,YACnD/zB,EAAMC,OAAOqG,QACb,OARR,SAWG2H,EAAMgC,aAAaD,cAAc,QAGtC,cAAC/a,EAAA,EAAD,CAAUF,IAAI,MAAd,SACE,cAAC,KAAD,CAAMyiB,SAAS,OAAOxc,MAAO,CAAE4F,WAAY,OAAQ4vB,WAAY,KAA/D,SACGviB,EAAMgC,aAAalV,SAASL,cAIlCw5B,EACC,cAAC,IAAD,CAAuBl/B,QAAQ,aAAaD,IAAI,MAAhD,SACE,eAACE,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,IAAD,CAAeuF,KAAM,GAAIQ,MAAO,CAAEyc,YAAa,MAAOqJ,SAAU,MAChE,cAAC,KAAD,CAAMuB,MAAM,UAAZ,+BAEF,cAAC,IAAD,CAAQxhB,QAASszB,EAAjB,yBAGF,KACJ,cAAC,IAAD,CAAYn/B,QAAQ,aAAaD,IAAI,KAAKiG,MAAO,CAAE5F,QAAS,YAA5D,SACG6Y,EAAM4lB,YAAcC,YAAUC,YAC7B,eAACC,EAAD,6DAEE,2CACGrM,EAAwB1Y,IAAMG,eADjC,aACG,EAAuCY,cAAc,GADxD,IAC6D/B,EAAMgC,aAAalV,SAASL,UAExF,sCAGH,eAACs5B,EAAD,wDAEE,2CACGrM,EAAwB1Y,IAAMC,cADjC,aACG,EAAsCc,cAAc,GADvD,IAC4D/B,EAAMU,YAAY5T,SAASL,UAEtF,wCAIQ,OAAd6qB,EACC,cAAC,IAAD,CAAYvwB,QAAQ,aAAaD,IAAI,KAAKiG,MAAO,CAAE5F,QAAS,YAA5D,SACE,eAAC,KAAD,oCACyB,IACvB,mBAAGqjB,MAAO8M,EAAV,SAAsB1oB,YAAU0oB,GAAa+O,YAAe/O,GAAaA,SAG3E,QCrGK,SAASgP,EAAT,GAwBX,IAAD,YAvBDtmB,EAuBC,EAvBDA,MACAumB,EAsBC,EAtBDA,cACAL,EAqBC,EArBDA,gBACArlB,EAoBC,EApBDA,gBACAykB,EAmBC,EAnBDA,UACApiB,EAkBC,EAlBDA,UACAoU,EAiBC,EAjBDA,UACAiO,EAgBC,EAhBDA,iBACA5iB,EAeC,EAfDA,OACAyZ,EAcC,EAdDA,cACAoK,EAaC,EAbDA,OAcMP,EAAoB38B,mBACxB,kBAAMK,QAAQqW,GAASumB,IApCsBE,EAoC2BF,GApC1CG,EAoCmC1mB,GAlC1D4lB,YAAca,EAAOb,YAC3B33B,yBAAey4B,EAAOhmB,YAAY5T,SAAU25B,EAAO/lB,YAAY5T,YAC/D45B,EAAOhmB,YAAYmN,QAAQ4Y,EAAO/lB,eAClCzS,yBAAey4B,EAAO1kB,aAAalV,SAAU25B,EAAOzkB,aAAalV,YACjE45B,EAAO1kB,aAAa6L,QAAQ4Y,EAAOzkB,gBANxC,IAAkC0kB,EAAeD,IAqC7C,CAACF,EAAevmB,IAEVpQ,EAAM8U,cAAN9U,EAEF+2B,EAAcl0B,uBAAY,WAC9B,OAAOuN,EACL,cAACgmB,EAAD,CACEhmB,MAAOA,EACPa,gBAAiBA,EACjByW,UAAWA,EACX2O,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CAACrlB,EAAiBqlB,EAAiB5O,EAAW2O,EAAmBjmB,IAE9D4mB,EAAcn0B,uBAAY,WAC9B,OAAOuN,EACL,cAACqlB,EAAD,CACEC,UAAWA,EACXtlB,MAAOA,EACPwlB,gBAAiBS,EACjBV,iBAAkBA,EAClB1kB,gBAAiBA,IAEjB,OACH,CAACA,EAAiBykB,EAAWW,EAAmBV,EAAkBvlB,IAG/D+b,EAAW,0BAAe/b,QAAf,IAAeA,GAAf,UAAeA,EAAOU,mBAAtB,aAAe,EAAoBqB,cAAc,GAAjD,mBACf/B,QADe,IACfA,GADe,UACfA,EAAOU,mBADQ,iBACf,EAAoB5T,gBADL,aACf,EAA8BL,OADf,uBAETuT,QAFS,IAETA,GAFS,UAETA,EAAOgC,oBAFE,aAET,EAAqBD,cAAc,GAF1B,mBAEgC/B,QAFhC,IAEgCA,GAFhC,UAEgCA,EAAOgC,oBAFvC,iBAEgC,EAAqBlV,gBAFrD,aAEgC,EAA+BL,QAE1Eo6B,EAAsBp0B,uBAC1B,kBACE8yB,EACE,cAAC,IAAD,CAAyBriB,UAAWA,EAAWwQ,QAAS6R,IAExD,cAAC,IAAD,CACE/a,MAAO5a,EAAE,gBACTsT,UAAWA,EACXqZ,WAAYoK,EACZrK,cAAesK,MAGrB,CAAC1jB,EAAW0jB,EAAaD,EAAapB,EAAkB31B,IAG1D,OACE,cAACusB,EAAA,EAAD,CACExZ,OAAQA,EACRO,UAAWA,EACXkZ,cAAeA,EACflf,KAAMspB,EACNtgB,QAAS2gB,EACT9K,YAAaA,I,iECpGJ3rB,kBAAK,YAAiD,IAA5B4P,EAA2B,EAA3BA,MACjCjO,EAAQ6H,qBAAWwU,gBACzB,OACE,cAAC,IAAD,CACE0Y,GAAG,OACHC,GAAG,SACHC,GAAG,SACHj6B,MAAO,CAAE3F,OAAO,aAAD,OAAe2K,EAAMC,OAAO2J,UAAYtU,aAAc,QACrE4/B,SAAS,OACTlD,eAAe,eACfpB,WAAW,SAPb,SASG3iB,EAAME,MAAM6X,KAAKnuB,KAAI,SAACkE,EAAOuC,EAAG0nB,GAC/B,IAAMmP,EAAsB72B,IAAM0nB,EAAK7tB,OAAS,EAChD,OAEE,cADA,CACC,WAAD,WACE,eAAC,IAAD,CAAM88B,GAAG,SAASrE,WAAW,SAAS51B,MAAO,CAAEo6B,WAAY,GAA3D,UACE,cAACt6B,EAAA,EAAD,CAAcC,SAAUgB,EAAOvB,KAAK,WACpC,cAAC,KAAD,CAAMgd,SAAS,OAAO6K,MAAM,OAAOgT,GAAG,SAAtC,SACGt5B,EAAMrB,YAGVy6B,EAAa,KAAO,cAAC,IAAD,CAAc9S,MAAM,iBAP5B/jB,WCTzB,SAASg3B,EAAT,GAA8F,IAAD,QAArErnB,EAAqE,EAArEA,MAAOa,EAA8D,EAA9DA,gBAC7B,EAAiDd,YAA2BC,GAApEO,EAAR,EAAQA,sBAAuBN,EAA/B,EAA+BA,cACzBwY,EAAYzY,EAAM4lB,YAAcC,YAAUC,YAC1CpM,EAA0B9Y,YAA+BZ,EAAOa,GAC9DjR,EAAM8U,cAAN9U,EAER,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC5I,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAMuiB,SAAS,OAAf,SAAmC3Z,EAAZ6oB,EAAc,mBAAwB,kBAC7D,cAACtmB,EAAA,EAAD,CACEC,KAAMxC,EACJ,6GAIN,cAAC5I,EAAA,EAAD,UACE,cAAC,KAAD,CAAMuiB,SAAS,OAAf,SACGkP,EAAS,8BACHiB,EAAwB1Y,IAAMG,eAD3B,aACH,EAAuCY,cAAc,GADlD,YACwD/B,EAAMgC,aAAalV,SAASL,eADpF,QAEN,IAFM,8BAGHitB,EAAwB1Y,IAAMC,cAH3B,aAGH,EAAsCc,cAAc,GAHjD,YAGuD/B,EAAMU,YAAY5T,SAASL,eAHlF,QAIN,WAIV,eAACzF,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAMuiB,SAAS,OAAf,SAAuB3Z,EAAE,kBACzB,cAACuC,EAAA,EAAD,CACEC,KAAMxC,EAAE,uFAGZ,cAACs1B,EAAD,CAAsB5kB,YAAaC,OAGrC,eAACvZ,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAMuiB,SAAS,OAAf,SAAuB3Z,EAAE,4BACzB,cAACuC,EAAA,EAAD,CACEC,KAAMxC,EACJ,mJAIN,cAAC,KAAD,CAAM2Z,SAAS,OAAf,SACGtJ,EAAa,UAAMA,EAAc8B,cAAc,GAAlC,YAAwC/B,EAAMU,YAAY5T,SAASL,QAAW,cAYjG,SAAS66B,GAAT,GAAmE,IAApCtnB,EAAmC,EAAnCA,MACpC,EAA0B1K,cAAnBuL,EAAP,oBACQjR,EAAM8U,cAAN9U,EACF23B,EAAY59B,QAAQqW,GAASA,EAAME,MAAM6X,KAAK7tB,OAAS,GAE7D,OACE,cAAC,IAAD,CAAYpD,IAAI,KAAhB,SACGkZ,GACC,qCACE,cAACqnB,EAAD,CAAcrnB,MAAOA,EAAOa,gBAAiBA,IAC5C0mB,GACC,qCACE,cAAC,IAAD,IACA,eAAC,IAAD,CAAYx6B,MAAO,CAAE5F,QAAS,UAA9B,UACE,eAACH,EAAA,EAAD,WACE,cAAC,KAAD,CAAMuiB,SAAS,OAAf,mBACA,cAACpX,EAAA,EAAD,CAAgBC,KAAMxC,EAAE,gFAE1B,cAAC,EAAD,CAAWoQ,MAAOA,eCvFlC,IAAMwnB,GAAwB9gC,UAAOC,IAAV,2TAQhB,qBAAGoL,MAAkBC,OAAOE,cAGxB,qBAAGI,KAAmB,iBAAmB,uBAIzC,SAASm1B,GAAT,GAAoF,IAAD,EAA5CznB,EAA4C,EAA5CA,MAAUnH,EAAkC,yBAC1F6uB,EAAY7hB,YAAc7F,GAEhC,OACE,cAACwnB,GAAD,CAAuBl1B,KAAM3I,QAAQqW,GAArC,SACE,cAACsnB,GAAD,2BAAyBzuB,GAAzB,IAA+BmH,MAAK,iBAAEA,QAAF,IAAEA,IAAS0nB,SAAX,aAAwB5/B,OCdnD,SAAS6/B,GAAT,GAAgF,IAAD,UAAzDC,EAAyD,EAAzDA,MAAOnC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAClDmC,EAAiBpC,EAAY,OAAGmC,QAAH,IAAGA,OAAH,EAAGA,EAAO7lB,cAAc,GAAxB,OAA6B6lB,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAO9lB,gBAApC,aAA6B,EAAiBC,cAAc,GAEzFzP,EAAO3I,SAAa,OAALi+B,QAAK,IAALA,OAAA,EAAAA,EAAOE,gBAAP,OAAuBF,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOG,gBAC7CrJ,EAAQ+G,EAAY,iBACnBmC,QADmB,IACnBA,GADmB,UACnBA,EAAOG,qBADY,aACnB,EAAsBt7B,OADH,uBACiBm7B,QADjB,IACiBA,GADjB,UACiBA,EAAOE,oBADxB,aACiB,EAAqBr7B,QADtC,iBAEnBm7B,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAOE,oBAFY,aAEnB,EAAqBr7B,OAFF,uBAEgBm7B,QAFhB,IAEgBA,GAFhB,UAEgBA,EAAOG,qBAFvB,aAEgB,EAAsBt7B,QAEhE,OACE,cAAC,KAAD,CAAM8c,SAAS,OAAOxc,MAAO,CAAEg3B,eAAgB,SAAUpB,WAAY,SAAUnQ,QAAS,QAAxF,SACGlgB,EACC,4CACGu1B,QADH,IACGA,IAAkB,IADrB,IAC2BnJ,EACzB,cAAC,IAAD,CAAsB9rB,QAAS,kBAAM8yB,GAAiBD,IAAtD,SACE,cAAC,KAAD,CAAapZ,MAAM,OAAO+H,MAAM,iBAIpC,M,+DCbFpW,GAAUtX,UAAOC,IAAV,+FACG,gBAAGoL,EAAH,EAAGA,MAAH,OAAeuN,aAAe,GAAKvN,EAAMC,OAAO2J,aAK1DqsB,GAAmBthC,UAAOC,IAAV,sMAUhBshC,GAAoBvhC,kBAAOwhC,IAAPxhC,CAAH,8CACX,qBAAGqL,MAAkBC,OAAOgN,WAOxC,SAASmpB,GAAT,GAA6D,IAAD,QAAhCr6B,EAAgC,EAAhCA,MAClBjF,EAAYC,cAAZD,QACFygB,EAAkB3P,eAClByuB,EAAW,iBAAGt6B,QAAH,IAAGA,GAAH,UAAGA,EAAOrB,cAAV,aAAG,EAAemgB,qBAAlB,QAAmC,GAC9C3d,EAAS,iBAAGnB,QAAH,IAAGA,GAAH,UAAGA,EAAOkF,YAAV,aAAG,EAAa4Z,qBAAhB,QAAiC,GAE1Clf,EAAYH,eAEZ86B,EAAwB/+B,mBAAQ,WACpC,SAAKwE,IAAUjF,IAER+I,OAAOwF,KAAK1J,GAAWwC,MAAK,SAACxB,GAAkB,IAAD,IAC7C45B,EAAY56B,EAAUgB,GAC5B,OAAI45B,EAAUrtB,OAAOnN,MAGd,UAAAw6B,EAAU77B,cAAV,eAAkBmgB,iBAAkBwb,IAAe,UAAAE,EAAUt1B,YAAV,eAAgB4Z,iBAAkB3d,QAE7F,CAACnB,EAAOjF,EAAS6E,EAAW06B,EAAan5B,IAE5C,OAAKnB,EAGH,cAACkQ,GAAD,CAASpT,MAAOy9B,EAAhB,SACE,eAAC,IAAD,CAASvhC,IAAI,MAAb,UACE,eAAC,IAAD,CAAYA,IAAI,OAAhB,UACE,cAAC+F,EAAA,EAAD,CAAcC,SAAUgB,EAAOvB,KAAK,SACpC,uCAEF,eAAC,IAAD,CAAYzF,IAAI,OAAOC,QAAQ,aAA/B,UACE,eAAC,KAAD,WACG+G,GAASA,EAAMkF,MAAQlF,EAAMrB,QAAUqB,EAAMkF,OAASlF,EAAMrB,OAA5D,UACMqB,EAAMkF,KADZ,aACqBlF,EAAMrB,OAD3B,KAEGqB,EAAMkF,MAAQlF,EAAMrB,OAAQ,OAEjC5D,GACC,cAAC,IAAD,CAAckE,MAAO,CAAEw1B,WAAY,KAAO5pB,KAAMsjB,YAAiBpzB,EAASiF,EAAMhC,QAAS,SAAzF,SACE,eAAC,KAAD,CAAM0e,MAAO1c,EAAMhC,QAAnB,UACGu6B,YAAev4B,EAAMhC,SADxB,IACmCwd,EAAgB,IAAK,6CAlBjD,KA4BN,SAASif,GAAT,GAQX,IAPF5lB,EAOC,EAPDA,OACAhU,EAMC,EANDA,OACA22B,EAKC,EALDA,UAMA,EAAkDjzB,oBAAS,GAA3D,mBAAOm2B,EAAP,KAA0BC,EAA1B,KACMC,EAAmBj2B,uBAAY,kBAAMg2B,GAAqB,SAACE,GAAD,OAASA,OAAK,IACxErf,EAAkB3P,eAElBivB,EAAgBn2B,uBAAY,kBAAM,OAAM,IAC9C,OACE,cAACwQ,GAAA,EAAD,CAAON,OAAQA,EAAQO,UAAW0lB,EAAenmB,UAAW,GAA5D,SACE,cAACulB,GAAD,CAAkB1gB,UAAU,0BAA5B,SACE,eAAC,IAAD,CAAYxgB,IAAI,KAAhB,UACE,eAAC,IAAD,CAASA,IAAI,MAAb,UACE,cAACmhC,GAAD,IACA,cAAC,KAAD,CAAM7T,MAAM,UAAZ,SAAuB9K,EAAgB,KAAM,uBAE/C,cAAC,KAAD,UACGA,EACC,KACA,4LAGJ,cAAC,KAAD,UACGA,EACC,KACA,+JAGJ,cAAC,KAAD,UAAOA,EAAgB,KAAM,4EAC5B3a,EAAO/E,KAAI,SAACkE,GACX,OAAO,cAACq6B,GAAD,CAAsCr6B,MAAOA,GAAtBA,EAAMhC,YAEtC,eAAC9E,EAAA,EAAD,WACE,8BACE,wBAAO6hC,QAAQ,sBAAsB97B,MAAO,CAAEmnB,OAAQ,UAAW4U,WAAY,QAA7E,UACE,uBACE90B,GAAG,sBACH8b,KAAK,WACLxI,UAAU,sBACVic,QAASiF,EACTxY,SAAU0Y,IACT,IACH,cAAC,KAAD,CAAMK,GAAG,OAAO3B,GAAG,MAAnB,SACG9d,EAAgB,IAAK,uBAI5B,cAAC,IAAD,CACElR,UAAWowB,EACX/V,QAAQ,SACR1lB,MAAO,CAAEsf,MAAO,SAChB/E,UAAU,uBACV1U,QAAS,WACP0yB,KANJ,SASGhc,EAAgB,IAAK,wBC9IpC,I,eAAM0e,GAAmBthC,UAAOC,IAAV,sMAUhBshC,GAAoBvhC,kBAAOwhC,IAAPxhC,CAAH,8CACX,qBAAGqL,MAAkBC,OAAOgN,WAGzB,SAASgqB,GAAT,GAQX,IAPFrmB,EAOC,EAPDA,OACAsmB,EAMC,EANDA,gBACA3D,EAKC,EALDA,UAMA,EAAkDjzB,oBAAS,GAA3D,mBAAOm2B,EAAP,KAA0BC,EAA1B,KACMC,EAAmBj2B,uBAAY,kBAAMg2B,GAAqB,SAACE,GAAD,OAASA,OAAK,IAExEC,EAAgBn2B,uBAAY,kBAAM,OAAM,IAC9C,OACE,cAACwQ,GAAA,EAAD,CAAON,OAAQA,EAAQO,UAAW0lB,EAAenmB,UAAW,GAA5D,SACE,cAAC,GAAD,CAAkB6E,UAAU,0BAA5B,SACE,eAAC,IAAD,CAAYxgB,IAAI,KAAhB,UACE,eAAC,IAAD,CAASA,IAAI,MAAb,UACE,cAAC,GAAD,IACA,cAAC,KAAD,CAAMstB,MAAM,UAAZ,8BAEmB,KAApB6U,GACC,qCACE,eAAC,KAAD,CAAM7U,MAAM,UAAZ,oCACyB,iCAAS6U,IADlC,aAGA,cAAC,KAAD,CAAM7U,MAAM,UAAZ,SACuB,WAApB6U,EACG,iEACA,8FAIV,eAACjiC,EAAA,EAAD,WACE,8BACE,wBAAO6hC,QAAQ,sBAAsB97B,MAAO,CAAEmnB,OAAQ,UAAW4U,WAAY,QAA7E,UACE,uBACE90B,GAAG,sBACH8b,KAAK,WACLxI,UAAU,sBACVic,QAASiF,EACTxY,SAAU0Y,IACT,IACH,cAAC,KAAD,CAAMK,GAAG,OAAT,+BAGJ,cAAC,IAAD,CACE3wB,UAAWowB,EACX/V,QAAQ,SACR1lB,MAAO,CAAEsf,MAAO,SAChBzZ,QAAS,WACP61B,GAAqB,GACrBnD,KANJ,gCC9DZ,IAAMtnB,GAAUtX,kBAAOG,IAAPH,CAAH,sDAIPwiC,GAAWxiC,kBAAOY,IAAPZ,CAAH,6CAIRyiC,GAASziC,UAAOC,IAAV,sPAGU,gBAAGoL,EAAH,EAAGA,MAAOq3B,EAAV,EAAUA,UAAV,SAAqBhxB,SAC5BrG,EAAMC,OAAOq3B,mBAAqBD,EAAYr3B,EAAMC,OAAO7G,QAAU4G,EAAMC,OAAOqG,WAOtF,gBAAGtG,EAAH,EAAGA,MAAOq3B,EAAV,EAAUA,UAAV,SAAqBhxB,SACjBrG,EAAMC,OAAOI,KAAOg3B,EAAYr3B,EAAMC,OAAO7G,QAAU,aAGhEm+B,GAAY5iC,UAAOC,IAAV,qGAMT4iC,GAAY7iC,UAAOC,IAAV,yLAMT,gBAAGoL,EAAH,EAAGA,MAAOy3B,EAAV,EAAUA,cAAV,OAA8BlqB,aAAe,GAAKkqB,EAAgBz3B,EAAMC,OAAO7G,QAAU4G,EAAMC,OAAOqG,YACtG,gBAAGtG,EAAH,EAAGA,MAAH,SAAUy3B,cAAqCz3B,EAAMC,OAAOqG,QAAUtG,EAAMC,OAAOq3B,sBAmB1E,SAASI,GAAT,GAA2D,IAAhCC,EAA+B,EAA/BA,MACxC,OACE,cAAC,GAAD,CAAS3iC,QAAQ,SAAjB,SACE,eAACmiC,GAAD,WACGQ,EAAM9/B,KAAI,SAACg5B,EAAMvyB,GAChB,OAEE,cADA,CACCi5B,GAAD,WACE,cAACH,GAAD,CAAQC,UAAWxG,EAAMxqB,UAAWsxB,EAAMr5B,EAAI,IAAY,IAANA,EAApD,SACGuyB,EAAO,SAAMvyB,EAAI,IAEpB,cAACk5B,GAAD,CAAWC,cAAe5G,MAJZvyB,MAQpB,cAAC84B,GAAD,CAAQ/wB,UAAWsxB,EAAMA,EAAMx/B,OAAS,GAAxC,SAA6Cw/B,EAAMx/B,OAAS,S,ICjE/Dy/B,G,qEA8BL,SAASC,GACP5pB,GAIa,IAHba,EAGY,uDAHcgpB,IAC1Bj0B,EAEY,uDAFOk0B,IACnBC,EACY,uCACZ,EAAsCjhC,cAA9BgI,EAAR,EAAQA,QAASjI,EAAjB,EAAiBA,QAASmhC,EAA1B,EAA0BA,QAE1B,EAAsCnV,YAAOkV,GAA5BE,EAAjB,EAAQn+B,QACFwrB,EAAuC,OAA3ByS,EAAkCj5B,EAAUm5B,EAE9D,OAAO3gC,mBAAQ,WACb,IAAK0W,IAAUsX,IAAc0S,IAAYl5B,IAAYjI,EAAS,MAAO,GAErE,IAAM0C,EAA4B2+B,YAAkBrhC,EAASmhC,EAASl5B,GACtE,IAAKvF,EACH,MAAO,GAGT,IAAM4+B,EAAc,GAwBpB,OAtBAA,EAAYC,KAEVC,SAAOC,mBAAmBtqB,EAAO,CAC/BuqB,eAAe,EACf1pB,gBAAiB,IAAIlB,UAAQnP,OAAKC,OAAO+5B,KAAKC,MAAM5pB,IAAmB6pB,KACvEpT,YACAqT,IAAK/0B,KAILoK,EAAM4lB,YAAcC,YAAUC,aAChCqE,EAAYC,KAEVC,SAAOC,mBAAmBtqB,EAAO,CAC/BuqB,eAAe,EACf1pB,gBAAiB,IAAIlB,UAAQnP,OAAKC,OAAO+5B,KAAKC,MAAM5pB,IAAmB6pB,KACvEpT,YACAqT,IAAK/0B,KAKJu0B,EAAYvgC,KAAI,SAACghC,GAAD,MAAiB,CAAEA,aAAYr/B,iBACrD,CAACuF,EAAS+P,EAAiBhY,EAAS+M,EAAUo0B,EAAS1S,EAAWtX,IAKhE,SAAS6qB,GACd7qB,GAI+F,IAH/Fa,EAG8F,uDAHpEgpB,IAC1Bj0B,EAE8F,uDAF3Ek0B,IACnBC,EAC8F,uCAC9F,EAAsCjhC,cAA9BgI,EAAR,EAAQA,QAASjI,EAAjB,EAAiBA,QAASmhC,EAA1B,EAA0BA,QAEpBc,EAAYlB,GAAqB5pB,EAAOa,EAAiBjL,EAAUm0B,GAEnE5sB,EAAiBL,eAEvB,EAAsC+X,YAAOkV,GAA5BE,EAAjB,EAAQn+B,QACFwrB,EAAuC,OAA3ByS,EAAkCj5B,EAAUm5B,EAE9D,OAAO3gC,mBAAQ,WACb,OAAK0W,GAAUgqB,GAAYl5B,GAAYjI,EAGlCyuB,EAOE,CACLruB,MAAO0gC,GAAkBoB,MACzBC,SAAS,WAAD,8BAAE,+CAAA15B,EAAA,sEAC0C25B,QAAQC,IACxDJ,EAAUlhC,KAAI,SAACW,GAAU,IAAD,EACtB,EAGIA,EAFFqgC,WAAcp/B,EADhB,EACgBA,WAAY2/B,EAD5B,EAC4BA,KAAM76B,EADlC,EACkCA,MAChC/E,EACEhB,EADFgB,SAEI3C,GAAW0H,GAASsM,aAAOtM,GAAS,GAAK,CAAEA,SAEjD,OAAO,EAAA/E,EAAS41B,aAAY31B,GAArB,qBAAoC2/B,GAApC,QAA0CviC,KAC9C4qB,MAAK,SAAC4X,GACL,MAAO,CACL7gC,OACA6gC,kBAGH3X,OAAM,SAAC4X,GAAc,IAAD,EAGnB,OAFAhgC,QAAQssB,KAAK,wDAAyDptB,IAE/D,EAAAgB,EAAS+/B,YAAW9/B,GAApB,qBAAmC2/B,GAAnC,QAAyCviC,KAC7C4qB,MAAK,SAAChpB,GAEL,OADAa,QAAQssB,KAAK,uDAAwDptB,EAAM8gC,EAAU7gC,GAC9E,CAAED,OAAMK,MAAO,IAAIqJ,MAAM,mEAEjCwf,OAAM,SAAC8X,GAEN,IAAIC,EACJ,OAFAngC,QAAQssB,KAAK,mBAAoBptB,EAAMghC,GAE/BA,EAAUE,QAChB,IAAK,8CACL,IAAK,0CACHD,EACE,6HACF,MACF,QACEA,EAAY,uDAAmDD,EAAUE,OAA7D,wEAEhB,MAAO,CAAElhC,OAAMK,MAAO,IAAIqJ,MAAMu3B,cApCpC,UACFE,EADE,OA2CFC,EAAuBD,EAAe19B,MAC1C,SAAC49B,EAAIC,EAAIh4B,GAAT,MACE,gBAAiB+3B,IAAOC,IAAOh4B,EAAK3J,OAAS,GAAK,gBAAiB2J,EAAKg4B,EAAK,OA7CzE,sBAiDAC,EAAaJ,EAAejiC,QAAO,SAACc,GAAD,MAA8B,UAAWA,MACnEL,OAAS,GAlDlB,sBAkD2B4hC,EAAWA,EAAW5hC,OAAS,GAAGU,MAlD7D,aAmDA,IAAIqJ,MAAM,8EAnDV,gBA4DJ03B,EALFphC,KACEgB,EAxDI,EAwDJA,SAxDI,IAyDJq/B,WAAcp/B,EAzDV,EAyDUA,WAAY2/B,EAzDtB,EAyDsBA,KAAM76B,EAzD5B,EAyD4BA,MAElC86B,EACEO,EADFP,YA3DM,kBA8DD7/B,EAASC,GAAT,MAAAD,EAAQ,aAAgB4/B,GAAhB,qBACb7J,SAAUC,YAAmB6J,IACzB96B,IAAUsM,aAAOtM,GAAS,CAAEA,QAAO8M,KAAMtM,GAAY,CAAEsM,KAAMtM,OAEhE0iB,MAAK,SAACzW,GACL,IAAMgvB,EAAc/rB,EAAMU,YAAY5T,SAASL,OACzCu/B,EAAehsB,EAAMgC,aAAalV,SAASL,OAC3CiU,EAAcV,EAAMU,YAAYqB,cAAc,GAC9CC,EAAehC,EAAMgC,aAAaD,cAAc,GAEhDzK,EAAI,eAAWoJ,EAAX,YAA0BqrB,EAA1B,gBAA6C/pB,EAA7C,YAA6DgqB,GACjEC,EACJ3U,IAAcxmB,EACVwG,EADJ,UAEOA,EAFP,eAGMyyB,GAA0Bn7B,YAAUm7B,GAChC1D,YAAe0D,GACfA,GAOZ,OAJA5sB,EAAeJ,EAAU,CACvBC,QAASivB,IAGJlvB,EAASG,QAEjBuW,OAAM,SAAC7oB,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOshC,MACH,IAAIj4B,MAAM,0BAGhB5I,QAAQT,MAAR,cAA6BA,EAAOY,EAAY2/B,EAAM76B,GAChD,IAAI2D,MAAJ,uBAA0BrJ,EAAM8oB,eA/FpC,4CAAF,kDAAC,GAmGT9oB,MAAO,MA3GwB,OAA3Bm/B,EACK,CAAE9gC,MAAO0gC,GAAkBrtB,QAAS0uB,SAAU,KAAMpgC,MAAO,qBAE7D,CAAE3B,MAAO0gC,GAAkBttB,QAAS2uB,SAAU,KAAMpgC,MAAO,MAN3D,CAAE3B,MAAO0gC,GAAkBrtB,QAAS0uB,SAAU,KAAMpgC,MAAO,0BAgHnE,CAACoV,EAAOgqB,EAASl5B,EAASjI,EAASyuB,EAAWyS,EAAwBe,EAAW3tB,K,SAhNjFwsB,O,qBAAAA,I,qBAAAA,I,kBAAAA,Q,KAmNUkB,ICtNHsB,G,yCAAAA,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,IAAMC,GAAiB,CAAEC,SAAUF,GAASC,gB,kCCXtCE,GAAOC,eAkBEC,GAhBE,WACf,MAA0Bn6B,mBAAS,GAAnC,mBAAOo6B,EAAP,KAAcC,EAAd,KAYA,OAXA3iC,qBAAU,WACR,IAAM4iC,EAAWC,YAAW,wBAAC,6BAAAt7B,EAAA,sEACKg7B,GAAKO,IAAIC,iBADd,OACrB5hC,EADqB,OAEvBuhC,IAAUvhC,GACZwhC,EAASxhC,GAHgB,2CAK1B,KAEH,OAAO,kBAAM6hC,cAAcJ,MAC1B,CAACF,IAEGA,GCXIO,GAAsB,WACjC,MAAoC36B,mBAAS,GAA7C,mBAAO46B,EAAP,KAAmBC,EAAnB,KACMT,EAAQD,KACN17B,EAAYhI,cAAZgI,QACFq8B,EAAqBC,eAErBC,EAAQ56B,sBAAW,wBAAC,6BAAAnB,EAAA,0DACpB67B,EADoB,0CAGIA,EAAmBG,mBAAmBx8B,GAH1C,OAGdy8B,EAHc,OAIpBL,EAAc,IAAIM,KAAUD,EAAU,GAAG78B,YAAY/J,IAAI,IAAI6mC,KAAU,OAAOC,YAJ1D,gDAMpBP,EAAc,GANM,yDASvB,CAACp8B,EAASq8B,IAQb,OANApjC,qBAAU,WACJojC,GACFE,MAED,CAACH,EAAeG,EAAOZ,EAAO37B,EAASq8B,IAEnCF,GAsBMD,I,oECZTU,GAAkBhnC,UAAOC,IAAV,yVAIL,qBAAGgnC,OAAuB,UAAY,aAChC,qBAAGA,OAAuB,UAAY,aAuc7CC,UAzbF,WAAO,IAAD,kBACXC,EAAkBpT,eAChB7qB,EAAM8U,cAAN9U,EACA+9B,EAAWG,eAAXH,OAGR,EAAoD,CAClDr+B,aAAW,OAACu+B,QAAD,IAACA,OAAD,EAACA,EAAiB1V,iBAC7B7oB,aAAW,OAACu+B,QAAD,IAACA,OAAD,EAACA,EAAiBzV,mBAFxB2V,EAAP,KAA4BC,EAA5B,KAIA,EAAsD37B,oBAAkB,GAAxE,mBAAO47B,EAAP,KAA4BC,EAA5B,KACA,EAA8B77B,oBAAkB,GAAhD,mBAAO87B,EAAP,KAAgBC,EAAhB,KACA,EAAwD/7B,mBAAiB,IAAzE,mBAAOg8B,EAAP,KAA6BC,EAA7B,KACMC,EAA2BjlC,mBAC/B,8CAAM,CAACykC,EAAqBC,UAA5B,aAAM,EAA6CvkC,QAAO,SAACC,GAAD,OAAmBA,aAAa2F,kBAA1F,QAAoG,KACpG,CAAC0+B,EAAqBC,IAElBQ,EAA4B/7B,uBAAY,WAC5Cy7B,GAAuB,KACtB,IAEGO,EAA4Bh8B,uBAAY,WAC5C27B,GAAW,GACXE,EAAwB,MACvB,IAEKx9B,GAAYhI,cAAZgI,QACFiB,GAAQ6H,qBAAWwU,gBAEzB,GAAuBlZ,cAAhBouB,GAAP,qBAGA,GAAmB5tB,cAAZE,GAAP,qBACA,GAA0BN,cAAnBuL,GAAP,qBAGA,GAAoD6V,eAA5CwB,GAAR,GAAQA,iBAAkBf,GAA1B,GAA0BA,WAAYG,GAAtC,GAAsCA,UACtC,GAA4FU,eAApFuB,GAAR,GAAQA,QAASC,GAAjB,GAAiBA,iBAAkBd,GAAnC,GAAmCA,aAAcznB,GAAjD,GAAiDA,WAAwBy9B,GAAzE,GAA6DzW,WAC7D,GH5Ea,SACbI,EACAC,EACAnB,GAEA,MAA6BruB,cAArBD,EAAR,EAAQA,QAASiI,EAAjB,EAAiBA,QACX69B,EAAeC,eACfrkB,EAAU7Y,aAAkB,OAACZ,QAAD,IAACA,SAAWhJ,EAAWuwB,GAEnD3X,EAAcpX,mBAAQ,kBAAMkuB,aAAeL,EAAYkB,KAAgB,CAACA,EAAelB,IACvFha,EAAiBL,eAEvB,OAAOxT,mBAAQ,WACb,IAAKqlC,IAAiB9lC,IAAYwvB,IAAkBC,EAAgB,OAAO8T,GAE3E,IAAMyC,EAAoBnuB,GAAe6J,IAAYA,EAAQjJ,SAASZ,GAEtE,OAAI2X,IAAkBjrB,SAASa,yBAAe2M,OAAK/R,GAAUyvB,GACpD,CACL+T,SAAUF,GAAS2C,KACnBC,QACEF,GAAqBnuB,EAArB,wBACI,6BAAApP,EAAA,+EAE4Bq9B,EAAaK,QAAQ,CAAE1+B,MAAM,KAAD,OAAOoQ,EAAY3F,IAAIrK,SAAS,OAFxF,OAEUu+B,EAFV,OAGI9xB,EAAe8xB,EAAW,CAAEjyB,QAAQ,QAAD,OAAU0D,EAAYqB,cAAc,GAApC,oBAHvC,gDAKI1W,QAAQT,MAAM,oBAAd,MALJ,8DAQA9C,EACNmwB,WAAY4W,OAAoB/mC,EAAY,6BAG5CmG,yBAAe2M,OAAK/R,GAAUwvB,IAAkBC,IAAmBlrB,QAC9D,CACLi/B,SAAUF,GAAS+C,OACnBH,QACEF,GAAqBnuB,EAArB,wBACI,6BAAApP,EAAA,+EAE4Bq9B,EAAaQ,SAAb,YAA2BzuB,EAAY3F,IAAIrK,SAAS,MAFhF,OAEUu+B,EAFV,OAGI9xB,EAAe8xB,EAAW,CAAEjyB,QAAQ,UAAD,OAAY0D,EAAYqB,cAAc,GAAtC,oBAHvC,gDAKI1W,QAAQT,MAAM,qBAAd,MALJ,8DAQA9C,EACNmwB,WAAY4W,OAAoB/mC,EAAY,8BAGzCskC,KACN,CAACuC,EAAc9lC,EAASwvB,EAAeC,EAAgB5X,EAAa6J,EAASpN,IGwBdiyB,CAChEn+B,GAAW+P,IAAMC,OACjBhQ,GAAW+P,IAAMG,QACjBgW,IAHMkV,GAAR,GAAQA,SAAmBgD,GAA3B,GAAkBN,QAA6BO,GAA/C,GAAmCrX,WAK7BsX,GAAoBlD,KAAaF,GAASC,eAC1CpsB,GAAQuvB,QAAWznC,EAAYyxB,GAE/BiW,GAAgBD,IAAQ,mBAEvBvuB,IAAMC,MAAQyX,IAFS,cAGvB1X,IAAMG,OAASuX,IAHQ,uBAMvB1X,IAAMC,MAAQiX,KAAqBlX,IAAMC,MAAQyX,GAAnC,OAAkD1Y,SAAlD,IAAkDA,QAAlD,EAAkDA,GAAOU,aANhD,cAOvBM,IAAMG,OAAS+W,KAAqBlX,IAAMG,OAASuX,GAApC,OAAmD1Y,SAAnD,IAAmDA,QAAnD,EAAmDA,GAAOgC,cAPlD,GAU9B,GAAgF4U,eAAxEI,GAAR,GAAQA,eAAgBH,GAAxB,GAAwBA,oBAAqBK,GAA7C,GAA6CA,YAAaG,GAA1D,GAA0DA,kBACpDoY,IAAWf,GACXgB,GAAwBxX,KAAqBlX,IAAMC,MAAQD,IAAMG,OAASH,IAAMC,MAEhF0uB,GAAkBl9B,uBACtB,SAACnC,GACC4mB,GAAYlW,IAAMC,MAAO3Q,KAE3B,CAAC4mB,KAEG0Y,GAAmBn9B,uBACvB,SAACnC,GACC4mB,GAAYlW,IAAMG,OAAQ7Q,KAE5B,CAAC4mB,KAIH,GAAiG7kB,mBAM9F,CACDw9B,aAAa,EACbC,oBAAgBhoC,EAChBs0B,eAAe,EACfmJ,sBAAkBz9B,EAClB0+B,YAAQ1+B,IAXV,8BAAS+nC,GAAT,GAASA,YAAaC,GAAtB,GAAsBA,eAAgBvK,GAAtC,GAAsCA,iBAAkBnJ,GAAxD,GAAwDA,cAAeoK,GAAvE,GAAuEA,OAAUuJ,GAAjF,MAcMC,IAAgB,mBACnB9X,GAAmBf,IADA,cAEnBuY,GAAiBH,GAAQ,oBACtBC,GAActX,WADQ,aACtB,EAAiCzN,iBADX,QACwB,GADxB,oBAEtB+kB,GAAcE,WAFQ,aAEtB,EAA+B3tB,cAAc,UAFvB,QAE6B,IAJnC,GAOhB7B,GAAK,OAAGF,SAAH,IAAGA,QAAH,EAAGA,GAAOE,MACf+vB,GAA8BtmC,QAClCsH,GAAW+P,IAAMC,QAAUhQ,GAAW+P,IAAMG,UAA5C,UAAuDquB,GAActX,WAArE,aAAuD,EAAiCtK,YAAYpd,OAAKC,OAAO,MAE5Gy/B,IAAWhwB,GAGjB,GAAoCshB,aAA4BxhB,GAAOa,IAAvE,qBAAO5D,GAAP,MAAiBkzB,GAAjB,MAGA,GAAkD99B,oBAAkB,GAApE,qBAAO+9B,GAAP,MAA0BC,GAA1B,MAGAtmC,qBAAU,WACJkT,KAAasjB,KAAcO,SAC7BuP,IAAqB,KAEtB,CAACpzB,GAAUmzB,KAEd,IAAME,GAA6C5O,aAAelI,GAAiBxY,IAAMC,QAIzF,GAA6D4pB,GAC3D7qB,GACAa,GACAjL,GACA0hB,IAJgBiZ,GAAlB,GAAQvF,SAA+BwF,GAAvC,GAAgC5lC,MAOxB2V,GAA0BR,YAA2BC,IAArDO,sBAEFkwB,GAAah+B,uBAAY,WACzB8N,KCnLO,SAAsCA,GACnD,OAAKA,EAAsBe,SAASovB,OAS/BnwB,EAAsBe,SAASE,MAC3ByQ,OAAO0e,QAAP,mDACuCnvB,IAA0B4jB,QACpE,GAFG,sEAJC,YAJNnT,OAAOC,OAAP,mDAC8Cwe,IAAqCtL,QAC/E,GAFJ,kEDgL4BwL,CAA6BrwB,KAGtDgwB,KAGLR,IAAa,SAACc,GAAD,mBAAC,eAAoBA,GAArB,IAAgCzU,eAAe,EAAMmJ,sBAAkBz9B,EAAW0+B,YAAQ1+B,OACvGyoC,KACG/c,MAAK,SAACtW,GACL6yB,IAAa,SAACc,GAAD,mBAAC,eACTA,GADQ,IAEXzU,eAAe,EACfmJ,sBAAkBz9B,EAClB0+B,OAAQtpB,UAGXuW,OAAM,SAAC7oB,GACNmlC,IAAa,SAACc,GAAD,mBAAC,eACTA,GADQ,IAEXzU,eAAe,EACfmJ,iBAAkB36B,EAAM8oB,QACxB8S,YAAQ1+B,aAGb,CAACyY,GAAuBgwB,GAAcR,KAGzC,GAAwC19B,oBAAkB,GAA1D,qBAAOozB,GAAP,MAAqBC,GAArB,MAGMS,GAAsB9kB,YAAgBd,IAItCuwB,IACHpC,KACAzxB,KAAasjB,KAAcQ,cAC1B9jB,KAAasjB,KAAcO,SAC1BsP,IAAqBnzB,KAAasjB,KAAcM,aACjDsF,GAAsB,IAAM7C,IAE1ByN,GAAuBt+B,uBAAY,WACvCs9B,IAAa,SAACc,GAAD,mBAAC,eAAoBA,GAArB,IAAgChB,aAAa,OAGtDrJ,IACFtP,GAAYlW,IAAMC,MAAO,MAE1B,CAACiW,GAAasP,GAAQuJ,KAEnBiB,GAAsBv+B,uBAAY,WACtCs9B,IAAa,SAACc,GAAD,mBAAC,eAAoBA,GAArB,IAAgCf,eAAgB9vB,UAC5D,CAACA,KAIEixB,GAAgBx+B,uBACpB,SAACiX,EAAkBwnB,GACA,UAAbxnB,IACF0kB,GAAW,GACXE,EAAwB4C,MAG5B,CAAC9C,EAAYE,IAGT6C,GAAoB1+B,uBACxB,SAAC4lB,GACCgY,IAAqB,GACrBxZ,GAAoB7V,IAAMC,MAAOoX,GACU,UAAvCA,EAAc5rB,OAAOmgB,eACvBqkB,GAAc5Y,EAAc5rB,OAAOmgB,cAAe,aAGtD,CAACiK,GAAqBwZ,GAAsBY,KAGxCG,GAAiB3+B,uBAAY,WAC7B69B,IACFpZ,GAAYlW,IAAMC,MAAOqvB,GAAe7lB,aAEzC,CAAC6lB,GAAgBpZ,KAEdma,GAAqB5+B,uBACzB,SAAC6lB,GACCzB,GAAoB7V,IAAMG,OAAQmX,GACU,UAAxCA,EAAe7rB,OAAOmgB,eACxBqkB,GAAc3Y,EAAe7rB,OAAOmgB,cAAe,YAGvD,CAACiK,GAAqBoa,KAGlBK,GAAmBtE,KACnBuE,GDxPD,WACL,IAAQzgC,EAAYhI,cAAZgI,QACFq8B,EAAqBC,eACrBjwB,EAAiBL,eAEvB,OAAOrK,sBAAW,wBAAC,6BAAAnB,EAAA,yDACZ67B,GAAuBr8B,EADX,0EAMSq8B,EAAmBoE,gBAN5B,OAMTtC,EANS,OAOf9xB,EAAe8xB,EAAW,CAAEjyB,QAAS,kCAPtB,gDASf3R,QAAQT,MAAM,qBAAd,MATe,yDAWhB,CAACuiC,EAAoBr8B,EAASqM,ICwOXq0B,GAEtB,OACE,qCACE,cAACjJ,GAAD,CACE5lB,OAAQ4rB,EAAgBrkC,OAAS,IAAM+jC,EACvCt/B,OAAQ4/B,EACRjJ,UAAWkJ,IAEb,cAACxF,GAAD,CACErmB,OAAQwrB,EACRlF,gBAAiBoF,EACjB/I,UAAWmJ,IAEb,cAACgD,EAAA,EAAD,IACA,eAAC/D,GAAD,CAAiBC,OAAQA,EAAzB,UACE,eAAC,KAAD,CAAMnL,GAAG,MAAMpO,MAAM,OAArB,UACGxkB,EAAE,uBADL,IAC8B0hC,GAAiBlM,QAAQ,GADvD,UAGA,cAAC,IAAD,CAAQr4B,MAAO,CAAE5F,QAAS,OAAQE,aAAc,MAAOsL,WAAY,GAAKC,QAAS2+B,GAAjF,SACG3hC,EAAE,iBAGP,cAACgY,GAAA,EAAD,UACE,eAAC,IAAD,CAAS5T,GAAG,YAAZ,UACE,cAACsyB,EAAD,CACE3jB,OAAQktB,GACR7vB,MAAOA,GACPumB,cAAeuJ,GACf5J,gBAAiB8K,GACjB5U,cAAeA,GACfoK,OAAQA,GACRlP,UAAWA,GACXzW,gBAAiBA,GACjBykB,UAAWmL,GACXlL,iBAAkBA,GAClBriB,UAAW6tB,KAEb,cAACvM,GAAA,EAAD,CAAYha,MAAO5a,EAAE,YAAaib,YAAajb,EAAE,gCACjD,eAAC,IAAD,WACE,eAAC,IAAD,CAAY9I,IAAI,KAAhB,UACE,cAACw3B,EAAA,EAAD,CACEI,MAAOxG,KAAqBlX,IAAMG,SAAWouB,IAAYvvB,GAAQpQ,EAAE,oBAAsBA,EAAE,QAC3FU,MAAO0/B,GAAiBhvB,IAAMC,OAE9Bud,eAAe,EACfC,UAAW6R,GACXxjC,SAAUmE,GAAW+P,IAAMC,OAC3BiW,YAAayY,GACbpR,MAAO6S,GACPvlB,iBAAkBslB,GAClBrlB,cAAe7a,GAAW+P,IAAMG,QAChCnN,GAAG,wBAEL,cAAC,IAAD,CAAYjN,QAAQ,gBAApB,SACE,eAAC,IAAD,CAASA,QAASu8B,GAAe,gBAAkB,SAAUv2B,MAAO,CAAE5F,QAAS,UAA/E,UACE,cAAC,IAAD,CAAcsX,WAAS,EAAvB,SACE,cAAC,IAAD,CACEgU,QAAQ,WACR7f,QAAS,WACPy9B,IAAqB,GACrBrZ,MAEFjqB,MAAO,CAAE1F,aAAc,OACvBu4B,MAAM,KAPR,SASE,cAAC,IAAD,CAAiBxL,MAAM,UAAU/H,MAAM,aAG5B,OAAdiL,KAAuBiY,IAAYjM,GAClC,cAAC,IAAD,CAAkBtvB,GAAG,uBAAuBpB,QAAS,kBAAMykB,GAAkB,KAA7E,qCAGE,UAGR,cAACiH,EAAA,EAAD,CACEhuB,MAAO0/B,GAAiBhvB,IAAMG,QAC9B+V,YAAa0Y,GACblR,MAAOxG,KAAqBlX,IAAMC,QAAUsuB,IAAYvvB,GAAQpQ,EAAE,kBAAoBA,EAAE,MACxF4uB,eAAe,EACf1xB,SAAUmE,GAAW+P,IAAMG,QAC3B0K,iBAAkBwlB,GAClBvlB,cAAe7a,GAAW+P,IAAMC,OAChCjN,GAAG,yBAGU,OAAdsjB,IAAuBiY,GAYpB,KAXF,qCACE,eAAC,IAAD,CAASxoC,QAAQ,gBAAgBgG,MAAO,CAAE5F,QAAS,UAAnD,UACE,cAAC,IAAD,CAAcsX,WAAW,EAAzB,SACE,cAAC,IAAD,CAAWlS,KAAK,KAAK6nB,MAAOriB,GAAMC,OAAOE,eAE3C,cAAC,IAAD,CAAkB8B,GAAG,0BAA0BpB,QAAS,kBAAMykB,GAAkB,OAAhF,8BAIF,cAAC0N,EAAD,CAAmB/wB,GAAG,YAAY1D,MAAOgnB,GAAWtH,SAAUqH,QAIjEkY,GAAW,KACV,cAACj0B,EAAA,EAAD,CAAMnU,QAAQ,yBAAyBE,aAAa,OAApD,SACE,eAAC,IAAD,CAAYP,IAAI,MAAhB,UACG6C,QAAQqW,KACP,eAAChZ,EAAA,EAAD,CAAYE,MAAM,SAAlB,UACE,cAAC,KAAD,CAAMqiB,SAAS,OAAf,SAAuB3Z,EAAE,WACzB,cAAC+3B,GAAD,CACEC,MAAK,OAAE5nB,SAAF,IAAEA,QAAF,EAAEA,GAAO6B,eACd4jB,aAAcA,GACdC,gBAAiBA,QAItB7kB,KAAoBgpB,KACnB,eAAC7iC,EAAA,EAAD,CAAYE,MAAM,SAAlB,UACE,cAAC,KAAD,CAAMqiB,SAAS,OAAf,SAAuB3Z,EAAE,wBACzB,eAAC,KAAD,CAAM2Z,SAAS,OAAf,UAAuB1I,GAAkB,IAAzC,kBAOZ,eAAC,IAAD,WACI/P,GAEEy+B,GACF,cAAC,IAAD,CAAQn3B,SAAUzO,QAAQ2lC,IAAiB18B,QAASy8B,GAAQhjB,MAAM,OAAlE,gBACGijB,SADH,IACGA,MACEjD,KAAaF,GAAS2C,KAAO,OAASzC,KAAaF,GAAS+C,OAAS,SAAW,OAEnFgB,IAAWD,GACb,cAAC,IAAD,CAAUljC,MAAO,CAAEsnB,UAAW,UAA9B,SACE,cAAC,KAAD,CAAMmO,GAAG,MAAT,SAAgB5yB,EAAE,8CAElBkhC,GACF,eAAC9pC,EAAA,EAAD,WACE,cAAC,IAAD,CACE4L,QAASu9B,GACT/3B,SAAU6E,KAAasjB,KAAcQ,cAAgBqP,GACrDrjC,MAAO,CAAEsf,MAAO,OAChBoG,QAASxV,KAAasjB,KAAcM,SAAW,UAAY,UAJ7D,SAMG5jB,KAAasjB,KAAcO,QAC1B,eAAC,IAAD,CAASh6B,IAAI,MAAMC,QAAQ,SAA3B,uBACY,cAACge,GAAA,EAAD,CAAQD,OAAO,aAEzBsrB,IAAqBnzB,KAAasjB,KAAcM,SAClD,WADE,4BAGS5vB,GAAW+P,IAAMC,cAH1B,aAGS,EAAyBxU,UAGxC,cAAC,IAAD,CACEmG,QAAS,WACH0wB,GACFmN,KAEAV,GAAa,CACXD,eAAgB9vB,GAChBoc,eAAe,EACfmJ,sBAAkBz9B,EAClB+nC,aAAa,EACbrJ,YAAQ1+B,KAIdiF,MAAO,CAAEsf,MAAO,OAChBrY,GAAG,cACHoE,UACGq3B,IAAWxyB,KAAasjB,KAAcM,UAAasF,GAAsB,IAAM7C,GAElF7Q,QAASgd,IAAWtJ,GAAsB,EAAI,SAAW,UAnB3D,SAqBGA,GAAsB,IAAM7C,GAA5B,kCAEU6C,GAAsB,EAAI,UAAY,SAIrD,cAAC,IAAD,CACEvzB,QAAS,WACH0wB,GACFmN,KAEAV,GAAa,CACXD,eAAgB9vB,GAChBoc,eAAe,EACfmJ,sBAAkBz9B,EAClB+nC,aAAa,EACbrJ,YAAQ1+B,KAIdkM,GAAG,cACHoE,UAAWq3B,IAAYtJ,GAAsB,IAAM7C,MAAmBkN,GACtE/d,QAASgd,IAAWtJ,GAAsB,IAAMqK,GAAoB,SAAW,UAC/EnkB,MAAM,OAjBR,SAmBGqiB,IAEK9+B,EADHu2B,GAAsB,IAAM7C,GACvB,wBACF6C,GAAsB,EACpB,cACA,UA/EV,cAACuL,GAAA,EAAD,CAAqBrlB,MAAM,SAkF5BykB,IAAmB,cAAC,GAAD,CAAepH,MAAO,CAACzsB,KAAasjB,KAAcM,YACrEyC,IAAgBiC,GAAmB,cAAC,IAAD,CAAmB36B,MAAO26B,KAAuB,gBAK7F,cAACkC,GAAD,CAA6BznB,MAAOA","file":"static/js/18.4d92ba10.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align || 'center'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      // @ts-ignore\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n        const data = result?.data && result?.data !== '0x' ? result.data : null\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId],\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.error('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            }\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\r\n  }, [fragment, contract, results, latestBlockNumber])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\r\n  }, [fragment, results, contractInterface, latestBlockNumber])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\r\n  }, [result, contract, fragment, latestBlockNumber])\r\n}\r\n","import styled from 'styled-components'\r\nimport Logo from '../Logo'\r\n\r\nconst CoinLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default CoinLogo\r\n","import { Currency, ETHER } from 'archerswap-sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport Logo from '../Logo'\r\nimport CoinLogo from '../archer/CoinLogo'\r\n\r\nexport const getTokenLogoURLForMetamask = (symbol: string) => {\r\n  return `https://archerswap.finance/images/coins/${symbol}.png`\r\n}\r\n\r\nconst StyledCoreLogo = styled.img<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\r\n  border-radius: 24px;\r\n`\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const srcs: string[] = [currency instanceof WrappedTokenInfo ? currency.tokenInfo.logoURI : undefined]\r\n  if (currency === ETHER) {\r\n    return <StyledCoreLogo src=\"/images/coins/core.png\" size={size} style={style} />\r\n  }\r\n\r\n  return (currency as any)?.symbol ? (\r\n    <CoinLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n  ) : (\r\n    <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n  )\r\n}\r\n","import { parseBytes32String } from '@ethersproject/strings'\r\nimport { Currency, ETHER, Token, currencyEquals } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { useSelectedTokenList } from '../state/lists/hooks'\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useUserAddedTokens } from '../state/user/hooks'\r\nimport { isAddress } from '../utils'\r\n\r\nimport { useActiveWeb3React } from './index'\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React()\r\n  const userAddedTokens = useUserAddedTokens()\r\n  const allTokens = useSelectedTokenList()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {}\r\n    return (\r\n      userAddedTokens\r\n        // reduce into all ALL_TOKENS filtered by the current chain\r\n        .reduce<{ [address: string]: Token }>(\r\n          (tokenMap, token) => {\r\n            tokenMap[token.address] = token\r\n            return tokenMap\r\n          },\r\n          // must make a copy because reduce modifies the map, and we do not\r\n          // want to make a copy in every iteration\r\n          { ...allTokens[chainId] },\r\n        )\r\n    )\r\n  }, [chainId, userAddedTokens, allTokens])\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency): boolean {\r\n  const userAddedTokens = useUserAddedTokens()\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : bytes32 && BYTES32_REGEX.test(bytes32)\r\n    ? parseBytes32String(bytes32)\r\n    : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  const address = isAddress(tokenAddress)\r\n\r\n  const tokenContract = useTokenContract(address || undefined, false)\r\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\r\n  const token: Token | undefined = address ? tokens[address] : undefined\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD,\r\n  )\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\r\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\r\n\r\n  return useMemo(() => {\r\n    if (token) return token\r\n    if (!chainId || !address) return undefined\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ])\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isCORE = currencyId?.toUpperCase() === 'CORE'\r\n  const token = useToken(isCORE ? undefined : currencyId)\r\n  return isCORE ? ETHER : token\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport ERC20_INTERFACE from '../../constants/abis/erc20'\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport { isAddress } from '../../utils'\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\r\n\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent ETH balances.\r\n */\r\nexport function useETHBalances(\r\n  uncheckedAddresses?: (string | undefined)[],\r\n): {\r\n  [address: string]: CurrencyAmount | undefined\r\n} {\r\n  const multicallContract = useMulticallContract()\r\n\r\n  const addresses: string[] = useMemo(\r\n    () =>\r\n      uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a): a is string => a !== false)\r\n            .sort()\r\n        : [],\r\n    [uncheckedAddresses],\r\n  )\r\n\r\n  const results = useSingleContractMultipleData(\r\n    multicallContract,\r\n    'getEthBalance',\r\n    addresses.map((address) => [address]),\r\n  )\r\n\r\n  return useMemo(\r\n    () =>\r\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\r\n        const value = results?.[i]?.result?.[0]\r\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\r\n        return memo\r\n      }, {}),\r\n    [addresses, results],\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\r\n  const validatedTokens: Token[] = useMemo(\r\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\r\n    [tokens],\r\n  )\r\n\r\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\r\n\r\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\r\n\r\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\r\n\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        address && validatedTokens.length > 0\r\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\r\n              const value = balances?.[i]?.result?.[0]\r\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n              if (amount) {\r\n                memo[token.address] = new TokenAmount(token, amount)\r\n              }\r\n              return memo\r\n            }, {})\r\n          : {},\r\n      [address, validatedTokens, balances],\r\n    ),\r\n    anyLoading,\r\n  ]\r\n}\r\n\r\nexport function useTokenBalances(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\r\n}\r\n\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\r\n  const tokenBalances = useTokenBalances(account, [token])\r\n  if (!token) return undefined\r\n  return tokenBalances[token.address]\r\n}\r\n\r\nexport function useCurrencyBalances(\r\n  account?: string,\r\n  currencies?: (Currency | undefined)[],\r\n): (CurrencyAmount | undefined)[] {\r\n  const tokens = useMemo(() => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [], [\r\n    currencies,\r\n  ])\r\n\r\n  const tokenBalances = useTokenBalances(account, tokens)\r\n  const containsETH: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\r\n  const ethBalance = useETHBalances(containsETH ? [account] : [])\r\n\r\n  return useMemo(\r\n    () =>\r\n      currencies?.map((currency) => {\r\n        if (!account || !currency) return undefined\r\n        if (currency instanceof Token) return tokenBalances[currency.address]\r\n        if (currency === ETHER) return ethBalance[account]\r\n        return undefined\r\n      }) ?? [],\r\n    [account, currencies, ethBalance, tokenBalances],\r\n  )\r\n}\r\n\r\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  return useCurrencyBalances(account, [currency])[0]\r\n}\r\n\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  const { account } = useActiveWeb3React()\r\n  const allTokens = useAllTokens()\r\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\r\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\r\n  return balances ?? {}\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\n// import { HelpCircle as Question } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text }: { text: string }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          {/* <Question size={16} /> */}\r\n          <img src=\"/images/question.svg\" alt=\"help\" />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import { ChainId, Token } from 'archerswap-sdk'\r\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../index'\r\n\r\ntype TagDetails = Tags[keyof Tags]\r\nexport interface TagInfo extends TagDetails {\r\n  id: string\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n  public readonly tokenInfo: TokenInfo\r\n\r\n  public readonly tags: TagInfo[]\r\n\r\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\r\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n    this.tokenInfo = tokenInfo\r\n    this.tags = tags\r\n  }\r\n\r\n  public get logoURI(): string | undefined {\r\n    return this.tokenInfo.logoURI\r\n  }\r\n}\r\n\r\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\r\n\r\n/**\r\n * An empty result, useful as a default.\r\n */\r\nconst EMPTY_LIST: TokenAddressMap = {\r\n  [ChainId.MAINNET]: {},\r\n  [ChainId.BSCTESTNET]: {},\r\n}\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n  const result = listCache?.get(list)\r\n  if (result) return result\r\n\r\n  const map = list.tokens.reduce<TokenAddressMap>(\r\n    (tokenMap, tokenInfo) => {\r\n      const tags: TagInfo[] =\r\n        tokenInfo.tags\r\n          ?.map((tagId) => {\r\n            if (!list.tags?.[tagId]) return undefined\r\n            return { ...list.tags[tagId], id: tagId }\r\n          })\r\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\r\n      const token = new WrappedTokenInfo(tokenInfo, tags)\r\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\r\n      return {\r\n        ...tokenMap,\r\n        [token.chainId]: {\r\n          ...tokenMap[token.chainId],\r\n          [token.address]: token,\r\n        },\r\n      }\r\n    },\r\n    { ...EMPTY_LIST },\r\n  )\r\n  listCache?.set(list, map)\r\n  return map\r\n}\r\n\r\nexport function useTokenList(url: string | undefined): TokenAddressMap {\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  return useMemo(() => {\r\n    if (!url) return EMPTY_LIST\r\n    const current = lists[url]?.current\r\n    if (!current) return EMPTY_LIST\r\n    try {\r\n      return listToTokenMap(current)\r\n    } catch (error) {\r\n      console.error('Could not show token list due to error', error)\r\n      return EMPTY_LIST\r\n    }\r\n  }, [lists, url])\r\n}\r\n\r\nexport function useSelectedListUrl(): string | undefined {\r\n  return useSelector<AppState, AppState['lists']['selectedListUrl']>((state) => state.lists.selectedListUrl)\r\n}\r\n\r\nexport function useSelectedTokenList(): TokenAddressMap {\r\n  return useTokenList(useSelectedListUrl())\r\n}\r\n\r\nexport function useSelectedListInfo(): { current: TokenList | null; pending: TokenList | null; loading: boolean } {\r\n  const selectedUrl = useSelectedListUrl()\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const list = selectedUrl ? listsByUrl[selectedUrl] : undefined\r\n  return {\r\n    current: list?.current ?? null,\r\n    pending: list?.pendingUpdate ?? null,\r\n    loading: list?.loadingRequestId !== null,\r\n  }\r\n}\r\n\r\n// returns all downloaded current lists\r\nexport function useAllLists(): TokenList[] {\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n\r\n  return useMemo(\r\n    () =>\r\n      Object.keys(lists)\r\n        .map((url) => lists[url].current)\r\n        .filter((l): l is TokenList => Boolean(l)),\r\n    [lists],\r\n  )\r\n}\r\n","import { ChainId, Pair, Token } from 'archerswap-sdk'\r\nimport flatMap from 'lodash.flatmap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserDarkMode,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  muteAudio,\r\n  unmuteAudio,\r\n} from './actions'\r\nimport { setThemeCache } from '../../utils/theme'\r\n\r\nfunction serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nfunction deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name,\r\n  )\r\n}\r\n\r\nexport function useIsDarkMode(): boolean {\r\n  const { userDarkMode, matchesDarkMode } = useSelector<\r\n    AppState,\r\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\r\n  >(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\r\n      userDarkMode,\r\n      matchesDarkMode,\r\n    }),\r\n    shallowEqual,\r\n  )\r\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\r\n}\r\n\r\nexport function useDarkModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { userDarkMode } = useSelector<AppState, { userDarkMode: boolean | null }>(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { userDarkMode } }) => ({\r\n      userDarkMode,\r\n    }),\r\n    shallowEqual,\r\n  )\r\n  const darkMode = useIsDarkMode()\r\n\r\n  const toggleSetDarkMode = useCallback(() => {\r\n    setThemeCache(!userDarkMode)\r\n    dispatch(updateUserDarkMode({ userDarkMode: !userDarkMode }))\r\n  }, [userDarkMode, dispatch])\r\n\r\n  return [darkMode, toggleSetDarkMode]\r\n}\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippageTolerance: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippageTolerance }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserDeadline(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Archerswap LPs', 'Archer-LP')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId],\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\r\n    generatedPairs,\r\n    pinnedPairs,\r\n    userPairs,\r\n  ])\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n","import React, { HTMLProps, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\n// A button that triggers some onClick result, but looks like a link.\r\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\r\n  border: none;\r\n  text-decoration: none;\r\n  background: none;\r\n\r\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\r\n  color: ${({ theme, disabled }) => (disabled ? theme.colors.textSubtle : theme.colors.primary)};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n// An internal link from the react-router-dom library that is correctly styled\r\nexport const StyledInternalLink = styled(Link)`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n/**\r\n * Outbound link that handles firing google analytics events\r\n */\r\nexport function ExternalLink({\r\n  target = '_blank',\r\n  href,\r\n  rel = 'noopener noreferrer',\r\n  ...rest\r\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n      if (!(target === '_blank' || event.ctrlKey || event.metaKey)) {\r\n        event.preventDefault()\r\n      }\r\n    },\r\n    [target],\r\n  )\r\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\r\n}\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nexport const Spinner = styled.img`\r\n  animation: 2s ${rotate} linear infinite;\r\n  width: 16px;\r\n  height: 16px;\r\n`\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import { useContext } from 'react'\r\nimport { isEmpty } from 'lodash'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\ninterface ContextData {\r\n  [key: string]: number | string\r\n}\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\r\n    if (translations.length === 0) {\r\n      return fallback\r\n    }\r\n\r\n    const foundTranslation = translations.find((translation) => {\r\n      return translation.data.stringId === translationId\r\n    })\r\n\r\n    if (foundTranslation) {\r\n      const { text } = foundTranslation.data\r\n      const includesVariable = text.includes('%')\r\n\r\n      if (includesVariable) {\r\n        let interpolatedText = text\r\n\r\n        // If dynamic tags are found but no data was passed return the fallback\r\n        if (isEmpty(data)) {\r\n          return fallback\r\n        }\r\n\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from 'archerswap-sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  // eslint-disable-next-line no-nested-ternary\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import React, { useState } from 'react'\r\nimport { HelpCircle } from 'react-feather'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps {\r\n  alt?: string\r\n  style?: any\r\n  className?: string\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpCircle {...rest} />\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<any>`\r\n  width: 100%;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)<{ isDark: boolean }>`\r\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n","import { TokenAmount, Pair, Currency } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { useActiveWeb3React } from '../hooks'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString)\r\n}\r\n","import { TransactionResponse } from '@ethersproject/providers'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addTransaction } from './actions'\r\nimport { TransactionDetails } from './reducer'\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return\r\n      if (!chainId) return\r\n\r\n      const { hash } = response\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.')\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }))\r\n    },\r\n    [dispatch, chainId, account],\r\n  )\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  return chainId ? state[chainId] ?? {} : {}\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions()\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false\r\n\r\n  return !transactions[transactionHash].receipt\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions()\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash]\r\n        if (!tx) return false\r\n        if (tx.receipt) {\r\n          return false\r\n        }\r\n        const { approval } = tx\r\n        if (!approval) return false\r\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  )\r\n}\r\n","import { Currency } from 'archerswap-sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ sizeraw, margin }) => margin && `${(sizeraw / 3 + 8).toString()}px`};\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nconst HigherLogo = styled(CurrencyLogo)`\r\n  z-index: 2;\r\n`\r\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\r\n  position: absolute;\r\n  left: ${({ sizeraw }) => `${(sizeraw / 2).toString()}px`};\r\n`\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 16,\r\n  margin = false,\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper sizeraw={size} margin={margin}>\r\n      {currency0 && <HigherLogo currency={currency0} size={`${size.toString()}px`} />}\r\n      {currency1 && (\r\n        <CoveredLogo currency={currency1} size={`${size.toString()}px`} sizeraw={size} style={{ marginLeft: 8 }} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { transparentize } from 'polished'\r\nimport React from 'react'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { Text } from 'archerswap-uikit'\r\nimport styled, { css } from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) =>\r\n    clickable\r\n      ? css`\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n      : null}\r\n`\r\n\r\nexport const SectionBreak = styled.div`\r\n  height: 1px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n\r\nexport const BottomGrouping = styled.div`\r\n  margin-top: 1rem;\r\n`\r\n\r\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\r\n  color: ${({ theme, severity }) =>\r\n    severity === 3 || severity === 4\r\n      ? theme.colors.failure\r\n      : severity === 2\r\n      ? theme.colors.binance\r\n      : severity === 1\r\n      ? theme.colors.text\r\n      : theme.colors.success};\r\n`\r\n\r\nexport const StyledBalanceMaxMini = styled.button`\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n    outline: none;\r\n  }\r\n`\r\n\r\n// styles\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInner = styled.div`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`\r\n\r\nexport function SwapCallbackError({ error }: { error: string }) {\r\n  return (\r\n    <SwapCallbackErrorInner>\r\n      <SwapCallbackErrorInnerAlertTriangle>\r\n        <AlertTriangle size={24} />\r\n      </SwapCallbackErrorInnerAlertTriangle>\r\n      <p>{error}</p>\r\n    </SwapCallbackErrorInner>\r\n  )\r\n}\r\n\r\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.primary)};\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`\r\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from 'archerswap-sdk'\r\nimport {\r\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\r\n  ALLOWED_PRICE_IMPACT_HIGH,\r\n  ALLOWED_PRICE_IMPACT_LOW,\r\n  ALLOWED_PRICE_IMPACT_MEDIUM,\r\n} from '../constants'\r\n\r\nimport { Field } from '../state/swap/actions'\r\nimport { basisPointsToPercent } from './index'\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(10), JSBI.BigInt(10000))\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\r\n\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(\r\n  trade?: Trade,\r\n): {\r\n  priceImpactWithoutFee?: Percent\r\n  realizedLPFee?: CurrencyAmount\r\n} {\r\n  // for each hop in our trade, take away the x*y=k price impact from 0.1% fees\r\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .01) * (1-.01))\r\n  const realizedLPFee = !trade\r\n    ? undefined\r\n    : ONE_HUNDRED_PERCENT.subtract(\r\n        trade.route.pairs.reduce<Fraction>(\r\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\r\n          ONE_HUNDRED_PERCENT,\r\n        ),\r\n      )\r\n\r\n  // remove lp fees from price impact\r\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\r\n\r\n  // the x*y=k impact\r\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\r\n    : undefined\r\n\r\n  // the amount of the input that accrues to LPs\r\n  const realizedLPFeeAmount =\r\n    realizedLPFee &&\r\n    trade &&\r\n    (trade.inputAmount instanceof TokenAmount\r\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\r\n\r\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\r\n}\r\n\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(\r\n  trade: Trade | undefined,\r\n  allowedSlippage: number,\r\n): { [field in Field]?: CurrencyAmount } {\r\n  const pct = basisPointsToPercent(allowedSlippage)\r\n  return {\r\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\r\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\r\n  }\r\n}\r\n\r\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\r\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\r\n  return 0\r\n}\r\n\r\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\r\n  if (!trade) {\r\n    return ''\r\n  }\r\n  return inverted\r\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\r\n        trade.outputAmount.currency.symbol\r\n      }`\r\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\r\n        trade.inputAmount.currency.symbol\r\n      }`\r\n}\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { animated, useTransition } from 'react-spring'\r\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\r\nimport { isMobile } from 'react-device-detect'\r\nimport '@reach/dialog/styles.css'\r\nimport { transparentize } from 'polished'\r\n\r\nconst AnimatedDialogOverlay = animated(DialogOverlay)\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\r\n  &[data-reach-dialog-overlay] {\r\n    z-index: 2;\r\n    background-color: transparent;\r\n    overflow: hidden;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n  }\r\n`\r\n\r\nconst AnimatedDialogContent = animated(DialogContent)\r\n// destructure to not pass custom props to Dialog DOM element\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => (\r\n  <AnimatedDialogContent {...rest} />\r\n)).attrs({\r\n  'aria-label': 'dialog',\r\n})`\r\n  &[data-reach-dialog-content] {\r\n    margin: 0 0 2rem 0;\r\n    border: 1px solid ${({ theme }) => theme.colors.card};\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    box-shadow: 0 4px 8px 0 ${transparentize(0.95, '#191326')};\r\n    padding: 0px;\r\n    width: 80%;\r\n    overflow: hidden;\r\n\r\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\r\n\r\n    max-width: 420px;\r\n    ${({ maxHeight }) =>\r\n      maxHeight &&\r\n      css`\r\n        max-height: ${maxHeight}vh;\r\n      `}\r\n    ${({ minHeight }) =>\r\n      minHeight &&\r\n      css`\r\n        min-height: ${minHeight}vh;\r\n      `}\r\n    display: flex;\r\n    border-radius: 20px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      width: 65vw;\r\n    }\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      width: 85vw;\r\n    }\r\n  }\r\n`\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  minHeight?: number | false\r\n  maxHeight?: number\r\n  initialFocusRef?: React.RefObject<any>\r\n  children?: React.ReactNode\r\n}\r\n\r\nexport default function Modal({\r\n  isOpen,\r\n  onDismiss,\r\n  minHeight = false,\r\n  maxHeight = 50,\r\n  initialFocusRef,\r\n  children,\r\n}: ModalProps) {\r\n  const fadeTransition = useTransition(isOpen, null, {\r\n    config: { duration: 200 },\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {fadeTransition.map(\r\n        ({ item, key, props }) =>\r\n          item && (\r\n            <StyledDialogOverlay key={key} style={props} onDismiss={onDismiss} initialFocusRef={initialFocusRef}>\r\n              <StyledDialogContent\r\n                aria-label=\"dialog content\"\r\n                minHeight={minHeight}\r\n                maxHeight={maxHeight}\r\n                mobile={isMobile}\r\n              >\r\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\r\n                {/* eslint-disable */}\r\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\r\n                {/* eslint-enable */}\r\n                {children}\r\n              </StyledDialogContent>\r\n            </StyledDialogOverlay>\r\n          ),\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n// import { ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nconst StyledNav = styled.div`\r\n  margin-bottom: 40px;\r\n`\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst TabItem = styled(Link)<{ active: boolean }>`\r\n  display: flex;\r\n  padding: 11px 35px;\r\n  // background: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.tertiary)};\r\n  background: ${(props) => props.theme.colors.tertiary};\r\n  border-radius: 32px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  // color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\r\n  color: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.textSubtle)};\r\n  z-index: ${(props) => (props.active ? '1' : '0')};\r\n  margin: 32px -18px;\r\n  cursor: pointer;\r\n\r\n  // &:hover {\r\n  //   color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\r\n  // }\r\n  @media (max-width: 768px) {\r\n    padding: 11px 35px;\r\n    margin: 40px -18px;\r\n    border-radius: 28px !important;\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst Bridge = styled.a<{ active: boolean }>`\r\n  display: flex;\r\n  padding: 11px 35px;\r\n  // background: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.tertiary)};\r\n  background: ${(props) => props.theme.colors.tertiary};\r\n  border-radius: 32px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  // color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\r\n  color: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.textSubtle)};\r\n  z-index: ${(props) => (props.active ? '1' : '0')};\r\n  margin: 32px -18px;\r\n  cursor: pointer;\r\n\r\n  // &:hover {\r\n  //   color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\r\n  // }\r\n  @media (max-width: 768px) {\r\n    padding: 11px 35px;\r\n    margin: 40px -18px;\r\n    border-radius: 28px !important;\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nfunction Nav({ activeIndex = 0 }: { activeIndex?: number }) {\r\n  /* eslint-disable @typescript-eslint/no-unused-vars */\r\n  const [activeTab, setActiveTab] = React.useState(activeIndex)\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledNav>\r\n      <TabContainer>\r\n        <TabItem active={activeTab === 0} id=\"swap-nav-link\" to=\"/swap\">\r\n          {t('Swap')}\r\n        </TabItem>\r\n        <TabItem active={activeTab === 1} id=\"pool-nav-link\" to=\"/pool\">\r\n          {t('Liquidity')}\r\n        </TabItem>\r\n        <TabItem active={activeTab === 2} id=\"TabItem-nav-link\" to=\"/cross-swap\">\r\n          {isMobile ? t('Cross') : t('Cross Swap')}\r\n        </TabItem>\r\n        <Bridge active={activeTab === 3} id=\"bridge-nav-link\" href=\"https://bridge.coredao.org/bridge\" target=\"_blank\">\r\n          {t('Bridge')}\r\n        </Bridge>\r\n        {/* <ButtonMenuItem id=\"zapin-nav-link\" to=\"/zap\" as={Link} style={{ borderRadius: '30px' }}>\r\n          {TranslateString(92, 'Zap')}\r\n        </ButtonMenuItem> */}\r\n      </TabContainer>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\n\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nexport default function useLast<T>(\r\n  value: T | undefined | null,\r\n  filterFn?: (value: T | null | undefined) => boolean,\r\n): T | null | undefined {\r\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\r\n  useEffect(() => {\r\n    setLast((prev) => {\r\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\r\n      if (shouldUse) return value\r\n      return prev\r\n    })\r\n  }, [filterFn, value])\r\n  return last\r\n}\r\n\r\nfunction isDefined<T>(x: T | null | undefined): x is T {\r\n  return x !== null && x !== undefined\r\n}\r\n\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nexport function useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\r\n  return useLast(value, isDefined)\r\n}\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n    transform: rotate(45deg);\r\n    background: ${({ theme }) => theme.colors.background};\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from 'archerswap-uikit'\r\n\r\nexport const BodyWrapper = styled(Card)`\r\n  position: relative;\r\n  max-width: 436px;\r\n  width: 100%;\r\n  z-index: 5;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n","import { useMemo } from 'react'\r\nimport contenthashToUri from '../utils/contenthashToUri'\r\nimport { parseENSAddress } from '../utils/parseENSAddress'\r\nimport uriToHttp from '../utils/uriToHttp'\r\nimport useENSContentHash from './useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri: string | undefined): string[] {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    }\r\n    return uri ? uriToHttp(uri) : []\r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport isZero from '../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!ensName) return [undefined]\r\n    try {\r\n      return ensName ? [namehash(ensName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [ensName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddress = resolverAddressResult.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\r\n    false,\r\n  )\r\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\r\n\r\n  return {\r\n    contenthash: contenthash.result?.[0] ?? null,\r\n    loading: resolverAddressResult.loading || contenthash.loading,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\n\r\nimport Logo from '../Logo'\r\n\r\nconst StyledListLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt,\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n","import React from 'react'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from 'archerswap-sdk'\r\nimport styled from 'styled-components'\r\n\r\nimport useI18n from 'hooks/useI18n'\r\nimport { SUGGESTED_BASES } from '../../constants'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\r\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.tertiary)};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 6px;\r\n\r\n  align-items: center;\r\n  :hover {\r\n    cursor: ${({ disable }) => !disable && 'pointer'};\r\n    background-color: ${({ theme, disable }) => !disable && theme.colors.invertedContrast};\r\n  }\r\n\r\n  background-color: ${({ theme, disable }) => disable && theme.colors.tertiary};\r\n  opacity: ${({ disable }) => disable && '0.4'};\r\n`\r\n\r\nexport default function CommonBases({\r\n  chainId,\r\n  onSelect,\r\n  selectedCurrency,\r\n}: {\r\n  chainId?: ChainId\r\n  selectedCurrency?: Currency | null\r\n  onSelect: (currency: Currency) => void\r\n}) {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow>\r\n        <Text fontSize=\"14px\">Common bases</Text>\r\n        <QuestionHelper text={TranslateString(1204, 'These tokens are commonly paired with other tokens.')} />\r\n      </AutoRow>\r\n      <AutoRow gap=\"4px\">\r\n        <BaseWrapper\r\n          onClick={() => {\r\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\r\n              onSelect(ETHER)\r\n            }\r\n          }}\r\n          disable={selectedCurrency === ETHER}\r\n        >\r\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\r\n          <Text>CORE</Text>\r\n        </BaseWrapper>\r\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\r\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\r\n          return (\r\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\r\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\r\n              <Text>{token.symbol}</Text>\r\n            </BaseWrapper>\r\n          )\r\n        })}\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\nimport { RowBetween, RowFixed } from '../Row'\r\n\r\nexport const FadedSpan = styled(RowFixed)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 14px;\r\n`\r\n\r\nexport const PaddedColumn = styled(AutoColumn)`\r\n  padding: 20px;\r\n  padding-bottom: 12px;\r\n`\r\n\r\nexport const MenuItem = styled(RowBetween)`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto minmax(0, 72px);\r\n  grid-gap: 16px;\r\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n  :hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.card};\r\n  }\r\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\r\n`\r\n\r\nexport const SearchInput = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 16px;\r\n  align-items: center;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  border-style: solid;\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  -webkit-appearance: none;\r\n\r\n  font-size: 18px;\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  transition: border 100ms;\r\n  :focus {\r\n    border: 1px solid ${({ theme }) => theme.colors.primary};\r\n    outline: none;\r\n  }\r\n`\r\nexport const Separator = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n`\r\n\r\nexport const SeparatorDark = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n","import { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from 'archerswap-sdk'\r\nimport React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\r\nimport { FixedSizeList } from 'react-window'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useSelectedTokenList, WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport { useAddUserToken, useRemoveUserAddedToken } from '../../state/user/hooks'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport { LinkStyledButton } from '../Shared'\r\nimport { useIsUserAddedToken } from '../../hooks/Tokens'\r\nimport Column from '../Column'\r\nimport { RowFixed } from '../Row'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport { MouseoverTooltip } from '../Tooltip'\r\nimport { FadedSpan, MenuItem } from './styleds'\r\nimport Loader from '../Loader'\r\nimport { isTokenOnList } from '../../utils'\r\n\r\nfunction currencyKey(currency: Currency): string {\r\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\r\n}\r\n\r\nconst StyledBalanceText = styled(Text)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 5rem;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst Tag = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\r\n  max-width: 6rem;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  justify-self: flex-end;\r\n  margin-right: 4px;\r\n`\r\n\r\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\r\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\r\n}\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n\r\nfunction TokenTags({ currency }: { currency: Currency }) {\r\n  if (!(currency instanceof WrappedTokenInfo)) {\r\n    return <span />\r\n  }\r\n\r\n  const { tags } = currency\r\n  if (!tags || tags.length === 0) return <span />\r\n\r\n  const tag = tags[0]\r\n\r\n  return (\r\n    <TagContainer>\r\n      <MouseoverTooltip text={tag.description}>\r\n        <Tag key={tag.id}>{tag.name}</Tag>\r\n      </MouseoverTooltip>\r\n      {tags.length > 1 ? (\r\n        <MouseoverTooltip\r\n          text={tags\r\n            .slice(1)\r\n            .map(({ name, description }) => `${name}: ${description}`)\r\n            .join('; \\n')}\r\n        >\r\n          <Tag>...</Tag>\r\n        </MouseoverTooltip>\r\n      ) : null}\r\n    </TagContainer>\r\n  )\r\n}\r\n\r\nfunction CurrencyRow({\r\n  currency,\r\n  onSelect,\r\n  isSelected,\r\n  otherSelected,\r\n  style,\r\n}: {\r\n  currency: Currency\r\n  onSelect: () => void\r\n  isSelected: boolean\r\n  otherSelected: boolean\r\n  style: CSSProperties\r\n}) {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const key = currencyKey(currency)\r\n  const selectedTokenList = useSelectedTokenList()\r\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\r\n  const customAdded = useIsUserAddedToken(currency)\r\n  const balance = useCurrencyBalance(account ?? undefined, currency)\r\n\r\n  const removeToken = useRemoveUserAddedToken()\r\n  const addToken = useAddUserToken()\r\n\r\n  // only show add or remove buttons if not on selected list\r\n  return (\r\n    <MenuItem\r\n      style={style}\r\n      className={`token-item-${key}`}\r\n      onClick={() => (isSelected ? null : onSelect())}\r\n      disabled={isSelected}\r\n      selected={otherSelected}\r\n    >\r\n      <CurrencyLogo currency={currency} size=\"24px\" />\r\n      <Column>\r\n        <Text title={currency.name}>{currency.symbol}</Text>\r\n        <FadedSpan>\r\n          {!isOnSelectedList && customAdded && !(currency instanceof WrappedTokenInfo) ? (\r\n            <Text>\r\n              Added by user\r\n              <LinkStyledButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation()\r\n                  if (chainId && currency instanceof Token) removeToken(chainId, currency.address)\r\n                }}\r\n              >\r\n                (Remove)\r\n              </LinkStyledButton>\r\n            </Text>\r\n          ) : null}\r\n          {!isOnSelectedList && !customAdded && !(currency instanceof WrappedTokenInfo) ? (\r\n            <Text>\r\n              Found by address\r\n              <LinkStyledButton\r\n                onClick={(event) => {\r\n                  event.stopPropagation()\r\n                  if (currency instanceof Token) addToken(currency)\r\n                }}\r\n              >\r\n                (Add)\r\n              </LinkStyledButton>\r\n            </Text>\r\n          ) : null}\r\n        </FadedSpan>\r\n      </Column>\r\n      <TokenTags currency={currency} />\r\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\r\n        {balance ? <Balance balance={balance} /> : account ? <Loader /> : null}\r\n      </RowFixed>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nexport default function CurrencyList({\r\n  height,\r\n  currencies,\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherCurrency,\r\n  fixedListRef,\r\n  showETH,\r\n}: {\r\n  height: number\r\n  currencies: Currency[]\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherCurrency?: Currency | null\r\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\r\n  showETH: boolean\r\n}) {\r\n  const itemData = useMemo(() => (showETH ? [Currency.ETHER, ...currencies] : [...currencies]), [currencies, showETH])\r\n\r\n  const Row = useCallback(\r\n    ({ data, index, style }) => {\r\n      const currency: Currency = data[index]\r\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\r\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\r\n      const handleSelect = () => onCurrencySelect(currency)\r\n      return (\r\n        <CurrencyRow\r\n          style={style}\r\n          currency={currency}\r\n          isSelected={isSelected}\r\n          onSelect={handleSelect}\r\n          otherSelected={otherSelected}\r\n        />\r\n      )\r\n    },\r\n    [onCurrencySelect, otherCurrency, selectedCurrency],\r\n  )\r\n\r\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\r\n\r\n  return (\r\n    <FixedSizeList\r\n      height={height}\r\n      ref={fixedListRef as any}\r\n      width=\"100%\"\r\n      itemData={itemData}\r\n      itemCount={itemData.length}\r\n      itemSize={56}\r\n      itemKey={itemKey}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  )\r\n}\r\n","import { Token } from 'archerswap-sdk'\r\nimport { isAddress } from '../../utils'\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n  if (search.length === 0) return tokens\r\n\r\n  const searchingAddress = isAddress(search)\r\n\r\n  if (searchingAddress) {\r\n    return tokens.filter((token) => token.address === searchingAddress)\r\n  }\r\n\r\n  const lowerSearchParts = search\r\n    .toLowerCase()\r\n    .split(/\\s+/)\r\n    .filter((s) => s.length > 0)\r\n\r\n  if (lowerSearchParts.length === 0) {\r\n    return tokens\r\n  }\r\n\r\n  const matchesSearch = (s: string): boolean => {\r\n    const sParts = s\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((str) => str.length > 0)\r\n\r\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n  }\r\n\r\n  return tokens.filter((token) => {\r\n    const { symbol, name } = token\r\n\r\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n  })\r\n}\r\n\r\nexport default filterTokens\r\n","import React from 'react'\r\nimport { Text } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport { RowFixed } from '../Row'\r\n\r\nexport const FilterWrapper = styled(RowFixed)`\r\n  padding: 8px;\r\n  background-color: ${({ theme }) => theme.colors.card};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  border-radius: 8px;\r\n  user-select: none;\r\n  & > * {\r\n    user-select: none;\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport default function SortButton({\r\n  toggleSortOrder,\r\n  ascending,\r\n}: {\r\n  toggleSortOrder: () => void\r\n  ascending: boolean\r\n}) {\r\n  return (\r\n    <FilterWrapper onClick={toggleSortOrder}>\r\n      <Text fontSize=\"14px\">{ascending ? '↑' : '↓'}</Text>\r\n    </FilterWrapper>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nexport function useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n","import { Currency, ETHER, Token } from 'archerswap-sdk'\r\nimport React, { KeyboardEvent, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\r\nimport { Text, CloseIcon } from 'archerswap-uikit'\r\nimport { useSelector } from 'react-redux'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { ThemeContext } from 'styled-components'\r\nimport AutoSizer from 'react-virtualized-auto-sizer'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { AppState } from '../../state'\r\nimport { useAllTokens, useToken } from '../../hooks/Tokens'\r\nimport { useSelectedListInfo } from '../../state/lists/hooks'\r\nimport { LinkStyledButton } from '../Shared'\r\nimport { isAddress } from '../../utils'\r\nimport Card from '../Card'\r\nimport Column from '../Column'\r\nimport ListLogo from '../ListLogo'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport Row, { RowBetween } from '../Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens } from './filtering'\r\nimport SortButton from './SortButton'\r\nimport { useTokenComparator } from './sorting'\r\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\r\n\r\ninterface CurrencySearchProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  onChangeList: () => void\r\n}\r\n\r\nexport function CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  onDismiss,\r\n  isOpen,\r\n  onChangeList,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const fixedList = useRef<FixedSizeList>()\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\r\n  const allTokens = useAllTokens()\r\n\r\n  // if they input an address, use it\r\n  const isAddressSearch = isAddress(searchQuery)\r\n  const searchToken = useToken(searchQuery)\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n    const s = searchQuery.toLowerCase().trim()\r\n    return s === '' || s === 'c' || s === 'co' || s === 'cor' || s === 'core'\r\n  }, [searchQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    if (isAddressSearch) return searchToken ? [searchToken] : []\r\n    return filterTokens(Object.values(allTokens), searchQuery)\r\n  }, [isAddressSearch, searchToken, allTokens, searchQuery])\r\n\r\n  const filteredSortedTokens: Token[] = useMemo(() => {\r\n    if (searchToken) return [searchToken]\r\n    const sorted = filteredTokens.sort(tokenComparator)\r\n    const symbolMatch = searchQuery\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s) => s.length > 0)\r\n    if (symbolMatch.length > 1) return sorted\r\n\r\n    return [\r\n      ...(searchToken ? [searchToken] : []),\r\n      // sort any exact symbol matches first\r\n      ...sorted.filter((token) => token.symbol?.toLowerCase() === symbolMatch[0]),\r\n      ...sorted.filter((token) => token.symbol?.toLowerCase() !== symbolMatch[0]),\r\n    ]\r\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n      if (audioPlay) {\r\n        const audio = document.getElementById('bgMusic') as HTMLAudioElement\r\n        if (audio) {\r\n          audio.play()\r\n        }\r\n      }\r\n    },\r\n    [onDismiss, onCurrencySelect, audioPlay],\r\n  )\r\n\r\n  // clear the input on open\r\n  useEffect(() => {\r\n    if (isOpen) setSearchQuery('')\r\n  }, [isOpen])\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = searchQuery.toLowerCase().trim()\r\n        if (s === 'core') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === searchQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, searchQuery],\r\n  )\r\n\r\n  const selectedListInfo = useSelectedListInfo()\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Column style={{ width: '100%', flex: '1 1' }}>\r\n      <PaddedColumn gap=\"14px\">\r\n        <RowBetween>\r\n          <Text>\r\n            {t('Select a token')}\r\n            <QuestionHelper\r\n              text={TranslateString(\r\n                128,\r\n                'Find a token by searching for its name or symbol or by pasting its address below.',\r\n              )}\r\n            />\r\n          </Text>\r\n          <CloseIcon onClick={onDismiss} />\r\n        </RowBetween>\r\n        <SearchInput\r\n          type=\"text\"\r\n          id=\"token-search-input\"\r\n          placeholder={t('Search name or paste address')}\r\n          value={searchQuery}\r\n          ref={inputRef as RefObject<HTMLInputElement>}\r\n          onChange={handleInput}\r\n          onKeyDown={handleEnter}\r\n        />\r\n        {showCommonBases && (\r\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n        )}\r\n        <RowBetween>\r\n          <Text fontSize=\"14px\">{t('Token name')}</Text>\r\n          <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder((iso) => !iso)} />\r\n        </RowBetween>\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <div style={{ flex: '1' }}>\r\n        <AutoSizer disableWidth>\r\n          {({ height }) => (\r\n            <CurrencyList\r\n              height={height}\r\n              showETH={showETH}\r\n              currencies={filteredSortedTokens}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n            />\r\n          )}\r\n        </AutoSizer>\r\n      </div>\r\n\r\n      {null && (\r\n        <>\r\n          <Separator />\r\n          <Card>\r\n            <RowBetween>\r\n              {selectedListInfo.current ? (\r\n                <Row>\r\n                  {selectedListInfo.current.logoURI ? (\r\n                    <ListLogo\r\n                      style={{ marginRight: 12 }}\r\n                      logoURI={selectedListInfo.current.logoURI}\r\n                      alt={`${selectedListInfo.current.name} list logo`}\r\n                    />\r\n                  ) : null}\r\n                  <Text id=\"currency-search-selected-list-name\">{selectedListInfo.current.name}</Text>\r\n                </Row>\r\n              ) : null}\r\n              <LinkStyledButton\r\n                style={{ fontWeight: 500, color: theme.colors.textSubtle, fontSize: 16 }}\r\n                onClick={onChangeList}\r\n                id=\"currency-search-change-list-button\"\r\n              >\r\n                {selectedListInfo.current ? TranslateString(180, 'Change') : TranslateString(1152, 'Select a list')}\r\n              </LinkStyledButton>\r\n            </RowBetween>\r\n          </Card>\r\n        </>\r\n      )}\r\n    </Column>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch\r\n","import { RefObject, useEffect, useRef } from 'react'\r\n\r\nexport function useOnClickOutside<T extends HTMLElement>(\r\n  node: RefObject<T | undefined>,\r\n  handler: undefined | (() => void),\r\n) {\r\n  const handlerRef = useRef<undefined | (() => void)>(handler)\r\n  useEffect(() => {\r\n    handlerRef.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      if (node.current?.contains(e.target as Node) ?? false) {\r\n        return\r\n      }\r\n      if (handlerRef.current) handlerRef.current()\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [node])\r\n}\r\n\r\nexport default useOnClickOutside\r\n","import React, { memo, useCallback, useMemo, useRef, useState } from 'react'\r\nimport { ArrowLeft } from 'react-feather'\r\nimport { usePopper } from 'react-popper'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Text, ChevronDownIcon, CloseIcon } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\nimport useToggle from '../../hooks/useToggle'\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, selectList } from '../../state/lists/actions'\r\nimport { useSelectedListUrl } from '../../state/lists/hooks'\r\nimport { ExternalLink, LinkStyledButton } from '../Shared'\r\nimport listVersionLabel from '../../utils/listVersionLabel'\r\nimport { parseENSAddress } from '../../utils/parseENSAddress'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\nimport Column from '../Column'\r\nimport ListLogo from '../ListLogo'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport Row, { RowBetween } from '../Row'\r\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds'\r\n\r\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\r\n  padding: 0;\r\n  font-size: 1rem;\r\n  opacity: ${({ disabled }) => (disabled ? '0.4' : '1')};\r\n`\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 100;\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n  background: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 0.5rem;\r\n  padding: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-gap: 8px;\r\n  font-size: 1rem;\r\n  text-align: left;\r\n`\r\n\r\nconst StyledMenu = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border: none;\r\n`\r\n\r\nconst StyledListUrlText = styled.div`\r\n  max-width: 160px;\r\n  opacity: 0.6;\r\n  margin-right: 0.5rem;\r\n  font-size: 14px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nfunction ListOrigin({ listUrl }: { listUrl: string }) {\r\n  const ensName = useMemo(() => parseENSAddress(listUrl)?.ensName, [listUrl])\r\n  const host = useMemo(() => {\r\n    if (ensName) return undefined\r\n    const lowerListUrl = listUrl.toLowerCase()\r\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\r\n      return listUrl\r\n    }\r\n    try {\r\n      const url = new URL(listUrl)\r\n      return url.host\r\n    } catch (error) {\r\n      return undefined\r\n    }\r\n  }, [listUrl, ensName])\r\n  return <>{ensName ?? host}</>\r\n}\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl, onBack }: { listUrl: string; onBack: () => void }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const selectedListUrl = useSelectedListUrl()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isSelected = listUrl === selectedListUrl\r\n\r\n  const [open, toggle] = useToggle(false)\r\n  const node = useRef<HTMLDivElement>()\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>()\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>()\r\n\r\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement: 'auto',\r\n    strategy: 'fixed',\r\n    modifiers: [{ name: 'offset', options: { offset: [8, 8] } }],\r\n  })\r\n\r\n  useOnClickOutside(node, open ? toggle : undefined)\r\n\r\n  const selectThisList = useCallback(() => {\r\n    if (isSelected) return\r\n\r\n    dispatch(selectList(listUrl))\r\n    onBack()\r\n  }, [dispatch, isSelected, listUrl, onBack])\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n  const TranslateString = useI18n()\r\n  if (!list) return null\r\n\r\n  return (\r\n    <Row key={listUrl} align=\"center\" padding=\"16px\" id={listUrlRowHTMLId(listUrl)}>\r\n      {list.logoURI ? (\r\n        <ListLogo style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text bold={isSelected} fontSize=\"16px\" style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>\r\n            {list.name}\r\n          </Text>\r\n        </Row>\r\n        <Row\r\n          style={{\r\n            marginTop: '4px',\r\n          }}\r\n        >\r\n          <StyledListUrlText title={listUrl}>\r\n            <ListOrigin listUrl={listUrl} />\r\n          </StyledListUrlText>\r\n        </Row>\r\n      </Column>\r\n      <StyledMenu ref={node as any}>\r\n        <div style={{ display: 'inline-block' }} ref={setReferenceElement}>\r\n          <Button\r\n            style={{\r\n              width: '32px',\r\n              marginRight: '8px',\r\n            }}\r\n            onClick={toggle}\r\n            variant=\"secondary\"\r\n          >\r\n            <ChevronDownIcon />\r\n          </Button>\r\n        </div>\r\n\r\n        {open && (\r\n          <PopoverContainer show ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n            <div>{list && listVersionLabel(list.version)}</div>\r\n            <SeparatorDark />\r\n            <ExternalLink href={`https://tokenlists.org/token-list?url=${listUrl}`}>\r\n              {TranslateString(1206, 'View list')}\r\n            </ExternalLink>\r\n            <UnpaddedLinkStyledButton onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n              Remove list\r\n            </UnpaddedLinkStyledButton>\r\n            {pending && (\r\n              <UnpaddedLinkStyledButton onClick={handleAcceptListUpdate}>Update list</UnpaddedLinkStyledButton>\r\n            )}\r\n          </PopoverContainer>\r\n        )}\r\n      </StyledMenu>\r\n      {isSelected ? (\r\n        <Button disabled style={{ width: '5rem', minWidth: '5rem' }}>\r\n          Selected\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            className=\"select-button\"\r\n            style={{\r\n              width: '5rem',\r\n              minWidth: '4.5rem',\r\n            }}\r\n            onClick={selectThisList}\r\n          >\r\n            Select\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Row>\r\n  )\r\n})\r\n\r\nconst ListContainer = styled.div`\r\n  flex: 1;\r\n  overflow: auto;\r\n`\r\n\r\nexport function ListSelect({ onDismiss, onBack }: { onDismiss: () => void; onBack: () => void }) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const adding = Boolean(lists[listUrlInput]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const handleInput = useCallback((e) => {\r\n    setListUrlInput(e.target.value)\r\n    setAddError(null)\r\n  }, [])\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listUrlInput)\r\n      .then(() => {\r\n        setListUrlInput('')\r\n      })\r\n      .catch((error) => {\r\n        setAddError(error.message)\r\n        dispatch(removeList(listUrlInput))\r\n      })\r\n  }, [adding, dispatch, fetchList, listUrlInput])\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const handleEnterKey = useCallback(\r\n    (e) => {\r\n      if (validUrl && e.key === 'Enter') {\r\n        handleAddList()\r\n      }\r\n    },\r\n    [handleAddList, validUrl],\r\n  )\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter((listUrl) => {\r\n        return Boolean(lists[listUrl].current)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists])\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <Column style={{ width: '100%', flex: '1 1' }}>\r\n      <PaddedColumn>\r\n        <RowBetween>\r\n          <div>\r\n            <ArrowLeft style={{ cursor: 'pointer' }} onClick={onBack} />\r\n          </div>\r\n          <Text fontSize=\"20px\">{TranslateString(1208, 'Manage Lists')}</Text>\r\n          <CloseIcon onClick={onDismiss} />\r\n        </RowBetween>\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <PaddedColumn gap=\"14px\">\r\n        <Text bold>\r\n          Add a list{' '}\r\n          <QuestionHelper\r\n            text={TranslateString(\r\n              999,\r\n              'Token lists are an open specification for lists of BEP20 tokens. You can use any token list by entering its URL below. Beware that third party token lists can contain fake or malicious BEP20 tokens.',\r\n            )}\r\n          />\r\n        </Text>\r\n        <Row>\r\n          <SearchInput\r\n            type=\"text\"\r\n            id=\"list-add-input\"\r\n            placeholder=\"https:// or ipfs:// or ENS name\"\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n            onKeyDown={handleEnterKey}\r\n            style={{ height: '2.75rem', borderRadius: 12, padding: '12px' }}\r\n          />\r\n          <Button onClick={handleAddList} style={{ maxWidth: '4em', marginLeft: '1em' }} disabled={!validUrl}>\r\n            Add\r\n          </Button>\r\n        </Row>\r\n        {addError ? (\r\n          <Text color=\"failure\" title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n            {addError}\r\n          </Text>\r\n        ) : null}\r\n      </PaddedColumn>\r\n\r\n      <Separator />\r\n\r\n      <ListContainer>\r\n        {sortedLists.map((listUrl) => (\r\n          <ListRow key={listUrl} listUrl={listUrl} onBack={onBack} />\r\n        ))}\r\n      </ListContainer>\r\n      <Separator />\r\n\r\n      <div style={{ padding: '16px', textAlign: 'center' }}>\r\n        <ExternalLink href=\"https://tokenlists.org\">Browse lists</ExternalLink>\r\n      </div>\r\n    </Column>\r\n  )\r\n}\r\n\r\nexport default ListSelect\r\n","import { useCallback, useState } from 'react'\r\n\r\nexport default function useToggle(initialState = false): [boolean, () => void] {\r\n  const [state, setState] = useState(initialState)\r\n  const toggle = useCallback(() => setState((prev) => !prev), [])\r\n  return [state, toggle]\r\n}\r\n","import { Version } from '@uniswap/token-lists'\r\n\r\nexport default function listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n","import { Currency } from 'archerswap-sdk'\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport useLast from '../../hooks/useLast'\r\nimport { useSelectedListUrl } from '../../state/lists/hooks'\r\nimport Modal from '../Modal'\r\nimport { CurrencySearch } from './CurrencySearch'\r\nimport { ListSelect } from './ListSelect'\r\n\r\ninterface CurrencySearchModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  // eslint-disable-next-line react/no-unused-prop-types\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  isOpen,\r\n  onDismiss,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n}: CurrencySearchModalProps) {\r\n  const [listView, setListView] = useState<boolean>(false)\r\n  const lastOpen = useLast(isOpen)\r\n\r\n  useEffect(() => {\r\n    if (isOpen && !lastOpen) {\r\n      setListView(false)\r\n    }\r\n  }, [isOpen, lastOpen])\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      onDismiss()\r\n    },\r\n    [onDismiss, onCurrencySelect],\r\n  )\r\n\r\n  const handleClickChangeList = useCallback(() => {\r\n    setListView(true)\r\n  }, [])\r\n  const handleClickBack = useCallback(() => {\r\n    setListView(false)\r\n  }, [])\r\n\r\n  const selectedListUrl = useSelectedListUrl()\r\n  const noListSelected = !selectedListUrl\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\r\n      {listView ? (\r\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\r\n      ) : noListSelected ? (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      ) : (\r\n        <CurrencySearch\r\n          isOpen={isOpen}\r\n          onDismiss={onDismiss}\r\n          onCurrencySelect={handleCurrencySelect}\r\n          onChangeList={handleClickChangeList}\r\n          selectedCurrency={selectedCurrency}\r\n          otherSelectedCurrency={otherSelectedCurrency}\r\n          showCommonBases={false}\r\n        />\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n","import { isAddress } from '../utils'\r\nimport useENSAddress from './useENSAddress'\r\nimport useENSName from './useENSName'\r\n\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(\r\n  nameOrAddress?: string | null,\r\n): { loading: boolean; address: string | null; name: string | null } {\r\n  const validated = isAddress(nameOrAddress)\r\n  const reverseLookup = useENSName(validated || undefined)\r\n  const lookup = useENSAddress(nameOrAddress)\r\n\r\n  return {\r\n    loading: reverseLookup.loading || lookup.loading,\r\n    address: validated || lookup.address,\r\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport { isAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\r\nimport useDebounce from './useDebounce'\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedAddress])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\r\n\r\n  const changed = debouncedAddress !== address\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport isZero from '../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\r\nimport useDebounce from './useDebounce'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\r\n  const debouncedName = useDebounce(ensName, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedName) return [undefined]\r\n    try {\r\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\r\n\r\n  const changed = debouncedName !== ensName\r\n  return {\r\n    address: changed ? null : addr.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || addr.loading,\r\n  }\r\n}\r\n","import { Currency, CurrencyAmount, Pair, Token, Trade } from 'archerswap-sdk'\r\nimport flatMap from 'lodash.flatmap'\r\nimport { useMemo } from 'react'\r\n\r\nimport { BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../constants'\r\nimport { PairState, usePairs } from '../data/Reserves'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nimport { useActiveWeb3React } from './index'\r\n\r\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // Base tokens for building intermediary trading routes\r\n  const bases: Token[] = useMemo(() => (chainId ? BASES_TO_CHECK_TRADES_AGAINST[chainId] : []), [chainId])\r\n\r\n  // All pairs from base tokens\r\n  const basePairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])).filter(\r\n        ([t0, t1]) => t0.address !== t1.address,\r\n      ),\r\n    [bases],\r\n  )\r\n\r\n  const [tokenA, tokenB] = chainId\r\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n    : [undefined, undefined]\r\n\r\n  const allPairCombinations: [Token, Token][] = useMemo(\r\n    () =>\r\n      tokenA && tokenB\r\n        ? [\r\n            // the direct pair\r\n            [tokenA, tokenB],\r\n            // token A against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\r\n            // token B against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\r\n            // each base against all bases\r\n            ...basePairs,\r\n          ]\r\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([t0, t1]) => t0.address !== t1.address)\r\n            // This filter will remove all the pairs that are not supported by the CUSTOM_BASES settings\r\n            // This option is currently not used on Pancake swap\r\n            .filter(([t0, t1]) => {\r\n              if (!chainId) return true\r\n              const customBases = CUSTOM_BASES[chainId]\r\n              if (!customBases) return true\r\n\r\n              const customBasesA: Token[] | undefined = customBases[t0.address]\r\n              const customBasesB: Token[] | undefined = customBases[t1.address]\r\n\r\n              if (!customBasesA && !customBasesB) return true\r\n              if (customBasesA && !customBasesA.find((base) => t1.equals(base))) return false\r\n              if (customBasesB && !customBasesB.find((base) => t0.equals(base))) return false\r\n\r\n              return true\r\n            })\r\n        : [],\r\n    [tokenA, tokenB, bases, basePairs, chainId],\r\n  )\r\n\r\n  const allPairs = usePairs(allPairCombinations)\r\n\r\n  // only pass along valid pairs, non-duplicated pairs\r\n  return useMemo(\r\n    () =>\r\n      Object.values(\r\n        allPairs\r\n          // filter out invalid pairs\r\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n          // filter out duplicated pairs\r\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\r\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\r\n            return memo\r\n          }, {}),\r\n      ),\r\n    [allPairs],\r\n  )\r\n}\r\n\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\r\n\r\n  return useMemo(() => {\r\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n      return (\r\n        Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 3, maxNumResults: 1 })[0] ?? null\r\n      )\r\n    }\r\n    return null\r\n  }, [allowedPairs, currencyAmountIn, currencyOut])\r\n}\r\n\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\r\n\r\n  return useMemo(() => {\r\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n      return (\r\n        Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 3, maxNumResults: 1 })[0] ??\r\n        null\r\n      )\r\n    }\r\n    return null\r\n  }, [allowedPairs, currencyIn, currencyAmountOut])\r\n}\r\n","import { parseUnits } from '@ethersproject/units'\r\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from 'archerswap-sdk'\r\nimport { ParsedQs } from 'qs'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useENS from '../../hooks/useENS'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades'\r\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\r\nimport { isAddress } from '../../utils'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\nimport { SwapState } from './reducer'\r\n\r\nimport { useUserSlippageTolerance } from '../user/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices'\r\n\r\nexport function useSwapState(): AppState['swap'] {\r\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\r\n}\r\n\r\nexport function useSwapActionHandlers(): {\r\n  onCurrencySelection: (field: Field, currency: Currency) => void\r\n  onSwitchTokens: () => void\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n  onChangeRecipient: (recipient: string | null) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const onCurrencySelection = useCallback(\r\n    (field: Field, currency: Currency) => {\r\n      dispatch(\r\n        selectCurrency({\r\n          field,\r\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'CORE' : '',\r\n        }),\r\n      )\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onSwitchTokens = useCallback(() => {\r\n    dispatch(switchCurrencies())\r\n  }, [dispatch])\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onChangeRecipient = useCallback(\r\n    (recipient: string | null) => {\r\n      dispatch(setRecipient({ recipient }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return {\r\n    onSwitchTokens,\r\n    onCurrencySelection,\r\n    onUserInput,\r\n    onChangeRecipient,\r\n  }\r\n}\r\n\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  if (!value || !currency) {\r\n    return undefined\r\n  }\r\n  try {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\r\n    if (typedValueParsed !== '0') {\r\n      return currency instanceof Token\r\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\r\n    }\r\n  } catch (error) {\r\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n    console.info(`Failed to parse input amount: \"${value}\"`, error)\r\n  }\r\n  // necessary for all paths to return a value\r\n  return undefined\r\n}\r\n\r\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\r\n  '0x0eb58E5c8aA63314ff5547289185cC4583DfCBD5', // v2 factory\r\n  '0xBe65b8f75B9F20f4C522e0067a3887FADa714800', // v2 router 01\r\n  '0x819801d9048EC5D1DEb04E72b3B2dA4bd8E5ca9e', // v2 router 02\r\n]\r\n\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\r\n  return (\r\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\r\n  )\r\n}\r\n\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo(): {\r\n  currencies: { [field in Field]?: Currency }\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmount: CurrencyAmount | undefined\r\n  v2Trade: Trade | undefined\r\n  inputError?: string\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    recipient,\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId || '0x1a639e150d2210a4be4a5f0857a9151b241e7ae4')\r\n  const outputCurrency = useCurrency(outputCurrencyId || '0x1a639e150d2210a4be4a5f0857a9151b241e7ae4')\r\n  const recipientLookup = useENS(recipient ?? undefined)\r\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\r\n\r\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\r\n    inputCurrency ?? undefined,\r\n    outputCurrency ?? undefined,\r\n  ])\r\n\r\n  const isExactIn: boolean = independentField === Field.INPUT\r\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\r\n\r\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\r\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\r\n\r\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\r\n\r\n  const currencyBalances = {\r\n    [Field.INPUT]: relevantTokenBalances[0],\r\n    [Field.OUTPUT]: relevantTokenBalances[1],\r\n  }\r\n\r\n  const currencies: { [field in Field]?: Currency } = {\r\n    [Field.INPUT]: inputCurrency ?? undefined,\r\n    [Field.OUTPUT]: outputCurrency ?? undefined,\r\n  }\r\n\r\n  let inputError: string | undefined\r\n  if (!account) {\r\n    inputError = t('Connect Wallet')\r\n  }\r\n\r\n  if (!parsedAmount) {\r\n    inputError = inputError ?? t('Enter an amount')\r\n  }\r\n\r\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n    inputError = inputError ?? t('Select a token')\r\n  }\r\n\r\n  const formattedTo = isAddress(to)\r\n  if (!to || !formattedTo) {\r\n    inputError = inputError ?? 'Enter a recipient'\r\n  } else if (\r\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\r\n  ) {\r\n    inputError = inputError ?? 'Invalid recipient'\r\n  }\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\r\n\r\n  // compare input balance to max input based on version\r\n  const [balanceIn, amountIn] = [\r\n    currencyBalances[Field.INPUT],\r\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n  ]\r\n\r\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n    inputError = `Insufficient ${amountIn.currency.symbol} balance`\r\n  }\r\n\r\n  return {\r\n    currencies,\r\n    currencyBalances,\r\n    parsedAmount,\r\n    v2Trade: v2Trade ?? undefined,\r\n    inputError,\r\n  }\r\n}\r\n\r\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\r\n  if (typeof urlParam === 'string') {\r\n    const valid = isAddress(urlParam)\r\n    if (valid) return valid\r\n    if (urlParam.toUpperCase() === 'CORE') return 'CORE'\r\n    if (valid === false) return 'CORE'\r\n  }\r\n  return 'CORE' ?? ''\r\n}\r\n\r\nfunction parseTokenAmountURLParameter(urlParam: any): string {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\r\n}\r\n\r\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\r\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\r\n}\r\n\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nfunction validatedRecipient(recipient: any): string | null {\r\n  if (typeof recipient !== 'string') return null\r\n  const address = isAddress(recipient)\r\n  if (address) return address\r\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\r\n  if (ADDRESS_REGEX.test(recipient)) return recipient\r\n  return null\r\n}\r\n\r\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\r\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\r\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\r\n  if (inputCurrency === outputCurrency) {\r\n    if (typeof parsedQs.outputCurrency === 'string') {\r\n      inputCurrency = ''\r\n    } else {\r\n      outputCurrency = ''\r\n    }\r\n  }\r\n\r\n  const recipient = validatedRecipient(parsedQs.recipient)\r\n\r\n  return {\r\n    [Field.INPUT]: {\r\n      currencyId: inputCurrency,\r\n    },\r\n    [Field.OUTPUT]: {\r\n      currencyId: outputCurrency,\r\n    },\r\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n    recipient,\r\n  }\r\n}\r\n\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch():\r\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\r\n  | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const parsedQs = useParsedQueryString()\r\n  const [result, setResult] = useState<\r\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (!chainId) return\r\n    const parsed = queryParametersToSwapState(parsedQs)\r\n\r\n    dispatch(\r\n      replaceSwapState({\r\n        typedValue: parsed.typedValue,\r\n        field: parsed.independentField,\r\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n        recipient: parsed.recipient,\r\n      }),\r\n    )\r\n\r\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, chainId])\r\n\r\n  return result\r\n}\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button, ButtonProps, useWalletModal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst UnlockButton: React.FC<ButtonProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {t('Connect Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, IconButton, CloseIcon } from 'archerswap-uikit'\r\nimport { AutoColumn, ColumnCenter } from '../Column'\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  overflow-y: auto;\r\n`\r\nexport const Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nexport const ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 40px 0;\r\n`\r\n\r\nexport const BottomSection = styled(Section)`\r\n  background-color: ${({ theme }) => theme.colors.card};\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n`\r\n\r\n/**\r\n * TODO: Remove this when modal system from the UI Kit is implemented\r\n */\r\nconst StyledContentHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  & > ${Heading} {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\ntype ContentHeaderProps = {\r\n  children: ReactNode\r\n  onDismiss: () => void\r\n}\r\n\r\nexport const ContentHeader = ({ children, onDismiss }: ContentHeaderProps) => (\r\n  <StyledContentHeader>\r\n    <Heading>{children}</Heading>\r\n    <IconButton onClick={onDismiss} variant=\"text\">\r\n      <CloseIcon color=\"primary\" />\r\n    </IconButton>\r\n  </StyledContentHeader>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Spinner } from '../Shared'\r\nimport { AutoColumn } from '../Column'\r\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\r\n\r\ntype ConfirmationPendingContentProps = { onDismiss: () => void; pendingText: string }\r\n\r\nconst CustomLightSpinner = styled(Spinner)<{ size: string }>`\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n`\r\n\r\nconst ConfirmationPendingContent = ({ onDismiss, pendingText }: ConfirmationPendingContentProps) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>{t('Waiting for confirmation')}</ContentHeader>\r\n        <ConfirmedIcon>\r\n          <CustomLightSpinner src=\"/images/blue-loader.svg\" alt=\"loader\" size=\"90px\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <AutoColumn gap=\"12px\" justify=\"center\">\r\n            <Text fontSize=\"14px\">\r\n              <strong>{pendingText}</strong>\r\n            </Text>\r\n          </AutoColumn>\r\n          <Text fontSize=\"14px\">{t('Confirm this transaction in your wallet')}</Text>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ConfirmationPendingContent\r\n","import { ChainId } from 'archerswap-sdk'\r\nimport React, { useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Button, LinkExternal } from 'archerswap-uikit'\r\nimport { ArrowUpCircle } from 'react-feather'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { AutoColumn } from '../Column'\r\nimport { getSnowtraceLink } from '../../utils'\r\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\r\n\r\ntype TransactionSubmittedContentProps = {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n}\r\n\r\nconst TransactionSubmittedContent = ({ onDismiss, chainId, hash }: TransactionSubmittedContentProps) => {\r\n  const theme = useContext(ThemeContext)\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>{t('Transaction submitted')}</ContentHeader>\r\n        <ConfirmedIcon>\r\n          <ArrowUpCircle strokeWidth={0.5} size={97} color={theme.colors.primary} />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"8px\" justify=\"center\">\r\n          {chainId && hash && (\r\n            <LinkExternal href={getSnowtraceLink(chainId, hash, 'transaction')}>View on Core Scan</LinkExternal>\r\n          )}\r\n          <Button onClick={onDismiss} mt=\"20px\">\r\n            {t('Close')}\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TransactionSubmittedContent\r\n","import React from 'react'\r\nimport Modal from '../Modal'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport ConfirmationPendingContent from './ConfirmationPendingContent'\r\nimport TransactionSubmittedContent from './TransactionSubmittedContent'\r\n\r\ninterface ConfirmationModalProps {\r\n  isOpen: boolean\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n}\r\n\r\nconst TransactionConfirmationModal = ({\r\n  isOpen,\r\n  onDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content,\r\n}: ConfirmationModalProps) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  if (!chainId) return null\r\n\r\n  // confirmation screen\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent chainId={chainId} hash={hash} onDismiss={onDismiss} />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n","import React from 'react'\r\nimport { Wrapper, Section, BottomSection, ContentHeader } from './helpers'\r\n\r\ntype ConfirmationModalContentProps = {\r\n  title: string\r\n  onDismiss: () => void\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}\r\n\r\nconst ConfirmationModalContent = ({ title, bottomContent, onDismiss, topContent }: ConfirmationModalContentProps) => {\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>{title}</ContentHeader>\r\n        {topContent()}\r\n      </Section>\r\n      <BottomSection gap=\"12px\">{bottomContent()}</BottomSection>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ConfirmationModalContent\r\n","import React, { useContext } from 'react'\r\nimport { ThemeContext } from 'styled-components'\r\nimport { Button, Text } from 'archerswap-uikit'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { AutoColumn } from '../Column'\r\nimport { Wrapper, Section, BottomSection, ContentHeader } from './helpers'\r\n\r\ntype TransactionErrorContentProps = { message: string; onDismiss: () => void }\r\n\r\nconst TransactionErrorContent = ({ message, onDismiss }: TransactionErrorContentProps) => {\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ContentHeader onDismiss={onDismiss}>Error</ContentHeader>\r\n        <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\r\n          <AlertTriangle color={theme.colors.failure} style={{ strokeWidth: 1.5 }} size={64} />\r\n          <Text fontSize=\"16px\" color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n            {message}\r\n          </Text>\r\n        </AutoColumn>\r\n      </Section>\r\n      <BottomSection gap=\"12px\">\r\n        <Button onClick={onDismiss}>Dismiss</Button>\r\n      </BottomSection>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TransactionErrorContent\r\n","import TransactionConfirmationModal from './TransactionConfirmationModal'\r\n\r\nexport { default as ConfirmationModalContent } from './ConfirmationModalContent'\r\nexport { default as ConfirmationPendingContent } from './ConfirmationPendingContent'\r\nexport { default as TransactionErrorContent } from './TransactionErrorContent'\r\nexport { default as TransactionSubmittedContent } from './TransactionSubmittedContent'\r\n\r\nexport default TransactionConfirmationModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={(event) => {\r\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title=\"Token Amount\"\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import React, { useState, useCallback, useMemo } from 'react'\r\nimport { Currency, Pair, CurrencyAmount, Percent } from 'archerswap-sdk'\r\nimport { Button, ChevronDownIcon, Text, Svg } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport CurrencyLogo, { getTokenLogoURLForMetamask } from '../CurrencyLogo'\r\nimport DoubleCurrencyLogo from '../DoubleLogo'\r\nimport { RowBetween } from '../Row'\r\nimport { Input as NumericalInput } from '../NumericalInput'\r\nimport { useActiveWeb3React } from '../../hooks'\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\r\n`\r\nconst PercentInputRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  justify-content: right;\r\n  padding: 0 1rem 0.75rem 1rem;\r\n  & div {\r\n    font-size: 15px;\r\n    margin-left: 6px;\r\n  }\r\n`\r\nconst PercentButton = styled(Text).attrs({ role: 'button' })<{ selected?: boolean }>`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ selected, theme }) => (selected ? '#EAAA08' : theme.colors.primary)};\r\n`\r\nconst CurrencySelect = styled.button<{ selected: boolean }>`\r\n  align-items: center;\r\n  height: 34px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  background-color: transparent;\r\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\r\n  border-radius: 12px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  border: none;\r\n  padding: 0 0.5rem;\r\n  :focus,\r\n  :hover {\r\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\r\n  }\r\n`\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n  span:hover {\r\n    cursor: pointer;\r\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\r\n  }\r\n`\r\nconst Aligner = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n`\r\nconst Container = styled.div<{ hideInput: boolean }>`\r\n  border-radius: 16px;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n`\r\nconst Action = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    height: 18px;\r\n  }\r\n`\r\n\r\nconst StyleButton = styled(Text).attrs({ role: 'button' })`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\r\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'block' : 'none')};\r\n  width: 60px;\r\n  position: absolute;\r\n  bottom: -22px;\r\n  right: 0;\r\n  left: 0;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.contrast};\r\n  color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: 16px;\r\n  opacity: 0.7;\r\n`\r\n\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  maxAmount?: CurrencyAmount\r\n  label?: string\r\n  onCurrencySelect?: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  disableCurrencySelect?: boolean\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  hideInput?: boolean\r\n  otherCurrency?: Currency | null\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  maxAmount,\r\n  label,\r\n  onCurrencySelect,\r\n  currency,\r\n  disableCurrencySelect = false,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  hideInput = false,\r\n  otherCurrency,\r\n  id,\r\n  showCommonBases,\r\n}: CurrencyInputPanelProps) {\r\n  const [modalOpen, setModalOpen] = useState(false)\r\n  const { account } = useActiveWeb3React()\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const { t } = useTranslation()\r\n  const translatedLabel = label || t('Input')\r\n  const handleDismissSearch = useCallback(() => {\r\n    setModalOpen(false)\r\n  }, [setModalOpen])\r\n\r\n  const allTokens = useAllTokens()\r\n  const tokenAddress = useMemo(() => {\r\n    if (currency) {\r\n      const keys = Object.keys(allTokens)\r\n      let tokenKey\r\n      keys.forEach((key) => {\r\n        if (allTokens[key].symbol === currency.symbol) {\r\n          tokenKey = key\r\n        }\r\n      })\r\n\r\n      if (tokenKey) return allTokens[tokenKey].address\r\n    }\r\n    return ''\r\n  }, [allTokens, currency])\r\n\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\r\n\r\n  const percentAmount = useMemo(\r\n    () => ({\r\n      25: maxAmount ? maxAmount.multiply(new Percent(25, 100)).toExact() : undefined,\r\n      50: maxAmount ? maxAmount.multiply(new Percent(50, 100)).toExact() : undefined,\r\n      75: maxAmount ? maxAmount.multiply(new Percent(75, 100)).toExact() : undefined,\r\n      100: maxAmount ? maxAmount.toExact() : undefined,\r\n    }),\r\n    [maxAmount],\r\n  )\r\n\r\n  const CopyIcon = () => (\r\n    <Svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n      <path\r\n        d=\"M15 1H4C2.9 1 2 1.9 2 3V16C2 16.55 2.45 17 3 17C3.55 17 4 16.55 4 16V4C4 3.45 4.45 3 5 3H15C15.55 3 16 2.55 16 2C16 1.45 15.55 1 15 1ZM19 5H8C6.9 5 6 5.9 6 7V21C6 22.1 6.9 23 8 23H19C20.1 23 21 22.1 21 21V7C21 5.9 20.1 5 19 5ZM18 21H9C8.45 21 8 20.55 8 20V8C8 7.45 8.45 7 9 7H18C18.55 7 19 7.45 19 8V20C19 20.55 18.55 21 18 21Z\"\r\n        fill=\"#EAAA08\"\r\n      />\r\n    </Svg>\r\n  )\r\n\r\n  const MetamaskIcon = () => (\r\n    <Svg viewBox=\"0 0 40 40\" width=\"16px\" color=\"text\">\r\n      <path d=\"M36.0112 3.33337L22.1207 13.6277L24.7012 7.56091L36.0112 3.33337Z\" fill=\"#E17726\" />\r\n      <path d=\"M4.00261 3.33337L17.7558 13.7238L15.2989 7.56091L4.00261 3.33337Z\" fill=\"#E27625\" />\r\n      <path d=\"M31.0149 27.2023L27.3227 32.8573L35.2287 35.0397L37.4797 27.3258L31.0149 27.2023Z\" fill=\"#E27625\" />\r\n      <path d=\"M2.53386 27.3258L4.77116 35.0397L12.6772 32.8573L8.9987 27.2023L2.53386 27.3258Z\" fill=\"#E27625\" />\r\n      <path d=\"M12.2518 17.6496L10.0419 20.9712L17.8793 21.3281L17.6048 12.8867L12.2518 17.6496Z\" fill=\"#E27625\" />\r\n      <path d=\"M27.762 17.6494L22.3129 12.7905L22.1207 21.3279L29.9581 20.9711L27.762 17.6494Z\" fill=\"#E27625\" />\r\n      <path d=\"M12.6772 32.8574L17.3989 30.5652L13.336 27.3809L12.6772 32.8574Z\" fill=\"#E27625\" />\r\n      <path d=\"M22.6009 30.5652L27.3226 32.8574L26.6637 27.3809L22.6009 30.5652Z\" fill=\"#E27625\" />\r\n      <path d=\"M27.3226 32.8575L22.6009 30.5653L22.9715 33.6399L22.9303 34.9301L27.3226 32.8575Z\" fill=\"#D5BFB2\" />\r\n      <path d=\"M12.6772 32.8575L17.0694 34.9301L17.042 33.6399L17.3989 30.5653L12.6772 32.8575Z\" fill=\"#D5BFB2\" />\r\n      <path d=\"M17.1518 25.3495L13.2262 24.1965L15.9988 22.92L17.1518 25.3495Z\" fill=\"#233447\" />\r\n      <path d=\"M22.848 25.3495L24.001 22.92L26.801 24.1965L22.848 25.3495Z\" fill=\"#233447\" />\r\n      <path d=\"M12.6773 32.8573L13.3635 27.2023L8.99876 27.3258L12.6773 32.8573Z\" fill=\"#CC6228\" />\r\n      <path d=\"M26.6364 27.2023L27.3227 32.8573L31.0149 27.3258L26.6364 27.2023Z\" fill=\"#CC6228\" />\r\n      <path\r\n        d=\"M29.9581 20.9709L22.1207 21.3278L22.8482 25.3495L24.0011 22.92L26.8012 24.1965L29.9581 20.9709Z\"\r\n        fill=\"#CC6228\"\r\n      />\r\n      <path\r\n        d=\"M13.2263 24.1965L15.9989 22.92L17.1519 25.3495L17.8793 21.3278L10.0419 20.9709L13.2263 24.1965Z\"\r\n        fill=\"#CC6228\"\r\n      />\r\n      <path d=\"M10.0419 20.9709L13.3361 27.3809L13.2263 24.1965L10.0419 20.9709Z\" fill=\"#E27525\" />\r\n      <path d=\"M26.8011 24.1965L26.6638 27.3809L29.958 20.9709L26.8011 24.1965Z\" fill=\"#E27525\" />\r\n      <path d=\"M17.8793 21.3278L17.1519 25.3494L18.0715 30.0985L18.2637 23.8396L17.8793 21.3278Z\" fill=\"#E27525\" />\r\n      <path d=\"M22.1205 21.3278L21.7499 23.8258L21.9283 30.0985L22.848 25.3494L22.1205 21.3278Z\" fill=\"#E27525\" />\r\n      <path\r\n        d=\"M22.848 25.3496L21.9284 30.0987L22.601 30.5654L26.6638 27.381L26.8011 24.1967L22.848 25.3496Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n      <path\r\n        d=\"M13.2262 24.1967L13.336 27.381L17.3989 30.5654L18.0714 30.0987L17.1518 25.3496L13.2262 24.1967Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n      <path\r\n        d=\"M22.9303 34.93L22.9715 33.6398L22.6284 33.3378H17.3714L17.042 33.6398L17.0694 34.93L12.6772 32.8574L14.2145 34.1202L17.3302 36.2751H22.6696L25.7853 34.1202L27.3226 32.8574L22.9303 34.93Z\"\r\n        fill=\"#C0AC9D\"\r\n      />\r\n      <path\r\n        d=\"M22.601 30.5653L21.9284 30.0986H18.0715L17.3989 30.5653L17.0421 33.6399L17.3715 33.3379H22.6285L22.9716 33.6399L22.601 30.5653Z\"\r\n        fill=\"#161616\"\r\n      />\r\n      <path\r\n        d=\"M36.5875 14.3003L37.7542 8.61779L36.011 3.33337L22.6009 13.2846L27.7618 17.6493L35.0365 19.7768L36.6424 17.8964L35.9424 17.3886L37.0679 16.3728L36.2169 15.7003L37.3287 14.863L36.5875 14.3003Z\"\r\n        fill=\"#763E1A\"\r\n      />\r\n      <path\r\n        d=\"M2.24573 8.61779L3.42615 14.3003L2.67123 14.863L3.78302 15.7003L2.93202 16.3728L4.05753 17.3886L3.35752 17.8964L4.96343 19.7768L12.2518 17.6493L17.399 13.2846L4.00263 3.33337L2.24573 8.61779Z\"\r\n        fill=\"#763E1A\"\r\n      />\r\n      <path\r\n        d=\"M35.0365 19.777L27.7619 17.6495L29.958 20.9712L26.6638 27.3811L31.0149 27.3262H37.4797L35.0365 19.777Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n      <path\r\n        d=\"M12.2517 17.6495L4.96332 19.777L2.53386 27.3262H8.99869L13.336 27.3811L10.0419 20.9712L12.2517 17.6495Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n      <path\r\n        d=\"M22.1205 21.3276L22.6009 13.2843L24.701 7.56067H15.2988L17.3988 13.2843L17.8792 21.3276L18.0577 23.8531L18.0714 30.0984H21.9283L21.9421 23.8531L22.1205 21.3276Z\"\r\n        fill=\"#F5841F\"\r\n      />\r\n    </Svg>\r\n  )\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <Container hideInput={hideInput}>\r\n        {!hideInput && (\r\n          <LabelRow>\r\n            <RowBetween>\r\n              <Text color=\"textDisabled\" fontSize=\"14px\">\r\n                {translatedLabel}\r\n              </Text>\r\n              {account && (\r\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n                  {!hideBalance && !!currency && selectedCurrencyBalance\r\n                    ? `${t('Balance')}: ${selectedCurrencyBalance?.toSignificant(6)}`\r\n                    : ' -'}\r\n                </Text>\r\n              )}\r\n            </RowBetween>\r\n          </LabelRow>\r\n        )}\r\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\r\n          {!hideInput && (\r\n            <>\r\n              <NumericalInput\r\n                className=\"token-amount-input\"\r\n                value={value}\r\n                onUserInput={(val) => {\r\n                  onUserInput(val)\r\n                }}\r\n              />\r\n              {account && currency && showMaxButton && label !== 'To' && (\r\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\r\n                  {t('MAX')}\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n          <CurrencySelect\r\n            selected={!!currency}\r\n            className=\"open-currency-select-button\"\r\n            onClick={() => {\r\n              if (!disableCurrencySelect) {\r\n                setModalOpen(true)\r\n              }\r\n            }}\r\n          >\r\n            <Aligner>\r\n              {pair ? (\r\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\r\n              ) : currency ? (\r\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\r\n              ) : null}\r\n              {pair ? (\r\n                <Text>\r\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\r\n                </Text>\r\n              ) : (\r\n                <Text>\r\n                  {(currency && currency.symbol && currency.symbol.length > 20\r\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                        currency.symbol.length - 5,\r\n                        currency.symbol.length,\r\n                      )}`\r\n                    : currency?.symbol) || t('Select a currency')}\r\n                </Text>\r\n              )}\r\n              {!disableCurrencySelect && <ChevronDownIcon />}\r\n            </Aligner>\r\n          </CurrencySelect>\r\n\r\n          {currency?.symbol && currency?.symbol !== 'CORE' && (\r\n            <Action>\r\n              <StyleButton\r\n                small\r\n                bold\r\n                onClick={() => {\r\n                  if (navigator.clipboard) {\r\n                    navigator.clipboard.writeText(tokenAddress)\r\n                    setIsTooltipDisplayed(true)\r\n                    setTimeout(() => {\r\n                      setIsTooltipDisplayed(false)\r\n                    }, 1000)\r\n                  }\r\n                }}\r\n              >\r\n                <CopyIcon />\r\n                <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\r\n              </StyleButton>\r\n              <StyleButton\r\n                small\r\n                bold\r\n                onClick={() =>\r\n                  registerToken(\r\n                    tokenAddress,\r\n                    currency.symbol,\r\n                    currency.decimals,\r\n                    getTokenLogoURLForMetamask(currency.symbol.toLowerCase()),\r\n                  )\r\n                }\r\n              >\r\n                <MetamaskIcon />\r\n              </StyleButton>\r\n            </Action>\r\n          )}\r\n        </InputRow>\r\n        {maxAmount && (\r\n          <PercentInputRow>\r\n            {[25, 50, 75, 100].map((percent: number) => (\r\n              <PercentButton\r\n                onClick={() => onUserInput(percentAmount[percent])}\r\n                selected={maxAmount && value !== '0' && value === percentAmount[percent]}\r\n              >\r\n                {percent < 100 ? `${percent}%` : 'MAX'}\r\n              </PercentButton>\r\n            ))}\r\n          </PercentInputRow>\r\n        )}\r\n      </Container>\r\n      {!disableCurrencySelect && onCurrencySelect && (\r\n        <CurrencySearchModal\r\n          isOpen={modalOpen}\r\n          onDismiss={handleDismissSearch}\r\n          onCurrencySelect={onCurrencySelect}\r\n          selectedCurrency={currency}\r\n          otherSelectedCurrency={otherCurrency}\r\n          showCommonBases={showCommonBases}\r\n        />\r\n      )}\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useTokenContract } from '../hooks/useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\nexport function useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\r\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\r\n\r\n  return useMemo(() => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined), [\r\n    token,\r\n    allowance,\r\n  ])\r\n}\r\n\r\nexport default useTokenAllowance\r\n","import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from 'archerswap-sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { ROUTER_ADDRESS } from '../constants'\r\nimport { useTokenAllowance } from '../data/Allowances'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\nimport { useActiveWeb3React } from './index'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string,\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return tokenContract\r\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      })\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: `Approve ${amountToApprove.currency.symbol}`,\r\n          approval: { tokenAddress: token.address, spender },\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.error('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage],\r\n  )\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\r\n}\r\n","import { CurrencyAmount, ETHER, JSBI } from 'archerswap-sdk'\r\nimport { MIN_ETH } from '../constants'\r\n\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\r\n  if (!currencyAmount) return undefined\r\n  if (currencyAmount.currency === ETHER) {\r\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\r\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH))\r\n    }\r\n    return CurrencyAmount.ether(JSBI.BigInt(0))\r\n  }\r\n  return currencyAmount\r\n}\r\n\r\nexport default maxAmountSpend\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Flex, Input, Text } from 'archerswap-uikit'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\nconst MAX_SLIPPAGE = 5000\r\nconst RISKY_SLIPPAGE_LOW = 50\r\nconst RISKY_SLIPPAGE_HIGH = 500\r\n\r\nconst StyledSlippageToleranceSettings = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Option = styled.div`\r\n  padding: 0 4px;\r\n`\r\n\r\nconst Options = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${Option}:first-child {\r\n    padding-left: 0;\r\n  }\r\n\r\n  ${Option}:last-child {\r\n    padding-right: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst Label = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst predefinedValues = [\r\n  { label: '0.1%', value: 0.1 },\r\n  { label: '0.5%', value: 0.5 },\r\n  { label: '1%', value: 1 },\r\n]\r\n\r\nconst SlippageToleranceSettings = () => {\r\n  const { t } = useTranslation()\r\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\r\n  const [value, setValue] = useState(userSlippageTolerance / 100)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(parseFloat(inputValue))\r\n  }\r\n\r\n  // Updates local storage if value is valid\r\n  useEffect(() => {\r\n    try {\r\n      const rawValue = value * 100\r\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\r\n        setUserslippageTolerance(rawValue)\r\n        setError(null)\r\n      } else {\r\n        setError(t('Enter a valid slippage percentage'))\r\n      }\r\n    } catch {\r\n      setError(t('Enter a valid slippage percentage'))\r\n    }\r\n  }, [value, setError, setUserslippageTolerance, t])\r\n\r\n  // Notify user if slippage is risky\r\n  useEffect(() => {\r\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\r\n      setError(t('Your transaction may fail'))\r\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\r\n      setError(t('Your transaction may be frontrun'))\r\n    }\r\n  }, [userSlippageTolerance, setError, t])\r\n\r\n  return (\r\n    <StyledSlippageToleranceSettings>\r\n      <Label>\r\n        <Text style={{ fontWeight: 600 }}>{t('Slippage tolerance')}</Text>\r\n        <QuestionHelper\r\n          text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\r\n        />\r\n      </Label>\r\n      <Options>\r\n        <Flex mb={['8px', 0]} mr={[0, '8px']}>\r\n          {predefinedValues.map(({ label, value: predefinedValue }) => {\r\n            const handleClick = () => setValue(predefinedValue)\r\n\r\n            return (\r\n              <Option key={predefinedValue}>\r\n                <Button variant={value === predefinedValue ? 'primary' : 'tertiary'} onClick={handleClick}>\r\n                  {label}\r\n                </Button>\r\n              </Option>\r\n            )\r\n          })}\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <Option>\r\n            <Input\r\n              type=\"number\"\r\n              scale=\"lg\"\r\n              step={0.1}\r\n              min={0.1}\r\n              placeholder=\"5%\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              isWarning={error !== null}\r\n            />\r\n          </Option>\r\n          <Option>\r\n            <Text fontSize=\"18px\">%</Text>\r\n          </Option>\r\n        </Flex>\r\n      </Options>\r\n      {error && (\r\n        <Text mt=\"8px\" color=\"failure\">\r\n          {error}\r\n        </Text>\r\n      )}\r\n    </StyledSlippageToleranceSettings>\r\n  )\r\n}\r\n\r\nexport default SlippageToleranceSettings\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Input, Text } from 'archerswap-uikit'\r\nimport { useUserDeadline } from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\nconst StyledTransactionDeadlineSetting = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst Field = styled.div`\r\n  align-items: center;\r\n  display: inline-flex;\r\n\r\n  & > ${Input} {\r\n    max-width: 100px;\r\n  }\r\n\r\n  & > ${Text} {\r\n    font-size: 14px;\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst TransactionDeadlineSetting = () => {\r\n  const { t } = useTranslation()\r\n  const [deadline, setDeadline] = useUserDeadline()\r\n  const [value, setValue] = useState(deadline / 60) // deadline in minutes\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(parseInt(inputValue, 10))\r\n  }\r\n\r\n  // Updates local storage if value is valid\r\n  useEffect(() => {\r\n    try {\r\n      const rawValue = value * 60\r\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\r\n        setDeadline(rawValue)\r\n        setError(null)\r\n      } else {\r\n        setError(t('Enter a valid deadline'))\r\n      }\r\n    } catch {\r\n      setError(t('Enter a valid deadline'))\r\n    }\r\n  }, [value, setError, setDeadline, t])\r\n\r\n  return (\r\n    <StyledTransactionDeadlineSetting>\r\n      <Label>\r\n        <Text style={{ fontWeight: 600 }}>{t('Transaction deadline')}</Text>\r\n        <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} />\r\n      </Label>\r\n      <Field>\r\n        <Input type=\"number\" step=\"1\" min=\"1\" value={value} onChange={handleChange} />\r\n        <Text>{t('Minutes')}</Text>\r\n      </Field>\r\n      {error && (\r\n        <Text mt=\"8px\" color=\"failure\">\r\n          {error}\r\n        </Text>\r\n      )}\r\n    </StyledTransactionDeadlineSetting>\r\n  )\r\n}\r\n\r\nexport default TransactionDeadlineSetting\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Toggle } from 'archerswap-uikit'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst Label = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst ExpertModeSetting = () => {\r\n  const { t } = useTranslation()\r\n  const [isExpertMode, toggleSetExpertMode] = useExpertModeManager()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>\r\n        <Text style={{ fontWeight: 600 }}>{t('Expert Mode')}</Text>\r\n        <QuestionHelper\r\n          text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\r\n        />\r\n      </Label>\r\n      <Toggle checked={isExpertMode} onChange={() => toggleSetExpertMode()} scale=\"sm\" />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ExpertModeSetting\r\n","import React from 'react'\r\nimport { Modal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SlippageToleranceSetting from './SlippageToleranceSetting'\r\nimport TransactionDeadlineSetting from './TransactionDeadlineSetting'\r\nimport ExpertModeSetting from './ExpertModeSetting'\r\n\r\ntype SettingsModalProps = {\r\n  onDismiss?: () => void\r\n}\r\n\r\n// TODO: Fix UI Kit typings\r\nconst defaultOnDismiss = () => null\r\n\r\nconst SettingsModal = ({ onDismiss = defaultOnDismiss }: SettingsModalProps) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Modal title={t('Settings')} onDismiss={onDismiss}>\r\n      <SlippageToleranceSetting />\r\n      <TransactionDeadlineSetting />\r\n      <ExpertModeSetting />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n","import React, { useMemo } from 'react'\r\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from 'archerswap-uikit'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { getSnowtraceLink } from 'utils'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport Loader from 'components/Loader'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ntype RecentTransactionsModalProps = {\r\n  onDismiss?: () => void\r\n}\r\n\r\n// TODO: Fix UI Kit typings\r\nconst defaultOnDismiss = () => null\r\n\r\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\r\n\r\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\r\n  const { hash, receipt } = sortedRecentTransaction\r\n\r\n  if (!hash) {\r\n    return { icon: <Loader />, color: 'text' }\r\n  }\r\n\r\n  if (hash && receipt?.status === 1) {\r\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\r\n  }\r\n\r\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\r\n}\r\n\r\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss }: RecentTransactionsModalProps) => {\r\n  const { t } = useTranslation()\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  // Logic taken from Web3Status/index.tsx line 175\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  return (\r\n    <Modal title={t('Recent transactions')} onDismiss={onDismiss}>\r\n      {!account && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            {t('Please connect your wallet to view your recent transactions')}\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            {t('Close')}\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account && chainId && sortedRecentTransactions.length === 0 && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            {t('No recent transactions')}\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            {t('Close')}\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account &&\r\n        chainId &&\r\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\r\n          const { hash, summary } = sortedRecentTransaction\r\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\r\n\r\n          return (\r\n            <>\r\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n                <LinkExternal href={getSnowtraceLink(chainId, hash, 'transaction')} color={color}>\r\n                  {summary ?? hash}\r\n                </LinkExternal>\r\n                {icon}\r\n              </Flex>\r\n            </>\r\n          )\r\n        })}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RecentTransactionsModal\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, IconButton, Text, Flex, useModal, CogIcon, Svg } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SettingsModal from './SettingsModal'\r\nimport RecentTransactionsModal from './RecentTransactionsModal'\r\n\r\ninterface PageHeaderProps {\r\n  title: ReactNode\r\n  description?: ReactNode\r\n  isShowSetting?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nconst HistoryIcon = () => (\r\n  <Svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path\r\n      d=\"M13 3C8.03 3 4 7.03 4 12H1L4.89 15.89L4.96 16.03L9 12H6C6 8.13 9.13 5 13 5C16.87 5 20 8.13 20 12C20 15.87 16.87 19 13 19C11.07 19 9.32 18.21 8.06 16.94L6.64 18.36C8.27 19.99 10.51 21 13 21C17.97 21 22 16.97 22 12C22 7.03 17.97 3 13 3ZM12 8V13L16.28 15.54L17 14.33L13.5 12.25V8H12Z\"\r\n      fill=\"#EAAA08\"\r\n    />\r\n  </Svg>\r\n)\r\n\r\nconst StyledPageHeader = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  padding: 24px;\r\n`\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst PageHeader = ({ title, description, isShowSetting = true, children }: PageHeaderProps) => {\r\n  const { t } = useTranslation()\r\n  const [onPresentSettings] = useModal(<SettingsModal />)\r\n  const [onPresentRecentTransactions] = useModal(<RecentTransactionsModal />)\r\n\r\n  return (\r\n    <StyledPageHeader>\r\n      <Flex alignItems=\"center\">\r\n        <Details>\r\n          <Heading mb=\"8px\" color=\"text\">\r\n            {title}\r\n          </Heading>\r\n          {description && (\r\n            <Text color=\"textDisabled\" fontSize=\"14px\">\r\n              {description}\r\n            </Text>\r\n          )}\r\n        </Details>\r\n        {isShowSetting && (\r\n          <IconButton variant=\"text\" onClick={onPresentSettings} title={t('Settings')}>\r\n            <CogIcon width=\"24px\" color=\"#EAAA08\" />\r\n          </IconButton>\r\n        )}\r\n        {isShowSetting && (\r\n          <IconButton variant=\"text\" onClick={onPresentRecentTransactions} title={t('Recent transactions')}>\r\n            <HistoryIcon />\r\n          </IconButton>\r\n        )}\r\n      </Flex>\r\n      {children && <Text mt=\"16px\">{children}</Text>}\r\n    </StyledPageHeader>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useENS from '../../hooks/useENS'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { ExternalLink } from '../Shared'\r\nimport { AutoColumn } from '../Column'\r\nimport { RowBetween } from '../Row'\r\nimport { getSnowtraceLink } from '../../utils'\r\n\r\nconst InputPanel = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  z-index: 1;\r\n  width: 100%;\r\n`\r\n\r\nconst ContainerRow = styled.div<{ error: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.invertedContrast)};\r\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\r\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n  padding: 1rem;\r\n`\r\n\r\nconst Input = styled.input<{ error?: boolean }>`\r\n  font-size: 1.25rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({\r\n  id,\r\n  value,\r\n  onChange,\r\n}: {\r\n  id?: string\r\n  // the typed string value\r\n  value: string\r\n  // triggers whenever the typed value changes\r\n  onChange: (value: string) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n  const { address, loading, name } = useENS(value)\r\n\r\n  const handleInput = useCallback(\r\n    (event) => {\r\n      const input = event.target.value\r\n      const withoutSpaces = input.replace(/\\s+/g, '')\r\n      onChange(withoutSpaces)\r\n    },\r\n    [onChange],\r\n  )\r\n\r\n  const error = Boolean(value.length > 0 && !loading && !address)\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <ContainerRow error={error}>\r\n        <InputContainer>\r\n          <AutoColumn gap=\"md\">\r\n            <RowBetween>\r\n              <Text color=\"textSubtle\" fontWeight={500} fontSize=\"14px\">\r\n                {t('Recipient')}\r\n              </Text>\r\n              {address && chainId && (\r\n                <ExternalLink href={getSnowtraceLink(chainId, name ?? address, 'address')} style={{ fontSize: '14px' }}>\r\n                  {t('(View on Core Scan)')}\r\n                </ExternalLink>\r\n              )}\r\n            </RowBetween>\r\n            <Input\r\n              className=\"recipient-address-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder={t('Wallet Address or ENS name')}\r\n              error={error}\r\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\r\n              onChange={handleInput}\r\n              value={value}\r\n            />\r\n          </AutoColumn>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { Percent } from 'archerswap-sdk'\r\nimport React from 'react'\r\nimport { ONE_BIPS } from '../../constants'\r\nimport { warningSeverity } from '../../utils/prices'\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\r\n  return (\r\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\r\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import { Trade, TradeType } from 'archerswap-sdk'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Text, Button } from 'archerswap-uikit'\r\nimport { Repeat } from 'react-feather'\r\n\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  computeSlippageAdjustedAmounts,\r\n  computeTradePriceBreakdown,\r\n  formatExecutionPrice,\r\n  warningSeverity,\r\n} from '../../utils/prices'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n}) {\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\r\n    allowedSlippage,\r\n    trade,\r\n  ])\r\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const severity = warningSeverity(priceImpactWithoutFee)\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <AutoColumn gap=\"0px\">\r\n        <RowBetween align=\"center\">\r\n          <Text fontSize=\"14px\">{t('Price')}</Text>\r\n          <Text\r\n            fontSize=\"14px\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '8px',\r\n              fontWeight: 500,\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <Repeat size={14} />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\r\n            </Text>\r\n            <QuestionHelper\r\n              text={t(\r\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\r\n              )}\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </Text>\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? trade.outputAmount.currency.symbol\r\n                : trade.inputAmount.currency.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\r\n            <QuestionHelper text={t('The difference between the market price and your price due to trade size.')} />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\r\n            <QuestionHelper\r\n              text={t(\r\n                'For each trade a 0.2% fee is paid. 0.1% goes to liquidity providers, 0.05% goes to the xBOW holders and 0.05% goes to ArcherSwap treasury.',\r\n              )}\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </AutoColumn>\r\n\r\n      <AutoRow>\r\n        <Button\r\n          onClick={onConfirm}\r\n          disabled={disabledConfirm}\r\n          variant={severity > 2 ? 'danger' : 'primary'}\r\n          mt=\"10px\"\r\n          id=\"confirm-swap-or-send\"\r\n          width=\"100%\"\r\n        >\r\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\r\n        </Button>\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Trade, TradeType } from 'archerswap-sdk'\r\nimport { Button, Text } from 'archerswap-uikit'\r\nimport { ArrowDown, AlertTriangle } from 'react-feather'\r\nimport { Field } from '../../state/swap/actions'\r\nimport { isAddress, shortenAddress } from '../../utils'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\r\nimport { AutoColumn } from '../Column'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { SwapShowAcceptChanges } from './styleds'\r\n\r\nconst PriceInfoText = styled(Text)`\r\n  font-style: italic;\r\n  line-height: 1.3;\r\n\r\n  span {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    font-weight: 600;\r\n  }\r\n`\r\n\r\nexport default function SwapModalHeader({\r\n  trade,\r\n  allowedSlippage,\r\n  recipient,\r\n  showAcceptChanges,\r\n  onAcceptChanges,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  recipient: string | null\r\n  showAcceptChanges: boolean\r\n  onAcceptChanges: () => void\r\n}) {\r\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\r\n    trade,\r\n    allowedSlippage,\r\n  ])\r\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <Text\r\n            fontSize=\"24px\"\r\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? theme.colors.primary : 'text'}\r\n          >\r\n            {trade.inputAmount.toSignificant(6)}\r\n          </Text>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\r\n            {trade.inputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowFixed>\r\n        <ArrowDown size=\"16\" color={theme.colors.textSubtle} style={{ marginLeft: '4px', minWidth: '16px' }} />\r\n      </RowFixed>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <Text\r\n            fontSize=\"24px\"\r\n            style={{ marginLeft: '10px', fontWeight: 500 }}\r\n            color={\r\n              priceImpactSeverity > 2\r\n                ? theme.colors.failure\r\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\r\n                ? theme.colors.primary\r\n                : 'text'\r\n            }\r\n          >\r\n            {trade.outputAmount.toSignificant(6)}\r\n          </Text>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\r\n            {trade.outputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      {showAcceptChanges ? (\r\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <AlertTriangle size={20} style={{ marginRight: '8px', minWidth: 24 }} />\r\n              <Text color=\"primary\"> Price Updated</Text>\r\n            </RowFixed>\r\n            <Button onClick={onAcceptChanges}>Accept</Button>\r\n          </RowBetween>\r\n        </SwapShowAcceptChanges>\r\n      ) : null}\r\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\r\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\r\n          <PriceInfoText>\r\n            {`Output is estimated. You will receive at least `}\r\n            <span>\r\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\r\n            </span>\r\n            {' or the transaction will revert.'}\r\n          </PriceInfoText>\r\n        ) : (\r\n          <PriceInfoText>\r\n            {`Input is estimated. You will sell at most `}\r\n            <span>\r\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\r\n            </span>\r\n            {' or the transaction will revert.'}\r\n          </PriceInfoText>\r\n        )}\r\n      </AutoColumn>\r\n      {recipient !== null ? (\r\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\r\n          <Text>\r\n            Output will be sent to{' '}\r\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\r\n          </Text>\r\n        </AutoColumn>\r\n      ) : null}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { currencyEquals, Trade } from 'archerswap-sdk'\r\nimport React, { useCallback, useMemo } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from '../TransactionConfirmationModal'\r\nimport SwapModalFooter from './SwapModalFooter'\r\nimport SwapModalHeader from './SwapModalHeader'\r\n\r\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\r\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\r\n  return (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\r\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\r\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\r\n  )\r\n}\r\n\r\nexport default function ConfirmSwapModal({\r\n  trade,\r\n  originalTrade,\r\n  onAcceptChanges,\r\n  allowedSlippage,\r\n  onConfirm,\r\n  onDismiss,\r\n  recipient,\r\n  swapErrorMessage,\r\n  isOpen,\r\n  attemptingTxn,\r\n  txHash,\r\n}: {\r\n  isOpen: boolean\r\n  trade: Trade | undefined\r\n  originalTrade: Trade | undefined\r\n  attemptingTxn: boolean\r\n  txHash: string | undefined\r\n  recipient: string | null\r\n  allowedSlippage: number\r\n  onAcceptChanges: () => void\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  onDismiss: () => void\r\n}) {\r\n  const showAcceptChanges = useMemo(\r\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\r\n    [originalTrade, trade],\r\n  )\r\n  const { t } = useTranslation()\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalHeader\r\n        trade={trade}\r\n        allowedSlippage={allowedSlippage}\r\n        recipient={recipient}\r\n        showAcceptChanges={showAcceptChanges}\r\n        onAcceptChanges={onAcceptChanges}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalFooter\r\n        onConfirm={onConfirm}\r\n        trade={trade}\r\n        disabledConfirm={showAcceptChanges}\r\n        swapErrorMessage={swapErrorMessage}\r\n        allowedSlippage={allowedSlippage}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\r\n\r\n  // text to show while loading\r\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6)} ${\r\n    trade?.inputAmount?.currency?.symbol\r\n  } for ${trade?.outputAmount?.toSignificant(6)} ${trade?.outputAmount?.currency?.symbol}`\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      swapErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent\r\n          title={t('Confirm Swap')}\r\n          onDismiss={onDismiss}\r\n          topContent={modalHeader}\r\n          bottomContent={modalBottom}\r\n        />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage, t],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      isOpen={isOpen}\r\n      onDismiss={onDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n    />\r\n  )\r\n}\r\n","import { Trade } from 'archerswap-sdk'\r\nimport React, { Fragment, memo, useContext } from 'react'\r\nimport { ChevronRight } from 'react-feather'\r\nimport { Flex, Text } from 'archerswap-uikit'\r\nimport { ThemeContext } from 'styled-components'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <Flex\r\n      px=\"1rem\"\r\n      py=\"0.5rem\"\r\n      my=\"0.5rem\"\r\n      style={{ border: `1px solid ${theme.colors.tertiary}`, borderRadius: '1rem' }}\r\n      flexWrap=\"wrap\"\r\n      justifyContent=\"space-evenly\"\r\n      alignItems=\"center\"\r\n    >\r\n      {trade.route.path.map((token, i, path) => {\r\n        const isLastItem: boolean = i === path.length - 1\r\n        return (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Fragment key={i}>\r\n            <Flex my=\"0.5rem\" alignItems=\"center\" style={{ flexShrink: 0 }}>\r\n              <CurrencyLogo currency={token} size=\"1.5rem\" />\r\n              <Text fontSize=\"14px\" color=\"text\" ml=\"0.5rem\">\r\n                {token.symbol}\r\n              </Text>\r\n            </Flex>\r\n            {isLastItem ? null : <ChevronRight color=\"textSubtle\" />}\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </Flex>\r\n  )\r\n})\r\n","import React from 'react'\r\nimport { Trade, TradeType } from 'archerswap-sdk'\r\nimport { Card, CardBody, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Field } from '../../state/swap/actions'\r\nimport { useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from '../../utils/prices'\r\nimport { AutoColumn } from '../Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { SectionBreak } from './styleds'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\r\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{isExactIn ? t('Minimum received') : t('Maximum sold')}</Text>\r\n            <QuestionHelper\r\n              text={t(\r\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\r\n              )}\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {isExactIn\r\n                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n                  '-'\r\n                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ??\r\n                  '-'}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\r\n            <QuestionHelper\r\n              text={t('The difference between the market price and estimated price due to trade size.')}\r\n            />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\r\n            <QuestionHelper\r\n              text={t(\r\n                'For each trade a 0.2% fee is paid. 0.1% goes to liquidity providers, 0.05% goes to the xBOW holders and 0.05% goes to ArcherSwap treasury.',\r\n              )}\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport interface AdvancedSwapDetailsProps {\r\n  trade?: Trade\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n  const { t } = useTranslation()\r\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      {trade && (\r\n        <>\r\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\r\n          {showRoute && (\r\n            <>\r\n              <SectionBreak />\r\n              <AutoColumn style={{ padding: '0 24px' }}>\r\n                <RowFixed>\r\n                  <Text fontSize=\"14px\">Route</Text>\r\n                  <QuestionHelper text={t('Routing through these tokens resulted in the best price for your trade.')} />\r\n                </RowFixed>\r\n                <SwapRoute trade={trade} />\r\n              </AutoColumn>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useLastTruthy } from '../../hooks/useLast'\r\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\r\n\r\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\r\n  padding-top: calc(16px + 2rem);\r\n  padding-bottom: 20px;\r\n  margin-top: -2rem;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  z-index: 1;\r\n\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  transition: transform 300ms ease-in-out;\r\n`\r\n\r\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\r\n  const lastTrade = useLastTruthy(trade)\r\n\r\n  return (\r\n    <AdvancedDetailsFooter show={Boolean(trade)}>\r\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Price } from 'archerswap-sdk'\r\nimport { SyncAltIcon, Text } from 'archerswap-uikit'\r\nimport { StyledBalanceMaxMini } from './styleds'\r\n\r\ninterface TradePriceProps {\r\n  price?: Price\r\n  showInverted: boolean\r\n  setShowInverted: (showInverted: boolean) => void\r\n}\r\n\r\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\r\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const label = showInverted\r\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\r\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\r\n\r\n  return (\r\n    <Text fontSize=\"14px\" style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n      {show ? (\r\n        <>\r\n          {formattedPrice ?? '-'} {label}\r\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n            <SyncAltIcon width=\"20px\" color=\"primary\" />\r\n          </StyledBalanceMaxMini>\r\n        </>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import { Token } from 'archerswap-sdk'\r\nimport { transparentize } from 'polished'\r\nimport { Button, Text } from 'archerswap-uikit'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { getSnowtraceLink, shortenAddress } from '../../utils'\r\nimport { ExternalLink } from '../Shared'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport Modal from '../Modal'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\n\r\nconst Wrapper = styled.div<{ error: boolean }>`\r\n  background: ${({ theme }) => transparentize(0.6, theme.colors.tertiary)};\r\n  padding: 0.75rem;\r\n  border-radius: 20px;\r\n`\r\n\r\nconst WarningContainer = styled.div`\r\n  max-width: 420px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background: rgba(242, 150, 2, 0.05);\r\n  border: 1px solid #f3841e;\r\n  border-radius: 20px;\r\n  overflow: auto;\r\n`\r\n\r\nconst StyledWarningIcon = styled(AlertTriangle)`\r\n  stroke: ${({ theme }) => theme.colors.failure};\r\n`\r\n\r\ninterface TokenWarningCardProps {\r\n  token?: Token\r\n}\r\n\r\nfunction TokenWarningCard({ token }: TokenWarningCardProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n  const TranslateString = useI18n()\r\n  const tokenSymbol = token?.symbol?.toLowerCase() ?? ''\r\n  const tokenName = token?.name?.toLowerCase() ?? ''\r\n\r\n  const allTokens = useAllTokens()\r\n\r\n  const duplicateNameOrSymbol = useMemo(() => {\r\n    if (!token || !chainId) return false\r\n\r\n    return Object.keys(allTokens).some((tokenAddress) => {\r\n      const userToken = allTokens[tokenAddress]\r\n      if (userToken.equals(token)) {\r\n        return false\r\n      }\r\n      return userToken.symbol?.toLowerCase() === tokenSymbol || userToken.name?.toLowerCase() === tokenName\r\n    })\r\n  }, [token, chainId, allTokens, tokenSymbol, tokenName])\r\n\r\n  if (!token) return null\r\n\r\n  return (\r\n    <Wrapper error={duplicateNameOrSymbol}>\r\n      <AutoRow gap=\"6px\">\r\n        <AutoColumn gap=\"24px\">\r\n          <CurrencyLogo currency={token} size=\"16px\" />\r\n          <div> </div>\r\n        </AutoColumn>\r\n        <AutoColumn gap=\"10px\" justify=\"flex-start\">\r\n          <Text>\r\n            {token && token.name && token.symbol && token.name !== token.symbol\r\n              ? `${token.name} (${token.symbol})`\r\n              : token.name || token.symbol}{' '}\r\n          </Text>\r\n          {chainId && (\r\n            <ExternalLink style={{ fontWeight: 400 }} href={getSnowtraceLink(chainId, token.address, 'token')}>\r\n              <Text title={token.address}>\r\n                {shortenAddress(token.address)} {TranslateString(116, '(View on Snowtrace Explorer)')}\r\n              </Text>\r\n            </ExternalLink>\r\n          )}\r\n        </AutoColumn>\r\n      </AutoRow>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default function TokenWarningModal({\r\n  isOpen,\r\n  tokens,\r\n  onConfirm,\r\n}: {\r\n  isOpen: boolean\r\n  tokens: Token[]\r\n  onConfirm: () => void\r\n}) {\r\n  const [understandChecked, setUnderstandChecked] = useState(false)\r\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\r\n  const TranslateString = useI18n()\r\n\r\n  const handleDismiss = useCallback(() => null, [])\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\r\n      <WarningContainer className=\"token-warning-container\">\r\n        <AutoColumn gap=\"lg\">\r\n          <AutoRow gap=\"6px\">\r\n            <StyledWarningIcon />\r\n            <Text color=\"failure\">{TranslateString(1128, 'Token imported')}</Text>\r\n          </AutoRow>\r\n          <Text>\r\n            {TranslateString(\r\n              1130,\r\n              'Anyone can create a ERC20 token on Core Chain with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\r\n            )}\r\n          </Text>\r\n          <Text>\r\n            {TranslateString(\r\n              1132,\r\n              'This interface can load arbitrary tokens by token addresses. Please take extra caution and do your research when interacting with arbitrary ERC20 tokens.',\r\n            )}\r\n          </Text>\r\n          <Text>{TranslateString(1134, 'If you purchase an arbitrary token, you may be unable to sell it back.')}</Text>\r\n          {tokens.map((token) => {\r\n            return <TokenWarningCard key={token.address} token={token} />\r\n          })}\r\n          <RowBetween>\r\n            <div>\r\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\r\n                <input\r\n                  id=\"understand-checkbox\"\r\n                  type=\"checkbox\"\r\n                  className=\"understand-checkbox\"\r\n                  checked={understandChecked}\r\n                  onChange={toggleUnderstand}\r\n                />{' '}\r\n                <Text as=\"span\" ml=\"4px\">\r\n                  {TranslateString(148, 'I understand')}\r\n                </Text>\r\n              </label>\r\n            </div>\r\n            <Button\r\n              disabled={!understandChecked}\r\n              variant=\"danger\"\r\n              style={{ width: '140px' }}\r\n              className=\"token-dismiss-button\"\r\n              onClick={() => {\r\n                onConfirm()\r\n              }}\r\n            >\r\n              {TranslateString(150, 'Continue')}\r\n            </Button>\r\n          </RowBetween>\r\n        </AutoColumn>\r\n      </WarningContainer>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text } from 'archerswap-uikit'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport Modal from '../Modal'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\n\r\nconst WarningContainer = styled.div`\r\n  max-width: 420px;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  background: rgba(242, 150, 2, 0.05);\r\n  border: 1px solid #f3841e;\r\n  border-radius: 20px;\r\n  overflow: auto;\r\n`\r\n\r\nconst StyledWarningIcon = styled(AlertTriangle)`\r\n  stroke: ${({ theme }) => theme.colors.failure};\r\n`\r\n\r\nexport default function SyrupWarningModal({\r\n  isOpen,\r\n  transactionType,\r\n  onConfirm,\r\n}: {\r\n  isOpen: boolean\r\n  transactionType: string\r\n  onConfirm: () => void\r\n}) {\r\n  const [understandChecked, setUnderstandChecked] = useState(false)\r\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\r\n\r\n  const handleDismiss = useCallback(() => null, [])\r\n  return (\r\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\r\n      <WarningContainer className=\"token-warning-container\">\r\n        <AutoColumn gap=\"lg\">\r\n          <AutoRow gap=\"6px\">\r\n            <StyledWarningIcon />\r\n            <Text color=\"failure\">Syrup Warning</Text>\r\n          </AutoRow>\r\n          {transactionType !== '' && (\r\n            <>\r\n              <Text color=\"failure\">\r\n                Please be careful when <strong>{transactionType}</strong> SYRUP.\r\n              </Text>\r\n              <Text color=\"failure\">\r\n                {transactionType === 'Buying'\r\n                  ? 'You will not receive CAKE rewards for holding purchased SYRUP.'\r\n                  : 'You will need to buy back the same amount of SYRUP to be able to convert back to CAKE.'}\r\n              </Text>\r\n            </>\r\n          )}\r\n          <RowBetween>\r\n            <div>\r\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\r\n                <input\r\n                  id=\"understand-checkbox\"\r\n                  type=\"checkbox\"\r\n                  className=\"understand-checkbox\"\r\n                  checked={understandChecked}\r\n                  onChange={toggleUnderstand}\r\n                />{' '}\r\n                <Text as=\"span\">I understand</Text>\r\n              </label>\r\n            </div>\r\n            <Button\r\n              disabled={!understandChecked}\r\n              variant=\"danger\"\r\n              style={{ width: '140px' }}\r\n              onClick={() => {\r\n                setUnderstandChecked(false)\r\n                onConfirm()\r\n              }}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </RowBetween>\r\n        </AutoColumn>\r\n      </WarningContainer>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { transparentize } from 'polished'\r\nimport { RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\n\r\nconst Wrapper = styled(AutoColumn)`\r\n  margin-top: 1.25rem;\r\n`\r\n\r\nconst Grouping = styled(RowBetween)`\r\n  width: 50%;\r\n`\r\n\r\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  background-color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 8px;\r\n  font-size: 12px;\r\n  color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.text : confirmed ? theme.colors.success : '#FFFFFF'};\r\n`\r\n\r\nconst CircleRow = styled.div`\r\n  width: calc(100% - 20px);\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Connector = styled.div<{ prevConfirmed?: boolean }>`\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: #ffffff;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme, prevConfirmed }) => transparentize(0.5, prevConfirmed ? theme.colors.success : theme.colors.primary)} 0%,\r\n    ${({ theme, prevConfirmed }) => (prevConfirmed ? theme.colors.primary : theme.colors.backgroundDisabled)} 80%\r\n  );\r\n  opacity: 0.6;\r\n`\r\n\r\ninterface ProgressCirclesProps {\r\n  steps: boolean[]\r\n}\r\n\r\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\r\nexport default function ProgressCircles({ steps }: ProgressCirclesProps) {\r\n  return (\r\n    <Wrapper justify=\"center\">\r\n      <Grouping>\r\n        {steps.map((step, i) => {\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <CircleRow key={i}>\r\n              <Circle confirmed={step} disabled={!steps[i - 1] && i !== 0}>\r\n                {step ? '✓' : i + 1}\r\n              </Circle>\r\n              <Connector prevConfirmed={step} />\r\n            </CircleRow>\r\n          )\r\n        })}\r\n        <Circle disabled={!steps[steps.length - 1]}>{steps.length + 1}</Circle>\r\n      </Grouping>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { BIPS_BASE, DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../constants'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport { useActiveWeb3React } from './index'\r\nimport useENS from './useENS'\r\n\r\nenum SwapCallbackState {\r\n  INVALID,\r\n  LOADING,\r\n  VALID,\r\n}\r\n\r\ninterface SwapCall {\r\n  contract: Contract\r\n  parameters: SwapParameters\r\n}\r\n\r\ninterface SuccessfulCall {\r\n  call: SwapCall\r\n  gasEstimate: BigNumber\r\n}\r\n\r\ninterface FailedCall {\r\n  call: SwapCall\r\n  error: Error\r\n}\r\n\r\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\r\n\r\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param deadline the deadline for the trade\r\n * @param recipientAddressOrName\r\n */\r\nfunction useSwapCallArguments(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): SwapCall[] {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !recipient || !library || !account || !chainId) return []\r\n\r\n    const contract: Contract | null = getRouterContract(chainId, library, account)\r\n    if (!contract) {\r\n      return []\r\n    }\r\n\r\n    const swapMethods = []\r\n\r\n    swapMethods.push(\r\n      // @ts-ignore\r\n      Router.swapCallParameters(trade, {\r\n        feeOnTransfer: false,\r\n        allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\r\n        recipient,\r\n        ttl: deadline,\r\n      }),\r\n    )\r\n\r\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n      swapMethods.push(\r\n        // @ts-ignore\r\n        Router.swapCallParameters(trade, {\r\n          feeOnTransfer: true,\r\n          allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\r\n          recipient,\r\n          ttl: deadline,\r\n        }),\r\n      )\r\n    }\r\n\r\n    return swapMethods.map((parameters) => ({ parameters, contract }))\r\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\r\n}\r\n\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, deadline, recipientAddressOrName)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !library || !account || !chainId) {\r\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\r\n    }\r\n    if (!recipient) {\r\n      if (recipientAddressOrName !== null) {\r\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\r\n      }\r\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\r\n    }\r\n\r\n    return {\r\n      state: SwapCallbackState.VALID,\r\n      callback: async function onSwap(): Promise<string> {\r\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\r\n          swapCalls.map((call) => {\r\n            const {\r\n              parameters: { methodName, args, value },\r\n              contract,\r\n            } = call\r\n            const options = !value || isZero(value) ? {} : { value }\r\n\r\n            return contract.estimateGas[methodName](...args, options)\r\n              .then((gasEstimate) => {\r\n                return {\r\n                  call,\r\n                  gasEstimate,\r\n                }\r\n              })\r\n              .catch((gasError) => {\r\n                console.info('Gas estimate failed, trying eth_call to extract error', call)\r\n\r\n                return contract.callStatic[methodName](...args, options)\r\n                  .then((result) => {\r\n                    console.info('Unexpected successful call after failed estimate gas', call, gasError, result)\r\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\r\n                  })\r\n                  .catch((callError) => {\r\n                    console.info('Call threw error', call, callError)\r\n                    let errorMessage: string\r\n                    switch (callError.reason) {\r\n                      case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\r\n                      case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\r\n                        errorMessage =\r\n                          'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.'\r\n                        break\r\n                      default:\r\n                        errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`\r\n                    }\r\n                    return { call, error: new Error(errorMessage) }\r\n                  })\r\n              })\r\n          }),\r\n        )\r\n\r\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n        const successfulEstimation = estimatedCalls.find(\r\n          (el, ix, list): el is SuccessfulCall =>\r\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\r\n        )\r\n\r\n        if (!successfulEstimation) {\r\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\r\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\r\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\r\n        }\r\n\r\n        const {\r\n          call: {\r\n            contract,\r\n            parameters: { methodName, args, value },\r\n          },\r\n          gasEstimate,\r\n        } = successfulEstimation\r\n\r\n        return contract[methodName](...args, {\r\n          gasLimit: calculateGasMargin(gasEstimate),\r\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\r\n        })\r\n          .then((response: any) => {\r\n            const inputSymbol = trade.inputAmount.currency.symbol\r\n            const outputSymbol = trade.outputAmount.currency.symbol\r\n            const inputAmount = trade.inputAmount.toSignificant(3)\r\n            const outputAmount = trade.outputAmount.toSignificant(3)\r\n\r\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\r\n            const withRecipient =\r\n              recipient === account\r\n                ? base\r\n                : `${base} to ${\r\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                      ? shortenAddress(recipientAddressOrName)\r\n                      : recipientAddressOrName\r\n                  }`\r\n\r\n            addTransaction(response, {\r\n              summary: withRecipient,\r\n            })\r\n\r\n            return response.hash\r\n          })\r\n          .catch((error: any) => {\r\n            // if the user rejected the tx, pass this along\r\n            if (error?.code === 4001) {\r\n              throw new Error('Transaction rejected.')\r\n            } else {\r\n              // otherwise, the error was unexpected and we need to convey that\r\n              console.error(`Swap failed`, error, methodName, args, value)\r\n              throw new Error(`Swap failed: ${error.message}`)\r\n            }\r\n          })\r\n      },\r\n      error: null,\r\n    }\r\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\r\n}\r\n\r\nexport default useSwapCallback\r\n","import { Currency, currencyEquals, ETHER, WETH } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { tryParseAmount } from '../state/swap/hooks'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { useCurrencyBalance } from '../state/wallet/hooks'\r\nimport { useActiveWeb3React } from './index'\r\nimport { useWETHContract } from './useContract'\r\n\r\nexport enum WrapType {\r\n  NOT_APPLICABLE,\r\n  WRAP,\r\n  UNWRAP,\r\n}\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(\r\n  inputCurrency: Currency | undefined,\r\n  outputCurrency: Currency | undefined,\r\n  typedValue: string | undefined,\r\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const wethContract = useWETHContract()\r\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\r\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useMemo(() => {\r\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\r\n\r\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\r\n\r\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\r\n      return {\r\n        wrapType: WrapType.WRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\r\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} CORE to WCORE` })\r\n                } catch (error) {\r\n                  console.error('Could not deposit', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient CORE balance',\r\n      }\r\n    }\r\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\r\n      return {\r\n        wrapType: WrapType.UNWRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\r\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WCORE to CORE` })\r\n                } catch (error) {\r\n                  console.error('Could not withdraw', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient WCORE balance',\r\n      }\r\n    }\r\n    return NOT_APPLICABLE\r\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\nconst web3 = getWeb3NoAccount()\r\n\r\nconst useBlock = () => {\r\n  const [block, setBlock] = useState(0)\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const latestBlockNumber = await web3.eth.getBlockNumber()\r\n      if (block !== latestBlockNumber) {\r\n        setBlock(latestBlockNumber)\r\n      }\r\n    }, 5000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [block])\r\n\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport useBlock from './useBlock'\r\nimport { useSwapMiningContract } from './useContract'\r\nimport { useActiveWeb3React } from './index'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\n\r\nexport const useSwapMiningReward = () => {\r\n  const [swapReward, setSwapReward] = useState(0)\r\n  const block = useBlock()\r\n  const { account } = useActiveWeb3React()\r\n  const swapMiningContract = useSwapMiningContract()\r\n\r\n  const fetch = useCallback(async () => {\r\n    if (swapMiningContract) {\r\n      try {\r\n        const rewardObj = await swapMiningContract.getTotalUserReward(account)\r\n        setSwapReward(new BigNumber(rewardObj[0].toString()).div(new BigNumber(1e18)).toNumber())\r\n      } catch (e) {\r\n        setSwapReward(0)\r\n      }\r\n    }\r\n  }, [account, swapMiningContract])\r\n\r\n  useEffect(() => {\r\n    if (swapMiningContract) {\r\n      fetch()\r\n    }\r\n  }, [setSwapReward, fetch, block, account, swapMiningContract])\r\n\r\n  return swapReward\r\n}\r\n\r\nexport function useTakerWithdrawCallback(): () => Promise<void> {\r\n  const { account } = useActiveWeb3React()\r\n  const swapMiningContract = useSwapMiningContract()\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useCallback(async () => {\r\n    if (!swapMiningContract || !account) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      const txReceipt = await swapMiningContract.takerWithdraw()\r\n      addTransaction(txReceipt, { summary: 'Withdrawal swap mining reward' })\r\n    } catch (error) {\r\n      console.error('Could not withdraw', error)\r\n    }\r\n  }, [swapMiningContract, account, addTransaction])\r\n}\r\n\r\nexport default useSwapMiningReward\r\n","import { CurrencyAmount, JSBI, Token, Trade } from 'archerswap-sdk'\r\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\r\nimport { ArrowDown } from 'react-feather'\r\nimport { CardBody, ArrowDoubleIcon, Button, IconButton, Text } from 'archerswap-uikit'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport AddressInputPanel from 'components/AddressInputPanel'\r\nimport Card, { GreyCard } from 'components/Card'\r\nimport { AutoColumn } from 'components/Column'\r\nimport ConfirmSwapModal from 'components/swap/ConfirmSwapModal'\r\nimport CurrencyInputPanel from 'components/CurrencyInputPanel'\r\nimport CardNav from 'components/CardNav'\r\nimport { AutoRow, RowBetween } from 'components/Row'\r\nimport AdvancedSwapDetailsDropdown from 'components/swap/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from 'components/swap/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from 'components/swap/styleds'\r\nimport TradePrice from 'components/swap/TradePrice'\r\nimport TokenWarningModal from 'components/TokenWarningModal'\r\nimport SyrupWarningModal from 'components/SyrupWarningModal'\r\nimport ProgressSteps from 'components/ProgressSteps'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from 'constants/index'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from 'hooks/useApproveCallback'\r\nimport { useSwapCallback } from 'hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from 'hooks/useWrapCallback'\r\nimport { useSwapMiningReward, useTakerWithdrawCallback } from 'hooks/useSwapMining'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from 'state/swap/hooks'\r\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { LinkStyledButton } from 'components/Shared'\r\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\r\nimport Loader from 'components/Loader'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PageHeader from 'components/PageHeader'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport AppBody from '../AppBody'\r\nimport useTheme from '../../hooks/useTheme'\r\n\r\nconst WithdrawWrapper = styled.div<{ isDark: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1rem 1.5rem;\r\n  background: ${({ isDark }) => (isDark ? '#1A1C26' : '#EBF2FC')};\r\n  border: 1px solid ${({ isDark }) => (isDark ? '#232633' : '#E5E8EC')};\r\n  border-radius: 8px;\r\n  margin-bottom: 12px;\r\n  z-index: 5;\r\n  & div:first-child {\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n  }\r\n  & button {\r\n    border-radius: 20px;\r\n    height: 32px;\r\n  }\r\n`\r\n\r\nconst Swap = () => {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n  const { t } = useTranslation()\r\n  const { isDark } = useTheme()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\r\n  const [isSyrup, setIsSyrup] = useState<boolean>(false)\r\n  const [syrupTransactionType, setSyrupTransactionType] = useState<string>('')\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency],\r\n  )\r\n  const handleConfirmTokenWarning = useCallback(() => {\r\n    setDismissTokenWarning(true)\r\n  }, [])\r\n\r\n  const handleConfirmSyrupWarning = useCallback(() => {\r\n    setIsSyrup(false)\r\n    setSyrupTransactionType('')\r\n  }, [])\r\n\r\n  const { account } = useActiveWeb3React()\r\n  const theme = useContext(ThemeContext)\r\n\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [deadline] = useUserDeadline()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\r\n    currencies[Field.INPUT],\r\n    currencies[Field.OUTPUT],\r\n    typedValue,\r\n  )\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    showConfirm: boolean\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    showConfirm: false,\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  // const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\r\n    trade,\r\n    allowedSlippage,\r\n    deadline,\r\n    recipient,\r\n  )\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: undefined,\r\n          txHash: hash,\r\n        }))\r\n      })\r\n      .catch((error) => {\r\n        setSwapState((prevState) => ({\r\n          ...prevState,\r\n          attemptingTxn: false,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        }))\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\r\n\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [onUserInput, txHash, setSwapState])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\r\n  }, [trade])\r\n\r\n  // This will check to see if the user has selected Syrup to either buy or sell.\r\n  // If so, they will be alerted with a warning message.\r\n  const checkForSyrup = useCallback(\r\n    (selected: string, purchaseType: string) => {\r\n      if (selected === 'syrup') {\r\n        setIsSyrup(true)\r\n        setSyrupTransactionType(purchaseType)\r\n      }\r\n    },\r\n    [setIsSyrup, setSyrupTransactionType],\r\n  )\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      if (inputCurrency.symbol.toLowerCase() === 'syrup') {\r\n        checkForSyrup(inputCurrency.symbol.toLowerCase(), 'Selling')\r\n      }\r\n    },\r\n    [onCurrencySelection, setApprovalSubmitted, checkForSyrup],\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      if (outputCurrency.symbol.toLowerCase() === 'syrup') {\r\n        checkForSyrup(outputCurrency.symbol.toLowerCase(), 'Buying')\r\n      }\r\n    },\r\n    [onCurrencySelection, checkForSyrup],\r\n  )\r\n\r\n  const swapMiningReward = useSwapMiningReward()\r\n  const takerWithdraw = useTakerWithdrawCallback()\r\n\r\n  return (\r\n    <>\r\n      <TokenWarningModal\r\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\r\n        tokens={urlLoadedTokens}\r\n        onConfirm={handleConfirmTokenWarning}\r\n      />\r\n      <SyrupWarningModal\r\n        isOpen={isSyrup}\r\n        transactionType={syrupTransactionType}\r\n        onConfirm={handleConfirmSyrupWarning}\r\n      />\r\n      <CardNav />\r\n      <WithdrawWrapper isDark={isDark}>\r\n        <Text mb=\"4px\" color=\"text\">\r\n          {t('Trade Mining Reward')} {swapMiningReward.toFixed(4)} BOW\r\n        </Text>\r\n        <Button style={{ padding: '20px', borderRadius: '8px', marginLeft: 8 }} onClick={takerWithdraw}>\r\n          {t('Withdraw')}\r\n        </Button>\r\n      </WithdrawWrapper>\r\n      <AppBody>\r\n        <Wrapper id=\"swap-page\">\r\n          <ConfirmSwapModal\r\n            isOpen={showConfirm}\r\n            trade={trade}\r\n            originalTrade={tradeToConfirm}\r\n            onAcceptChanges={handleAcceptChanges}\r\n            attemptingTxn={attemptingTxn}\r\n            txHash={txHash}\r\n            recipient={recipient}\r\n            allowedSlippage={allowedSlippage}\r\n            onConfirm={handleSwap}\r\n            swapErrorMessage={swapErrorMessage}\r\n            onDismiss={handleConfirmDismiss}\r\n          />\r\n          <PageHeader title={t('Exchange')} description={t('Trade tokens in an instant')} />\r\n          <CardBody>\r\n            <AutoColumn gap=\"md\">\r\n              <CurrencyInputPanel\r\n                label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\r\n                value={formattedAmounts[Field.INPUT]}\r\n                // showMaxButton={!atMaxAmountInput}\r\n                showMaxButton={false}\r\n                maxAmount={maxAmountInput}\r\n                currency={currencies[Field.INPUT]}\r\n                onUserInput={handleTypeInput}\r\n                onMax={handleMaxInput}\r\n                onCurrencySelect={handleInputSelect}\r\n                otherCurrency={currencies[Field.OUTPUT]}\r\n                id=\"swap-currency-input\"\r\n              />\r\n              <AutoColumn justify=\"space-between\">\r\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable>\r\n                    <IconButton\r\n                      variant=\"tertiary\"\r\n                      onClick={() => {\r\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                        onSwitchTokens()\r\n                      }}\r\n                      style={{ borderRadius: '50%' }}\r\n                      scale=\"sm\"\r\n                    >\r\n                      <ArrowDoubleIcon color=\"primary\" width=\"24px\" />\r\n                    </IconButton>\r\n                  </ArrowWrapper>\r\n                  {recipient === null && !showWrap && isExpertMode ? (\r\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                      + Add a send (optional)\r\n                    </LinkStyledButton>\r\n                  ) : null}\r\n                </AutoRow>\r\n              </AutoColumn>\r\n              <CurrencyInputPanel\r\n                value={formattedAmounts[Field.OUTPUT]}\r\n                onUserInput={handleTypeOutput}\r\n                label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\r\n                showMaxButton={false}\r\n                currency={currencies[Field.OUTPUT]}\r\n                onCurrencySelect={handleOutputSelect}\r\n                otherCurrency={currencies[Field.INPUT]}\r\n                id=\"swap-currency-output\"\r\n              />\r\n\r\n              {recipient !== null && !showWrap ? (\r\n                <>\r\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                    <ArrowWrapper clickable={false}>\r\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\r\n                    </ArrowWrapper>\r\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                      - Remove send\r\n                    </LinkStyledButton>\r\n                  </AutoRow>\r\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n                </>\r\n              ) : null}\r\n\r\n              {showWrap ? null : (\r\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\r\n                  <AutoColumn gap=\"4px\">\r\n                    {Boolean(trade) && (\r\n                      <RowBetween align=\"center\">\r\n                        <Text fontSize=\"14px\">{t('Price')}</Text>\r\n                        <TradePrice\r\n                          price={trade?.executionPrice}\r\n                          showInverted={showInverted}\r\n                          setShowInverted={setShowInverted}\r\n                        />\r\n                      </RowBetween>\r\n                    )}\r\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                      <RowBetween align=\"center\">\r\n                        <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\r\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\r\n                      </RowBetween>\r\n                    )}\r\n                  </AutoColumn>\r\n                </Card>\r\n              )}\r\n            </AutoColumn>\r\n            <BottomGrouping>\r\n              {!account ? (\r\n                <ConnectWalletButton width=\"100%\" />\r\n              ) : showWrap ? (\r\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} width=\"100%\">\r\n                  {wrapInputError ??\r\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n                </Button>\r\n              ) : noRoute && userHasSpecifiedInputOutput ? (\r\n                <GreyCard style={{ textAlign: 'center' }}>\r\n                  <Text mb=\"4px\">{t('Insufficient liquidity for this trade.')}</Text>\r\n                </GreyCard>\r\n              ) : showApproveFlow ? (\r\n                <RowBetween>\r\n                  <Button\r\n                    onClick={approveCallback}\r\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                    style={{ width: '48%' }}\r\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                  >\r\n                    {approval === ApprovalState.PENDING ? (\r\n                      <AutoRow gap=\"6px\" justify=\"center\">\r\n                        Approving <Loader stroke=\"white\" />\r\n                      </AutoRow>\r\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                      'Approved'\r\n                    ) : (\r\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      if (isExpertMode) {\r\n                        handleSwap()\r\n                      } else {\r\n                        setSwapState({\r\n                          tradeToConfirm: trade,\r\n                          attemptingTxn: false,\r\n                          swapErrorMessage: undefined,\r\n                          showConfirm: true,\r\n                          txHash: undefined,\r\n                        })\r\n                      }\r\n                    }}\r\n                    style={{ width: '48%' }}\r\n                    id=\"swap-button\"\r\n                    disabled={\r\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                    }\r\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                  >\r\n                    {priceImpactSeverity > 3 && !isExpertMode\r\n                      ? `Price Impact High`\r\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\r\n                  </Button>\r\n                </RowBetween>\r\n              ) : (\r\n                <Button\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        showConfirm: true,\r\n                        txHash: undefined,\r\n                      })\r\n                    }\r\n                  }}\r\n                  id=\"swap-button\"\r\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                  width=\"100%\"\r\n                >\r\n                  {swapInputError ||\r\n                    (priceImpactSeverity > 3 && !isExpertMode\r\n                      ? t('Price Impact Too High')\r\n                      : priceImpactSeverity > 2\r\n                      ? t('Swap Anyway')\r\n                      : t('Swap'))}\r\n                </Button>\r\n              )}\r\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\r\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n            </BottomGrouping>\r\n          </CardBody>\r\n        </Wrapper>\r\n      </AppBody>\r\n      <AdvancedSwapDetailsDropdown trade={trade} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Swap\r\n","import { Percent } from 'archerswap-sdk'\r\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../constants'\r\n\r\n/**\r\n * Given the price impact, get user confirmation.\r\n *\r\n * @param priceImpactWithoutFee price impact of the trade without the fee.\r\n */\r\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\r\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\r\n    return (\r\n      window.prompt(\r\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\r\n          0,\r\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\r\n      ) === 'confirm'\r\n    )\r\n  }\r\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\r\n    return window.confirm(\r\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\r\n        0,\r\n      )}%. Please confirm that you would like to continue with this swap.`,\r\n    )\r\n  }\r\n  return true\r\n}\r\n"],"sourceRoot":""}