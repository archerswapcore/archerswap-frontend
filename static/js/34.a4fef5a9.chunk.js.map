{"version":3,"sources":["hooks/useTokenBalance.ts","hooks/useApproveConfirmTransaction.ts","hooks/useGetWalletNfts.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","call","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useNFTBalance","ownedTokensIds","setOwnedTokensIds","isLoading","setIsLoading","getErc721Contract","tokensOfOwner","tokenIds","tokensData","map","tokenId","tokenURI","uri","fetch","data","json","metadata","Promise","all","then","values","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","initialState","approvalState","isWhitelisted","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onWhitelisted","onConfirm","onRequiresApproval","onSuccess","noop","useReducer","dispatch","toastError","useToast","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","console","handleConfirm","pancakeRabbitsContract","getPancakeRabbitContract","nfts","lastUpdated","Date","now","action","timestamp","useGetWalletNfts","getTokenIdAndBunnyId","index","tokenOfOwnerByIndex","getBunnyId","makeBatchRequest","bunnyId","tokenUri","Number","tokenIdPromises","i","push","tokenIdsOwnedByWallet","reduce","accum","association","fetchNfts","refresh","HeaderWrapper","styled","div","theme","colors","textSubtle","ComingSoon","children","t","useTranslation","flexDirection","alignItems","justifyContent","p","width","height","as","size","color","SecondaryCard","Text","tertiary","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","props","mr","textTransform","fontSize","bold","ExistingUserState","REGISTER_COST","STARTER_BUNNY_IDS","isInitialized","currentStep","teamId","userName","minimumCakeRequired","MINT_COST","multipliedBy","totalCost","step","ProfileCreationContext","createContext","ProfileCreationProvider","isSubscribed","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","steps","translationId","label","Header","useContext","mb","WalletNotConnected","UnlockButton","useHasCakeBalance","minimumBalance","getBowAddress","gte","StyledCard","Card","isSuccess","Label","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","checked","e","target","style","flex","NextStepButton","endIcon","StyledApprovConfirmButtons","mediaQueries","md","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","undefined","useProfileCreation","nftList","filter","nft","includes","minimumCakeBalanceToMint","Mint","setBunnyId","useBow","useBunnyFactory","hasMinimumCakeRequired","options","response","currentAllowance","toJSON","mintNFT","num","images","parseInt","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","nftsInWallet","usePancakeRabbits","bunnyIds","Object","keys","nftWalletItem","walletNfts","length","to","marginLeft","walletNft","firstTokenId","getPancakeProfileAddress","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","team","id","isJoinable","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useDispatch","toastSuccess","createProfile","fetchProfile","Views","profileApiUrl","process","REACT_APP_API_PROFILE","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknoledged","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","ok","personal","sign","signature","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","scale","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","setRefresh","checkClaimStatus","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","fetchCosts","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","getFullDisplayBalance","PauseProfilePage","setIsAcknowledged","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","getPancakeRabbitsAddress","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","fallback","Description","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","tokenIdsInWallet","nftInWallet","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","PrizeIcon","Profile","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/34.a4fef5a9.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getBowContract, getErc721Contract, getFactoryContract } from 'utils/contractHelpers'\r\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport const useETHBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useWcoreBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.allowance(account, targetAddress).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && targetAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\r\n\r\n  return allowance\r\n}\r\n\r\nexport const useApprove = () => {\r\n  const [approvePending, setApprovePending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n\r\n  const handleApprove = useCallback(\r\n    async (targetAddress: string, contractAddress: string) => {\r\n      try {\r\n        setApprovePending(true)\r\n        const contract = getBep20Contract(contractAddress, web3)\r\n        const tx = await contract.methods\r\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\r\n          .send({ from: account })\r\n        setApprovePending(false)\r\n        return tx\r\n      } catch (e) {\r\n        setApprovePending(false)\r\n        return false\r\n      }\r\n    },\r\n    [web3, account],\r\n  )\r\n\r\n  return { onApprove: handleApprove, approvePending }\r\n}\r\n\r\nexport const useTokenSymbol = (tokenAddress: string) => {\r\n  const [symbol, setSymbol] = useState('')\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.symbol().call()\r\n      setSymbol(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return symbol\r\n}\r\n\r\nexport const useTokenDecimal = (tokenAddress: string) => {\r\n  const [decimal, setDecimal] = useState(0)\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.decimals().call()\r\n      setDecimal(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return decimal\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useNFTBalance = (tokenAddress: string) => {\r\n  const [ownedTokensIds, setOwnedTokensIds] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      setIsLoading(true)\r\n      const contract = getErc721Contract(tokenAddress, web3)\r\n      const tokenIds = await contract.methods.tokensOfOwner(account).call()\r\n      const tokensData = tokenIds.map(async (tokenId) => {\r\n        const uri = await contract.methods.tokenURI(tokenId).call()\r\n        const data = await fetch(uri)\r\n        const metadata = await data.json()\r\n        return { tokenId, ...metadata }\r\n      })\r\n      Promise.all(tokensData).then((values) => setOwnedTokensIds(values))\r\n      setIsLoading(false)\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return { isLoading, ownedTokensIds }\r\n}\r\n\r\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = getWeb3NoAccountFromChain(chainId)\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && chainId) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const bowContract = getBowContract()\r\n      const supply = await bowContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useCirculatingBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const bowContract = getBowContract()\r\n      const [tRes, res0, res1, res2] = await Promise.all([\r\n        bowContract.methods.totalSupply().call(),\r\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\r\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\r\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\r\n      ])\r\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\r\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const usePairsLength = () => {\r\n  const [pairsLength, setPairsLength] = useState(0)\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchPairsLength = async () => {\r\n      const contract = getFactoryContract(web3)\r\n      const res = await contract.methods.allPairsLength().call()\r\n      setPairsLength(res)\r\n    }\r\n\r\n    fetchPairsLength()\r\n  }, [web3, slowRefresh])\r\n\r\n  return pairsLength\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useEffect, useReducer } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToast } from 'state/hooks'\r\n\r\ntype Web3Payload = Record<string, unknown> | null\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'requires_not_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'requires_whitelist'; payload: boolean }\r\n  | { type: 'approve_receipt'; payload: Web3Payload }\r\n  | { type: 'approve_error'; payload: Web3Payload }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt'; payload: Web3Payload }\r\n  | { type: 'confirm_error'; payload: Web3Payload }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  isWhitelisted: boolean\r\n  approvalReceipt: Web3Payload\r\n  approvalError: Web3Payload\r\n  confirmState: LoadingState\r\n  confirmReceipt: Web3Payload\r\n  confirmError: Web3Payload\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  isWhitelisted: false,\r\n  approvalReceipt: null,\r\n  approvalError: null,\r\n  confirmState: 'idle',\r\n  confirmReceipt: null,\r\n  confirmError: null,\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'requires_not_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n      }\r\n    case 'requires_whitelist':\r\n      return {\r\n        ...state,\r\n        isWhitelisted: actions.payload,\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n        approvalReceipt: actions.payload,\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n        approvalError: actions.payload,\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n        confirmReceipt: actions.payload,\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n        confirmError: actions.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype ContractHandler = () => any\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onWhitelisted?: ContractHandler\r\n  onApprove: ContractHandler\r\n  onConfirm: ContractHandler\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: (state: State) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onWhitelisted,\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account) {\r\n      onRequiresApproval().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        } else {\r\n          dispatch({ type: 'requires_not_approval' })\r\n        }\r\n      })\r\n      if (onWhitelisted) {\r\n        onWhitelisted().then((result) => {\r\n          dispatch({ type: 'requires_whitelist', payload: result })\r\n        })\r\n      }\r\n    }\r\n  }, [account, onWhitelisted, onRequiresApproval, dispatch])\r\n\r\n  return {\r\n    isWhitelisted: state.isWhitelisted,\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    approvalReceipt: state.approvalReceipt,\r\n    approvalError: state.approvalError,\r\n    confirmReceipt: state.confirmReceipt,\r\n    confirmError: state.confirmError,\r\n    handleApprove: () => {\r\n      onApprove()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'approve_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'approve_receipt', payload })\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'approve_error', payload: error })\r\n          console.error('An error occurred approving transaction:', error)\r\n          toastError('An error occurred approving transaction')\r\n        })\r\n    },\r\n    handleConfirm: () => {\r\n      onConfirm()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'confirm_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'confirm_receipt', payload })\r\n          onSuccess(state)\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'confirm_error', payload: error })\r\n          console.error('An error occurred confirming transaction:', error)\r\n          toastError('An error occurred confirming transaction')\r\n        })\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport { useEffect, useReducer } from 'react'\r\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nconst pancakeRabbitsContract = getPancakeRabbitContract()\r\n\r\nexport type NftMap = {\r\n  [key: number]: {\r\n    tokenUri: string\r\n    tokenIds: number[]\r\n  }\r\n}\r\n\r\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' } | { type: 'refresh'; timestamp: number }\r\n\r\ntype State = {\r\n  isLoading: boolean\r\n  nfts: NftMap\r\n  lastUpdated: number\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoading: true,\r\n  nfts: {},\r\n  lastUpdated: Date.now(),\r\n}\r\n\r\nconst reducer = (state: State, action: Action) => {\r\n  switch (action.type) {\r\n    case 'set_nfts':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n        nfts: action.data,\r\n      }\r\n    case 'refresh':\r\n      return {\r\n        ...initialState,\r\n        lastUpdated: action.timestamp,\r\n      }\r\n    case 'reset':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useGetWalletNfts = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated } = state\r\n\r\n  useEffect(() => {\r\n    const fetchNfts = async () => {\r\n      try {\r\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\r\n\r\n        if (balanceOf > 0) {\r\n          let nfts: NftMap = {}\r\n\r\n          const getTokenIdAndBunnyId = async (index: number) => {\r\n            try {\r\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\r\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\r\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\r\n\r\n              return [Number(bunnyId), Number(tokenId), tokenUri]\r\n            } catch (error) {\r\n              return null\r\n            }\r\n          }\r\n\r\n          const tokenIdPromises = []\r\n\r\n          for (let i = 0; i < balanceOf; i++) {\r\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\r\n          }\r\n\r\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\r\n\r\n          nfts = tokenIdsOwnedByWallet.reduce((accum, association) => {\r\n            if (!association) {\r\n              return accum\r\n            }\r\n\r\n            const [bunnyId, tokenId, tokenUri] = association\r\n\r\n            return {\r\n              ...accum,\r\n              [bunnyId]: {\r\n                tokenUri,\r\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\r\n              },\r\n            }\r\n          }, {})\r\n\r\n          dispatch({ type: 'set_nfts', data: nfts })\r\n        } else {\r\n          // Reset it in case of wallet change\r\n          dispatch({ type: 'reset' })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'reset' })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchNfts()\r\n    }\r\n  }, [account, lastUpdated, dispatch])\r\n\r\n  const refresh = () => dispatch({ type: 'refresh', timestamp: Date.now() })\r\n\r\n  return { ...state, refresh }\r\n}\r\n\r\nexport default useGetWalletNfts\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import React from 'react'\r\nimport { BunnyPlaceholderIcon, Flex, Heading } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ComingSoonProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\r\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\r\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\r\n        {children || t('Coming Soon!')}\r\n      </Heading>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ComingSoon\r\n","import styled from 'styled-components'\r\nimport { Text } from 'archerswap-uikit'\r\n\r\nconst SecondaryCard = styled(Text)`\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n`\r\n\r\nSecondaryCard.defaultProps = {\r\n  p: '24px',\r\n}\r\n\r\nexport default SecondaryCard\r\n","import React, { ElementType, ReactNode } from 'react'\r\nimport { Flex, Heading, Text, TextProps } from 'archerswap-uikit'\r\nimport SecondaryCard from './SecondaryCard'\r\n\r\ninterface StatBoxProps extends TextProps {\r\n  icon: ElementType\r\n  title: ReactNode\r\n  subtitle: ReactNode\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\r\n  return (\r\n    <SecondaryCard {...props}>\r\n      <Flex alignItems=\"start\">\r\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\r\n        <div>\r\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\r\n            {title}\r\n          </Heading>\r\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\r\n            {subtitle}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n    </SecondaryCard>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from 'archerswap-uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToast } from 'state/hooks'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport debounce from 'lodash/debounce'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\r\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknoledged] = useState(false)\r\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const web3 = useWeb3()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      tokenId={tokenId}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\r\n\r\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(data?.error?.message)\r\n      }\r\n    } catch (error: any) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknoledge = () => setIsAcknoledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(`Created ${dateCreated} ago`)\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError('Error: Unable to verify username')\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t(`Step ${4}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {t('Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {t('Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={t('Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {t(\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknoledge} />\r\n              </div>\r\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {t('Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\r\n        {t('Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {t(`A minimum of ${REGISTER_COST} CAKE is required`, { num: REGISTER_COST })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n","export const MINT_COST = 1\r\nexport const REGISTER_COST = 0.5\r\nexport const ALLOWANCE_MULTIPLIER = 5\r\nexport const STARTER_BUNNY_IDS = [5, 6, 7, 8, 9]\r\nexport const USERNAME_MIN_LENGTH = 3\r\nexport const USERNAME_MAX_LENGTH = 15\r\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST + REGISTER_COST\r\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  tokenId: null,\r\n  userName: '',\r\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(new BigNumber(10).pow(18)),\r\n  allowance: new BigNumber(allowance).multipliedBy(new BigNumber(10).pow(18)),\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_tokenid':\r\n      return {\r\n        ...state,\r\n        tokenId: action.tokenId,\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = [\r\n  { translationId: 776, label: 'Get Starter Collectible' },\r\n  { translationId: 778, label: 'Set Profile Picture' },\r\n  { translationId: 780, label: 'Join Team' },\r\n  { translationId: 782, label: 'Set Name' },\r\n]\r\n\r\nconst Header: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\r\n        {t('Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\r\n        {t('Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"24px\">\r\n        {t('Total cost: 1.5 CAKE')}\r\n      </Text>\r\n      <Breadcrumbs>\r\n        {steps.map(({ label }, index) => {\r\n          return (\r\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {t(label)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Heading, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <div>\r\n      <Heading size=\"xl\" mb=\"8px\">\r\n        {t('Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {t('Please connect your wallet to continue')}\r\n      </Text>\r\n      <UnlockButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n","import BigNumber from 'bignumber.js'\r\nimport { getBowAddress } from 'utils/addressHelpers'\r\nimport useTokenBalance from './useTokenBalance'\r\n\r\n/**\r\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\r\n */\r\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\r\n  const cakeBalance = useTokenBalance(getBowAddress())\r\n  return cakeBalance.gte(minimumBalance)\r\n}\r\n\r\nexport default useHasCakeBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from 'archerswap-uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\r\n  border-radius: 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px 0 0 16px;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n","import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from 'archerswap-uikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst StyledApprovConfirmButtons = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledApprovConfirmButtons>\r\n      <Box>\r\n        <Button\r\n          disabled={isApproveDisabled}\r\n          onClick={onApprove}\r\n          endIcon={isApproving ? spinnerIcon : undefined}\r\n          isLoading={isApproving}\r\n        >\r\n          {isApproving ? t('Approving') : t('Approve')}\r\n        </Button>\r\n      </Box>\r\n      <Flex justifyContent=\"center\">\r\n        <ChevronRight />\r\n        <ChevronBottom />\r\n      </Flex>\r\n      <Box>\r\n        <Button\r\n          onClick={onConfirm}\r\n          disabled={isConfirmDisabled}\r\n          isLoading={isConfirming}\r\n          endIcon={isConfirming ? spinnerIcon : undefined}\r\n        >\r\n          {isConfirming ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      </Box>\r\n    </StyledApprovConfirmButtons>\r\n  )\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, Heading, Text } from 'archerswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useBow, useBunnyFactory } from 'hooks/useContract'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport nftList from 'config/constants/nfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_BUNNY_IDS } from './config'\r\n\r\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDS.includes(nft.bunnyId))\r\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\r\n\r\nconst Mint: React.FC = () => {\r\n  const [bunnyId, setBunnyId] = useState(null)\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n\r\n  const { account } = useWeb3React()\r\n  const bowContract = useBow()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const { t } = useTranslation()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      // TODO: Move this to a helper, this check will be probably be used many times\r\n      try {\r\n        const response = await bowContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gte(minimumCakeRequired)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return bowContract.methods\r\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\r\n        .send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return bunnyFactoryContract.methods.mintNFT(bunnyId).send({ from: account })\r\n    },\r\n    onSuccess: () => actions.nextStep(),\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t(`Step ${1}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {t('Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {t('Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {t(`Cost: ${MINT_COST} CAKE`, { num: MINT_COST })}\r\n          </Text>\r\n          {nfts.map((nft) => {\r\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft.bunnyId}\r\n                name=\"mintStarter\"\r\n                value={nft.bunnyId}\r\n                image={`/images/nfts/${nft.images.md}`}\r\n                isChecked={bunnyId === nft.bunnyId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {t(`A minimum of ${MINT_COST} CAKE is required`)}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from 'archerswap-uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport nftList from 'config/constants/nfts'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useToast } from 'state/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { usePancakeRabbits } from 'hooks/useContract'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { tokenId, actions } = useContext(ProfileCreationContext)\r\n  const { t } = useTranslation()\r\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  const handleApprove = () => {\r\n    pancakeRabbitsContract.methods\r\n      .approve(getPancakeProfileAddress(), tokenId)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsApproving(true)\r\n      })\r\n      .on('receipt', () => {\r\n        setIsApproving(false)\r\n        setIsApproved(true)\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsApproving(false)\r\n      })\r\n  }\r\n\r\n  if (!isLoading && walletNfts.length === 0) {\r\n    return (\r\n      <>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {t('Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {t(\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t(`Step ${2}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {t('Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {t('Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Only approved Pancake Collectibles can be used.')}\r\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\r\n              {t('See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {isLoading ? (\r\n              <Skeleton height=\"80px\" mb=\"16px\" />\r\n            ) : (\r\n              walletNfts.map((walletNft) => {\r\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\r\n\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={walletNft.bunnyId}\r\n                    value={firstTokenId}\r\n                    image={`/images/nfts/${walletNft.images.md}`}\r\n                    isChecked={firstTokenId === tokenId}\r\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })\r\n            )}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {t('Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t(\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n          >\r\n            {t('Approve')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from 'archerswap-uikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\ninterface Team {\r\n  name: string\r\n  description: string\r\n  isJoinable: boolean\r\n}\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const { t } = useTranslation()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {t(`Step ${3}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {t('Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {t('Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t(\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {t('Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import React from 'react'\r\nimport { Modal, Flex, Text } from 'archerswap-uikit'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useBow, usePancakeRabbits, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport { useToast } from 'state/hooks'\r\nimport { REGISTER_COST } from '../ProfileCreation/config'\r\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\r\n\r\ninterface Props {\r\n  userName: string\r\n  tokenId: number\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: BigNumber\r\n  allowance: BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  tokenId,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const profileContract = useProfile()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const dispatch = useDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const bowContract = useBow()\r\n\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      try {\r\n        const response = await bowContract.methods.allowance(account, profileContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gte(minimumCakeRequired)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return bowContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return profileContract.methods\r\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\r\n        .send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      await dispatch(fetchProfile(account))\r\n      onDismiss()\r\n      toastSuccess('Profile created!')\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{t('Cost')}</Text>\r\n        <Text>{t(`${REGISTER_COST} CAKE`, { num: REGISTER_COST })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n","import { useReducer } from 'react'\r\n\r\nexport enum Views {\r\n  START = 'start',\r\n  CHANGE = 'change',\r\n  REMOVE = 'remove',\r\n  APPROVE = 'approve',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'set_view'\r\n      view: Views\r\n    }\r\n  | {\r\n      type: 'go_previous'\r\n    }\r\n\r\nexport interface State {\r\n  currentView: Views\r\n  previousView: Views | null\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'set_view':\r\n      return {\r\n        ...state,\r\n        currentView: action.view,\r\n        previousView: state.currentView,\r\n      }\r\n    case 'go_previous':\r\n      return {\r\n        ...state,\r\n        currentView: state.previousView,\r\n        previousView: state.currentView,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport interface UseEditProfileResponse extends State {\r\n  goToStart: () => void\r\n  goToChange: () => void\r\n  goToApprove: () => void\r\n  goToRemove: () => void\r\n  goPrevious: () => void\r\n}\r\n\r\nconst useEditProfile = (): UseEditProfileResponse => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    currentView: Views.START,\r\n    previousView: null,\r\n  })\r\n\r\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\r\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\r\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\r\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\r\n  const goPrevious = () => dispatch({ type: 'go_previous' })\r\n\r\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\r\n}\r\n\r\nexport default useEditProfile\r\n","import React, { useContext } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport NoWalletConnected from '../components/WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n","import React from 'react'\r\nimport Page from 'components/layout/Page'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => (\r\n  <ProfileCreationProvider>\r\n    <Page>\r\n      <Header />\r\n      <Steps />\r\n    </Page>\r\n  </ProfileCreationProvider>\r\n)\r\n\r\nexport default ProfileCreation\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from 'archerswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToast } from 'state/hooks'\r\nimport { useClaimRefundContract } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimRefundContract } from 'utils/contractHelpers'\r\n\r\ninterface ClaimGiftProps extends InjectedModalProps {\r\n  onSuccess: () => void\r\n}\r\n\r\nexport const useCanClaim = () => {\r\n  const [canClaim, setCanClaim] = useState(false)\r\n  const [refresh, setRefresh] = useState(1)\r\n  const { account } = useWeb3React()\r\n\r\n  const checkClaimStatus = useCallback(() => {\r\n    setRefresh((prevRefresh) => prevRefresh + 1)\r\n  }, [setRefresh])\r\n\r\n  useEffect(() => {\r\n    const fetchClaimStatus = async () => {\r\n      const claimRefundContract = getClaimRefundContract()\r\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\r\n      setCanClaim(walletCanClaim)\r\n    }\r\n\r\n    if (account) {\r\n      fetchClaimStatus()\r\n    }\r\n  }, [account, refresh, setCanClaim])\r\n\r\n  return { canClaim, checkClaimStatus }\r\n}\r\n\r\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { canClaim } = useCanClaim()\r\n  const claimRefundContract = useClaimRefundContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n\r\n  const handleClick = () => {\r\n    claimRefundContract.methods\r\n      .getCakeBack()\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsConfirming(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess('Success!')\r\n        onSuccess()\r\n        onDismiss()\r\n      })\r\n      .on('error', (error) => {\r\n        setIsConfirming(false)\r\n        toastError('Error', error?.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\r\n      <div style={{ maxWidth: '640px' }}>\r\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t(\r\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\">{t(\"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {t(\"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\")}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"24px\">\r\n          {t(\r\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\r\n          )}\r\n        </Text>\r\n        <Button\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          isLoading={isConfirming}\r\n          onClick={handleClick}\r\n          disabled={!canClaim}\r\n        >\r\n          {t('Claim Your CAKE')}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimGift\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { useToast } from 'state/hooks'\r\n\r\nconst useGetProfileCosts = () => {\r\n  const [costs, setCosts] = useState({\r\n    numberCakeToReactivate: new BigNumber(0),\r\n    numberCakeToRegister: new BigNumber(0),\r\n    numberCakeToUpdate: new BigNumber(0),\r\n  })\r\n  const { toastError } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchCosts = async () => {\r\n      try {\r\n        const profileContract = getProfileContract()\r\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\r\n          profileContract.methods.numberCakeToReactivate().call,\r\n          profileContract.methods.numberCakeToRegister().call,\r\n          profileContract.methods.numberCakeToUpdate().call,\r\n        ])\r\n\r\n        setCosts({\r\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\r\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\r\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\r\n        })\r\n      } catch (error) {\r\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\r\n      }\r\n    }\r\n\r\n    fetchCosts()\r\n  }, [setCosts, toastError])\r\n\r\n  return costs\r\n}\r\n\r\nexport default useGetProfileCosts\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon } from 'archerswap-uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  height: 24px;\r\n  position: absolute;\r\n  right: 0px;\r\n  width: 24px;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n    height: 48px;\r\n    width: 48px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  height: 64px;\r\n  position: relative;\r\n  width: 64px;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n// TODO: replace with no provile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatar\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Flex, Text, InjectedModalProps } from 'archerswap-uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { useBow } from 'hooks/useContract'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useProfile } from 'state/hooks'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { UseEditProfileResponse } from './reducer'\r\nimport ProfileAvatar from '../ProfileAvatar'\r\n\r\ninterface StartPageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n  goToRemove: UseEditProfileResponse['goToRemove']\r\n  goToApprove: UseEditProfileResponse['goToApprove']\r\n}\r\n\r\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\r\n  border-color: ${({ theme }) => theme.colors.failure};\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  margin-bottom: 24px;\r\n\r\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\r\n    border-color: ${({ theme }) => theme.colors.failure};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\r\n  const [needsApproval, setNeedsApproval] = useState(null)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(profile.isActive ? numberCakeToUpdate : numberCakeToReactivate)\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const bowContract = useBow()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  /**\r\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\r\n   * If they don't, we send them to the approval screen first\r\n   */\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      const response = await bowContract.methods.allowance(account, getPancakeProfileAddress()).call()\r\n      const currentAllowance = new BigNumber(response)\r\n      setNeedsApproval(currentAllowance.lt(cost))\r\n    }\r\n\r\n    if (account) {\r\n      checkApprovalStatus()\r\n    }\r\n  }, [account, cost, setNeedsApproval, bowContract])\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n      <ProfileAvatar profile={profile} />\r\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\r\n        <Text as=\"p\" color=\"failure\">\r\n          {!hasMinimumCakeRequired &&\r\n            t(`${getFullDisplayBalance(numberCakeToUpdate)} CAKE required to change profile pic`)}\r\n        </Text>\r\n      </Flex>\r\n      {profile.isActive ? (\r\n        <>\r\n          <Button\r\n            width=\"100%\"\r\n            mb=\"8px\"\r\n            onClick={needsApproval === true ? goToApprove : goToChange}\r\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n          >\r\n            {t('Change Profile Pic')}\r\n          </Button>\r\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\r\n            {t('Remove Profile Pic')}\r\n          </DangerOutline>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          width=\"100%\"\r\n          mb=\"8px\"\r\n          onClick={needsApproval === true ? goToApprove : goToChange}\r\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n        >\r\n          {t('Reactivate Profile')}\r\n        </Button>\r\n      )}\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n","import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useProfile, useToast } from 'state/hooks'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ntype PauseProfilePageProps = InjectedModalProps\r\n\r\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToReactivate } = useGetProfileCosts()\r\n  const { t } = useTranslation()\r\n  const pancakeProfileContract = useProfileContract()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  const handleDeactivateProfile = () => {\r\n    pancakeProfileContract.methods\r\n      .pauseProfile()\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsConfirming(true)\r\n      })\r\n      .on('receipt', async () => {\r\n        // Re-fetch profile\r\n        await dispatch(fetchProfile(account))\r\n        toastSuccess('Profile Paused!')\r\n\r\n        onDismiss()\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsConfirming(false)\r\n      })\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\r\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t(\r\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t(`Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\r\n      </Text>\r\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\r\n          <Text ml=\"8px\">{t('I understand')}</Text>\r\n        </Flex>\r\n      </label>\r\n      <Button\r\n        width=\"100%\"\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={!isAcknowledged || isConfirming}\r\n        onClick={handleDeactivateProfile}\r\n        mb=\"8px\"\r\n      >\r\n        {t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PauseProfilePage\r\n","import React, { useState } from 'react'\r\nimport { Button, InjectedModalProps, Skeleton, Text } from 'archerswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport nftList from 'config/constants/nfts'\r\nimport { useProfile, useToast } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\r\nimport SelectionCard from '../SelectionCard'\r\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\r\n\r\ntype ChangeProfilePicPageProps = InjectedModalProps\r\n\r\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\r\n  const [tokenId, setTokenId] = useState(null)\r\n  const { t } = useTranslation()\r\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\r\n  const dispatch = useDispatch()\r\n  const { profile } = useProfile()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const profileContract = useProfileContract()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess } = useToast()\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onApprove: () => {\r\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      if (!profile.isActive) {\r\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\r\n      }\r\n\r\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      // Re-fetch profile\r\n      await dispatch(fetchProfile(account))\r\n      toastSuccess('Profile Updated!')\r\n\r\n      onDismiss()\r\n    },\r\n  })\r\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {t('Choose a new Collectible to use as your profile pic.')}\r\n      </Text>\r\n      {isLoading ? (\r\n        <Skeleton height=\"80px\" mb=\"16px\" />\r\n      ) : (\r\n        walletNfts.map((walletNft) => {\r\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\r\n\r\n          return (\r\n            <SelectionCard\r\n              name=\"profilePicture\"\r\n              key={walletNft.bunnyId}\r\n              value={firstTokenId}\r\n              image={`/images/nfts/${walletNft.images.md}`}\r\n              isChecked={firstTokenId === tokenId}\r\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\r\n              disabled={isApproving || isConfirming || isConfirmed}\r\n            >\r\n              <Text bold>{walletNft.name}</Text>\r\n            </SelectionCard>\r\n          )\r\n        })\r\n      )}\r\n      {!isLoading && walletNfts.length === 0 && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\r\n          </Text>\r\n        </>\r\n      )}\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChangeProfilePicPage\r\n","import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useBow } from 'hooks/useContract'\r\nimport { useProfile, useToast } from 'state/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useGetProfileCosts from '../../hooks/useGetProfileCosts'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface ApproveCakePageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n}\r\n\r\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const bowContract = useBow()\r\n  const { toastError } = useToast()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  const handleApprove = () => {\r\n    bowContract.methods\r\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsApproving(true)\r\n      })\r\n      .on('receipt', () => {\r\n        goToChange()\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsApproving(false)\r\n      })\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\r\n        <Text>{t(`${getFullDisplayBalance(cost)} CAKE`)}</Text>\r\n      </Flex>\r\n      <Button\r\n        disabled={isApproving}\r\n        isLoading={isApproving}\r\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={handleApprove}\r\n      >\r\n        {t('Approve')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveCakePage\r\n","import React from 'react'\r\nimport { InjectedModalProps, Modal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useEditProfile, { Views } from './reducer'\r\nimport StartView from './StartView'\r\nimport PauseProfileView from './PauseProfileView'\r\nimport ChangeProfilePicView from './ChangeProfilePicView'\r\nimport ApproveCakeView from './ApproveCakeView'\r\n\r\ntype EditProfileModalProps = InjectedModalProps\r\n\r\nconst viewTitle = {\r\n  [Views.START]: { id: 999, label: 'Edit Profile' },\r\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\r\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\r\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\r\n}\r\n\r\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\r\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\r\n  const { t } = useTranslation()\r\n  const { label } = viewTitle[currentView]\r\n\r\n  const isStartView = currentView === Views.START\r\n  const handleBack = isStartView ? null : () => goPrevious()\r\n\r\n  return (\r\n    <Modal title={t(label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\r\n      <div style={{ maxWidth: '400px' }}>\r\n        {currentView === Views.START && (\r\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\r\n        )}\r\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\r\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\r\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditProfileModal\r\n","import React from 'react'\r\nimport { Button, Flex, Heading, useModal, Won } from 'archerswap-uikit'\r\nimport { useProfile } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\r\nimport HeaderWrapper from './HeaderWrapper'\r\nimport EditProfileModal from './EditProfileModal'\r\n\r\nconst ProfileHeader = () => {\r\n  const { t } = useTranslation()\r\n  const { canClaim, checkClaimStatus } = useCanClaim()\r\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n  const { hasProfile } = useProfile()\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Flex\r\n        flexDirection={['column', null, 'row']}\r\n        alignItems={['start', null, 'center']}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <div>\r\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\r\n            {t('Your Profile')}\r\n          </Heading>\r\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\r\n            {t('Check your stats and collect achievements')}\r\n          </Heading>\r\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\r\n        </div>\r\n        {canClaim && (\r\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\r\n            {t(\"You've got a gift to claim!\")}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader\r\n","import React, { ImgHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BunnyPlaceholderIcon } from 'archerswap-uikit'\r\n\r\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\r\n  badge?: string\r\n}\r\n\r\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst StyledAchievementAvatar = styled.img`\r\n  border-radius: 50%;\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\r\n  if (!badge) {\r\n    return <NoBadgePlaceholder />\r\n  }\r\n\r\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\r\n}\r\n\r\nexport default AchievementAvatar\r\n","import React from 'react'\r\nimport { Text, TextProps } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslatableText as AchievementTitleType } from 'state/types'\r\n\r\ninterface AchievementTitleProps extends TextProps {\r\n  title: AchievementTitleType\r\n}\r\n\r\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  if (typeof title === 'string') {\r\n    return (\r\n      <Text bold {...props}>\r\n        {title}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { fallback, data = {} } = title\r\n\r\n  return (\r\n    <Text bold {...props}>\r\n      {t(fallback, data)}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default AchievementTitle\r\n","import React from 'react'\r\nimport { Text, TextProps } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\ninterface AchievementDescriptionProps extends TextProps {\r\n  description?: AchievementDescriptionType\r\n}\r\n\r\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\r\n  const { t } = useTranslation()\r\n\r\n  if (!description) {\r\n    return null\r\n  }\r\n\r\n  if (typeof description === 'string') {\r\n    return (\r\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\r\n        {description}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { fallback, data = {} } = description\r\n\r\n  return (\r\n    <Description color=\"textSubtle\" {...props}>\r\n      {t(fallback, data)}\r\n    </Description>\r\n  )\r\n}\r\n\r\nexport default AchievementDescription\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, PrizeIcon, Text } from 'archerswap-uikit'\r\nimport { Achievement } from 'state/types'\r\nimport AchievementAvatar from './AchievementAvatar'\r\nimport AchievementTitle from './AchievementTitle'\r\nimport AchievementDescription from './AchievementDescription'\r\n\r\ninterface AchievementCardProps {\r\n  achievement: Achievement\r\n}\r\n\r\nconst Details = styled(Flex)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n`\r\n\r\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\r\n  return (\r\n    <Flex>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Details>\r\n        <AchievementTitle title={achievement.title} />\r\n        <AchievementDescription description={achievement.description} />\r\n      </Details>\r\n      <Flex alignItems=\"center\">\r\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\r\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AchievementCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAchievements } from 'state/hooks'\r\nimport AchievementCard from './AchievementCard'\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: 1fr;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`\r\n\r\nconst AchievementsList = () => {\r\n  const { t } = useTranslation()\r\n  const achievements = useAchievements()\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        {achievements.map((achievement) => (\r\n          <AchievementCard key={achievement.id} achievement={achievement} />\r\n        ))}\r\n      </Grid>\r\n      {achievements.length === 0 && (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\r\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\r\n            {t('No achievements yet!')}\r\n          </Heading>\r\n        </Flex>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AchievementsList\r\n","import styled from 'styled-components'\r\n\r\nconst ActionColumn = styled.div`\r\n  flex: none;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 160px;\r\n\r\n    & > button {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ActionColumn\r\n","import React from 'react'\r\nimport { Flex, FlexProps, PrizeIcon, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface PointsLabelProps extends FlexProps {\r\n  points: number\r\n}\r\n\r\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const localePoints = points.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" {...props}>\r\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\r\n      <Text color=\"textSubtle\">{t(`${localePoints} points`, { num: localePoints })}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PointsLabel\r\n","import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Flex } from 'archerswap-uikit'\r\nimport { Achievement } from 'state/types'\r\nimport { useToast } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePointCenterIfoContract } from 'hooks/useContract'\r\nimport ActionColumn from '../ActionColumn'\r\nimport PointsLabel from './PointsLabel'\r\nimport AchievementTitle from '../AchievementTitle'\r\nimport AchievementAvatar from '../AchievementAvatar'\r\nimport AchievementDescription from '../AchievementDescription'\r\n\r\ninterface AchievementRowProps {\r\n  achievement: Achievement\r\n  onCollectSuccess?: (achievement: Achievement) => void\r\n}\r\n\r\nconst StyledAchievementRow = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  padding-bottom: 16px;\r\n  padding-top: 16px;\r\n`\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Body = styled(Flex)`\r\n  flex-direction: column;\r\n  flex: 1;\r\n  margin-left: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    align-items: center;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\r\n  const [isCollecting, setIsCollecting] = useState(false)\r\n  const { t } = useTranslation()\r\n  const pointCenterContract = usePointCenterIfoContract()\r\n  const { account } = useWeb3React()\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  const handleCollectPoints = () => {\r\n    pointCenterContract.methods\r\n      .getPoints(achievement.address)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsCollecting(true)\r\n      })\r\n      .on('receipt', () => {\r\n        setIsCollecting(false)\r\n        onCollectSuccess(achievement)\r\n        toastSuccess('Points Collected!')\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsCollecting(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <StyledAchievementRow>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Body>\r\n        <Details>\r\n          <AchievementTitle title={achievement.title} />\r\n          <AchievementDescription description={achievement.description} />\r\n        </Details>\r\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\r\n        <ActionColumn>\r\n          <Button\r\n            onClick={handleCollectPoints}\r\n            isLoading={isCollecting}\r\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n            disabled={isCollecting}\r\n            variant=\"secondary\"\r\n          >\r\n            {t('Collect')}\r\n          </Button>\r\n        </ActionColumn>\r\n      </Body>\r\n    </StyledAchievementRow>\r\n  )\r\n}\r\n\r\nexport default AchievementRow\r\n","import React, { useEffect, useState } from 'react'\r\nimport { sumBy } from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from 'archerswap-uikit'\r\nimport { useProfile } from 'state/hooks'\r\nimport { Achievement } from 'state/types'\r\nimport { addPoints } from 'state/profile'\r\nimport { addAchievement } from 'state/achievements'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getClaimableIfoData } from 'utils/achievements'\r\nimport AchievementRow from './AchievementRow'\r\n\r\nconst ClaimPointsCallout = () => {\r\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const { profile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const fetchIfoClaims = async () => {\r\n      const ifoData = await getClaimableIfoData(account)\r\n      setClaimableAchievement(ifoData)\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoClaims()\r\n    }\r\n  }, [account, dispatch, setClaimableAchievement])\r\n\r\n  const handleCollectSuccess = (achievement: Achievement) => {\r\n    dispatch(addAchievement(achievement))\r\n    dispatch(addPoints(achievement.points))\r\n\r\n    setClaimableAchievement((prevClaimableAchievements) =>\r\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\r\n    )\r\n  }\r\n\r\n  if (!profile?.isActive) {\r\n    return null\r\n  }\r\n\r\n  if (claimableAchievements.length === 0) {\r\n    return null\r\n  }\r\n\r\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\r\n\r\n  return (\r\n    <Card isActive mb=\"32px\">\r\n      <CardHeader>\r\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\r\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\r\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\r\n            <Heading size=\"lg\">{t(`${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}</Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {claimableAchievements.map((achievement) => (\r\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ClaimPointsCallout\r\n","import { useTranslation } from 'contexts/Localization'\r\nimport React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\r\n\r\ninterface MenuProps {\r\n  activeIndex?: number\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Flex mb=\"24px\">\r\n        <RouterLink to=\"/teams\">\r\n          <Flex alignItems=\"center\">\r\n            <ChevronLeftIcon color=\"primary\" />\r\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\r\n          </Flex>\r\n        </RouterLink>\r\n      </Flex>\r\n\r\n      <Flex mb=\"24px\" justifyContent=\"center\">\r\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\r\n            {t('Task Center')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\r\n            {t('Public Profile')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport AchievementsList from './components/AchievementsList'\r\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\r\nimport ComingSoon from './components/ComingSoon'\r\nimport Menu from './components/Menu'\r\n\r\nconst TaskCenter = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <ClaimPointsCallout />\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading size=\"lg\" mb=\"8px\">\r\n                {t('Achievements')}\r\n              </Heading>\r\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <AchievementsList />\r\n        </CardBody>\r\n      </Card>\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading size=\"lg\" mb=\"8px\">\r\n                {t('Task Center')}\r\n              </Heading>\r\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\r\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskCenter\r\n","import styled, { DefaultTheme } from 'styled-components'\r\nimport { CardHeader as UIKitCardHeader } from 'archerswap-uikit'\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst CardHeader = styled(UIKitCardHeader)`\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  position: relative;\r\n`\r\n\r\nexport default CardHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { Nft } from 'config/constants/types'\r\n\r\ninterface CollectibleCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst PreviewImage = styled.img`\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\r\n  return (\r\n    <div>\r\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\r\n      <Text bold mb=\"8px\">\r\n        {nft.name}\r\n      </Text>\r\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\r\n        {nft.description}\r\n      </Text>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollectibleCard\r\n","import React from 'react'\r\nimport { Heading, Text, Flex, ChevronRightIcon } from 'archerswap-uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport nfts from 'config/constants/nfts'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport styled from 'styled-components'\r\nimport CollectibleCard from './CollectibleCard'\r\n\r\nconst CollectibleList = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 24px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 24px 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n`\r\n\r\nconst Collectibles = () => {\r\n  const { t } = useTranslation()\r\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\r\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  return (\r\n    <>\r\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\r\n        {t('Pancake Collectibles')}\r\n      </Heading>\r\n      <Text as=\"p\">\r\n        {t('Pancake Collectibles are special ERC-721 NFTs that can be used on the ArcherSwap platform.')}\r\n      </Text>\r\n      <Text as=\"p\">\r\n        {t(\"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\")}\r\n      </Text>\r\n      {nftsInWallet.length > 0 && (\r\n        <CollectibleList>\r\n          {nftsInWallet.map((nftInWallet) => (\r\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\r\n          ))}\r\n        </CollectibleList>\r\n      )}\r\n      {nftsInWallet.length === 0 && (\r\n        <Flex justifyContent=\"center\" p=\"32px\">\r\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\r\n            {t('No NFTs Found')}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\r\n        <Link to=\"/collectibles\">{t('See all approved Pancake Collectibles')}</Link>\r\n        <ChevronRightIcon />\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collectibles\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useModal } from 'archerswap-uikit'\r\nimport EditProfileModal from './EditProfileModal'\r\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\r\n\r\nconst EditOverlay = styled.div`\r\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\r\n  background-size: 24px;\r\n  border-radius: 50%;\r\n  left: 0;\r\n  height: 100%;\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: opacity 300ms;\r\n  width: 100%;\r\n  z-index: 3;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    background-size: 48px;\r\n  }\r\n`\r\n\r\nconst StyledEditProfileAvatar = styled.div`\r\n  position: relative;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n\r\n    ${EditOverlay} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n\r\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n\r\n  return (\r\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\r\n      <ProfileAvatar profile={profile} />\r\n      <EditOverlay />\r\n    </StyledEditProfileAvatar>\r\n  )\r\n}\r\n\r\nexport default EditProfileAvatar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  Heading,\r\n  Link,\r\n  Tag,\r\n  Text,\r\n  PrizeIcon,\r\n  OpenNewIcon,\r\n  BlockIcon,\r\n} from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useProfile } from 'state/hooks'\r\nimport Menu from './components/Menu'\r\nimport CardHeader from './components/CardHeader'\r\nimport Collectibles from './components/Collectibles'\r\nimport WalletNotConnected from './components/WalletNotConnected'\r\nimport StatBox from './components/StatBox'\r\nimport EditProfileAvatar from './components/EditProfileAvatar'\r\nimport AchievementsList from './components/AchievementsList'\r\n\r\nconst Content = styled.div`\r\n  flex: 1;\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 0 16px;\r\n  }\r\n`\r\n\r\nconst Username = styled(Heading)`\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  margin-bottom: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 40px;\r\n    line-height: 44px;\r\n  }\r\n`\r\n\r\nconst Status = styled.div`\r\n  position: absolute;\r\n  right: 24px;\r\n  top: 24px;\r\n`\r\n\r\nconst ResponsiveText = styled(Text)`\r\n  font-size: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst AddressLink = styled(Link)`\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 80px;\r\n  white-space: nowrap;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst PublicProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const { profile } = useProfile()\r\n  const { t } = useTranslation()\r\n\r\n  if (!account) {\r\n    return <WalletNotConnected />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu activeIndex={1} />\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\r\n              <EditProfileAvatar profile={profile} />\r\n              <Content>\r\n                <Username>{`@${profile.username}`}</Username>\r\n                <Flex alignItems=\"center\">\r\n                  <AddressLink href={`https://scan.coredao.org/address/${account}`} color=\"text\" external>\r\n                    {account}\r\n                  </AddressLink>\r\n                  <OpenNewIcon ml=\"4px\" />\r\n                </Flex>\r\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\r\n              </Content>\r\n            </Flex>\r\n            <Status>\r\n              {profile.isActive ? (\r\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\r\n                  {t('Active')}\r\n                </Tag>\r\n              ) : (\r\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\r\n                  {t('Paused')}\r\n                </Tag>\r\n              )}\r\n            </Status>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={t('Points')} mb=\"24px\" />\r\n            <Section>\r\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\r\n                {t('Achievements')}\r\n              </Heading>\r\n              <AchievementsList />\r\n            </Section>\r\n            <Collectibles />\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PublicProfile\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport Page from 'components/layout/Page'\r\nimport PageLoader from 'components/PageLoader'\r\nimport { useFetchAchievements, useProfile } from 'state/hooks'\r\nimport ProfileCreation from './ProfileCreation'\r\nimport Header from './components/Header'\r\nimport TaskCenter from './TaskCenter'\r\nimport PublicProfile from './PublicProfile'\r\n\r\nconst Profile = () => {\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useFetchAchievements()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && !hasProfile) {\r\n    return (\r\n      <Page>\r\n        <ProfileCreation />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Header />\r\n      <Route exact path=\"/profile\">\r\n        <PublicProfile />\r\n      </Route>\r\n      <Route path=\"/profile/tasks\">\r\n        <TaskCenter />\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n"],"sourceRoot":""}