{"version":3,"sources":["hooks/useTokenBalance.ts","views/Disperse/Disperse.tsx","hooks/useMultiTransfer.ts"],"names":["useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","call","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useNFTBalance","ownedTokensIds","setOwnedTokensIds","isLoading","setIsLoading","getErc721Contract","tokensOfOwner","tokenIds","tokensData","map","tokenId","tokenURI","uri","fetch","data","json","metadata","Promise","all","then","values","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","ViewEnum","Background","styled","div","Container","Title","props","theme","colors","text","Description","TabContainer","TabItem","active","tertiary","textSubtle","InputContainer","TokenInput","input","borderColor","InputButton","Balance","AddressInput","textarea","CardContainer","background","Confirm","bow","TableContainer","TableItem","TableTitle","TableContent","ItemContainer","Item","ItemTitle","textDisabled","ItemTitle1","ButtonContainer","NFTWrapper","isMobile","NFTRow","NFTCard","isDark","MultiTransfer","useTheme","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","tempTokenAddress","setTempTokenAddress","setTokenAddress","nftTokenAddress","setNFTTokenAddress","selectedNFT","setSelectedNFT","ethBalance","tokenBalance","nftBalanceLoading","nftBalance","getMultiAddress","pending","setPending","mutiContract","useMuti","useToast","toastError","toastSuccess","onMultiTransfer","addresses","amounts","totalAmount","disperseEther","value","useMutiTransfer","pendingToken","setPendingToken","onTokenMultiTransfer","token","disperseToken","useTokenMutiTransfer","useNormalTransferToken","isTransferLoading","transferToken","CORE","view","setView","validAddress","setValidAddress","needApprove","setNeedApprove","inputedText","setInputedText","nftRecipientAddress","setNftRecipientAddress","addressArray","setAddressArray","amountArray","setAmountArray","setTotalAmount","validAmount","setValidAmount","ownedNFTsIds","setOwnedNFTsIds","gte","TOKEN","NFT","length","gt","lt","tempAddress","tempAmount","tempTAmount","arrayText","split","i","addressStartIndex","getAddressIndex","amountData","substring","amountStartIndex","getAmountIndex","amount","parseFloat","push","getMultifyBigNumber","start","startIndex","indexOf","Web3","utils","isAddress","charAt","NFTGrid","cols","arr","slice","style","border","onClick","width","src","image","alt","fontSize","paddingTop","paddingBottom","name","Banner","mobileSrc","title","white","Page","maxWidth","placeholder","onChange","e","target","color","getBalanceBigNumber","toFormat","index","getFullDisplayBalance","disabled"],"mappings":"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","file":"static/js/40.a0625f83.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getBowContract, getErc721Contract, getFactoryContract } from 'utils/contractHelpers'\r\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport const useETHBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useWcoreBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.allowance(account, targetAddress).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && targetAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\r\n\r\n  return allowance\r\n}\r\n\r\nexport const useApprove = () => {\r\n  const [approvePending, setApprovePending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n\r\n  const handleApprove = useCallback(\r\n    async (targetAddress: string, contractAddress: string) => {\r\n      try {\r\n        setApprovePending(true)\r\n        const contract = getBep20Contract(contractAddress, web3)\r\n        const tx = await contract.methods\r\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\r\n          .send({ from: account })\r\n        setApprovePending(false)\r\n        return tx\r\n      } catch (e) {\r\n        setApprovePending(false)\r\n        return false\r\n      }\r\n    },\r\n    [web3, account],\r\n  )\r\n\r\n  return { onApprove: handleApprove, approvePending }\r\n}\r\n\r\nexport const useTokenSymbol = (tokenAddress: string) => {\r\n  const [symbol, setSymbol] = useState('')\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.symbol().call()\r\n      setSymbol(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return symbol\r\n}\r\n\r\nexport const useTokenDecimal = (tokenAddress: string) => {\r\n  const [decimal, setDecimal] = useState(0)\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.decimals().call()\r\n      setDecimal(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return decimal\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useNFTBalance = (tokenAddress: string) => {\r\n  const [ownedTokensIds, setOwnedTokensIds] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      setIsLoading(true)\r\n      const contract = getErc721Contract(tokenAddress, web3)\r\n      const tokenIds = await contract.methods.tokensOfOwner(account).call()\r\n      const tokensData = tokenIds.map(async (tokenId) => {\r\n        const uri = await contract.methods.tokenURI(tokenId).call()\r\n        const data = await fetch(uri)\r\n        const metadata = await data.json()\r\n        return { tokenId, ...metadata }\r\n      })\r\n      Promise.all(tokensData).then((values) => setOwnedTokensIds(values))\r\n      setIsLoading(false)\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return { isLoading, ownedTokensIds }\r\n}\r\n\r\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = getWeb3NoAccountFromChain(chainId)\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && chainId) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const bowContract = getBowContract()\r\n      const supply = await bowContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useCirculatingBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const bowContract = getBowContract()\r\n      const [tRes, res0, res1, res2] = await Promise.all([\r\n        bowContract.methods.totalSupply().call(),\r\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\r\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\r\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\r\n      ])\r\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\r\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const usePairsLength = () => {\r\n  const [pairsLength, setPairsLength] = useState(0)\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchPairsLength = async () => {\r\n      const contract = getFactoryContract(web3)\r\n      const res = await contract.methods.allPairsLength().call()\r\n      setPairsLength(res)\r\n    }\r\n\r\n    fetchPairsLength()\r\n  }, [web3, slowRefresh])\r\n\r\n  return pairsLength\r\n}\r\n\r\nexport default useTokenBalance\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useState, useEffect } from 'react'\r\nimport Web3 from 'web3'\r\nimport styled from 'styled-components'\r\nimport Page from 'components/layout/Page'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { getBalanceBigNumber, getMultifyBigNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport BigNumber from 'bignumber.js'\r\nimport useTokenBalance, {\r\n  useETHBalance,\r\n  useTokenAllowance,\r\n  useApprove,\r\n  useTokenSymbol,\r\n  useTokenDecimal,\r\n  useNFTBalance,\r\n} from 'hooks/useTokenBalance'\r\nimport { useNormalTransferToken } from 'hooks/useNftMarketplace'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useMutiTransfer, useTokenMutiTransfer } from 'hooks/useMultiTransfer'\r\nimport { getMultiAddress } from 'utils/addressHelpers'\r\nimport { useWalletModal, Button } from 'archerswap-uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Banner from '../../components/Banner'\r\nimport 'react-multi-carousel/lib/styles.css'\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n`\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\nconst Title = styled.div`\r\n  text-align: center;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n  color: ${(props) => props.theme.colors.text};\r\n  padding-top: 32px;\r\n`\r\nconst Description = styled.div`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  color: ${(props) => props.theme.colors.text};\r\n  padding-top: 16px;\r\n  opacity: 0.8;\r\n`\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst TabItem = styled.div<{ active: boolean }>`\r\n  display: flex;\r\n  padding: 11px 57px;\r\n  background: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.tertiary)};\r\n  border-radius: 32px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\r\n  z-index: ${(props) => (props.active ? '1' : '0')};\r\n  margin: 32px -18px;\r\n  cursor: pointer;\r\n`\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\nconst TokenInput = styled.input`\r\n  margin: 16px 0px;\r\n  max-width: 800px;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  color: ${(props) => props.theme.colors.textSubtle};\r\n  background: ${(props) => props.theme.colors.tertiary};\r\n  padding: 14px 32px;\r\n  border: solid 1px ${(props) => props.theme.colors.borderColor};\r\n  border-radius: 10px;\r\n`\r\nconst InputButton = styled.div`\r\n  background: linear-gradient(265.22deg, #ed952e 0%, #f7ce47 100%);\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 14px 32px;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n`\r\nconst Balance = styled.div`\r\n  text-align: center;\r\n  font-size: 24px;\r\n  line-height: 24px;\r\n  color: ${(props) => props.theme.colors.textSubtle};\r\n  font-weight: 500;\r\n  margin-bottom: 15px;\r\n`\r\nconst AddressInput = styled.textarea`\r\n  margin: 16px 0px;\r\n  max-width: 800px;\r\n  width: 100%;\r\n  min-height: 120px;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  color: ${(props) => props.theme.colors.textSubtle};\r\n  background: ${(props) => props.theme.colors.tertiary};\r\n  padding: 10px 15px;\r\n  border: solid 1px ${(props) => props.theme.colors.borderColor};\r\n  border-radius: 10px;\r\n  &::placeholder {\r\n    color: ${(props) => props.theme.colors.textSubtle};\r\n  }\r\n`\r\nconst CardContainer = styled.div`\r\n  background: ${(props) => props.theme.colors.background};\r\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\r\n  border-radius: 16px;\r\n  max-width: 800px;\r\n  width: 100%;\r\n  margin: 15px 0px;\r\n  padding: 32px 24px;\r\n`\r\nconst Confirm = styled.div`\r\n  text-align: center;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n  color: ${(props) => props.theme.colors.bow};\r\n`\r\nconst TableContainer = styled.div`\r\n  background: ${(props) => props.theme.colors.tertiary};\r\n  border-radius: 7px;\r\n  margin-top: 24px;\r\n  padding: 32px 26px;\r\n`\r\nconst TableItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 2px 0px;\r\n`\r\nconst TableTitle = styled.div`\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  color: ${(props) => props.theme.colors.text};\r\n  opacity: 0.8;\r\n`\r\nconst TableContent = styled.div`\r\n  font-size: 12px;\r\n  line-height: 18px;\r\n  color: #999999;\r\n`\r\nconst ItemContainer = styled.div`\r\n  padding: 10px 0px;\r\n`\r\nconst Item = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 10px 26px;\r\n`\r\nconst ItemTitle = styled.div`\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  color: ${(props) => props.theme.colors.textDisabled};\r\n`\r\nconst ItemTitle1 = styled.div<{ active: boolean }>`\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  color: ${(props) => (props.active ? props.theme.colors.textDisabled : 'red')};\r\n`\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 30px;\r\n`\r\n\r\nconst NFTWrapper = styled.div`\r\n  display: flex;\r\n  margin: 16px 0px;\r\n  height: 270px;\r\n  max-width: 850px;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  max-width: 800px;\r\n  overflow-y: scroll;\r\n  padding: ${isMobile ? '10px' : '20px'};\r\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\r\n  background: ${(props) => props.theme.colors.tertiary};\r\n  border-radius: 10px;\r\n`\r\n\r\nconst NFTRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 20px;\r\n`\r\n\r\nconst NFTCard = styled.div<any>`\r\n  margin: 0px 6px;\r\n  display: flex;\r\n  flex: 0 0 10em;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${({ isDark }) => (isDark ? 'rgba(255,255,255,.2)' : 'white')};\r\n  color: ${({ isDark }) => (isDark ? 'white' : 'black')};\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\r\n  cursor: pointer;\r\n`\r\n\r\nenum ViewEnum {\r\n  CORE = 'CORE',\r\n  TOKEN = 'Token',\r\n  NFT = 'NFT',\r\n}\r\n\r\nconst MultiTransfer: React.FC = () => {\r\n  const { isDark } = useTheme()\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n  const addressLength = 43\r\n  const [tempTokenAddress, setTempTokenAddress] = useState<string>()\r\n  const [tokenAddress, setTokenAddress] = useState<string>()\r\n  const [nftTokenAddress, setNFTTokenAddress] = useState<string>()\r\n  const [selectedNFT, setSelectedNFT] = useState<string>(null)\r\n  const { account } = useWeb3React()\r\n  const ethBalance = useETHBalance()\r\n  const tokenBalance = useTokenBalance(tokenAddress)\r\n  const { isLoading: nftBalanceLoading, ownedTokensIds: nftBalance } = useNFTBalance(nftTokenAddress)\r\n  const symbol = useTokenSymbol(tokenAddress)\r\n  const decimal = useTokenDecimal(tokenAddress)\r\n  const allowance = useTokenAllowance(tokenAddress, getMultiAddress())\r\n  const { onMultiTransfer, pending } = useMutiTransfer()\r\n  const { onTokenMultiTransfer, pendingToken } = useTokenMutiTransfer()\r\n  const { onApprove, approvePending } = useApprove()\r\n  const [isTransferLoading, , transferToken] = useNormalTransferToken(nftTokenAddress)\r\n\r\n  const [view, setView] = useState<ViewEnum>(ViewEnum.CORE)\r\n  const [validAddress, setValidAddress] = useState<boolean>(false)\r\n  const [needApprove, setNeedApprove] = useState<boolean>(false)\r\n\r\n  const [inputedText, setInputedText] = useState<string>()\r\n  const [nftRecipientAddress, setNftRecipientAddress] = useState<string>()\r\n  const [addressArray, setAddressArray] = useState<string[]>([])\r\n  const [amountArray, setAmountArray] = useState<string[]>([])\r\n  const [totalAmount, setTotalAmount] = useState<BigNumber>(new BigNumber(0))\r\n  const [validAmount, setValidAmount] = useState<boolean>(true)\r\n  const [ownedNFTsIds, setOwnedNFTsIds] = useState<string[]>([])\r\n\r\n  useEffect(() => {\r\n    if (view === ViewEnum.CORE) {\r\n      if (ethBalance.gte(totalAmount)) {\r\n        setValidAmount(true)\r\n      } else {\r\n        setValidAmount(false)\r\n      }\r\n    } else if (view === ViewEnum.TOKEN) {\r\n      // eslint-disable-next-line no-lonely-if\r\n      if (tokenBalance.gte(totalAmount)) {\r\n        setValidAmount(true)\r\n      } else {\r\n        setValidAmount(false)\r\n      }\r\n    } else if (view === ViewEnum.NFT) {\r\n      setValidAmount(true)\r\n      setOwnedNFTsIds(nftBalance)\r\n    }\r\n  }, [ethBalance, totalAmount, tokenBalance, nftBalance, ownedNFTsIds, view])\r\n\r\n  useEffect(() => {\r\n    if (ownedNFTsIds.length > 0) {\r\n      setValidAmount(true)\r\n    } else {\r\n      setValidAmount(false)\r\n    }\r\n  }, [ownedNFTsIds])\r\n\r\n  useEffect(() => {\r\n    setAddressArray([])\r\n    setAmountArray([])\r\n    setTotalAmount(new BigNumber(0))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [view])\r\n\r\n  useEffect(() => {\r\n    if (view === ViewEnum.TOKEN) {\r\n      if (totalAmount.gt(new BigNumber(0)) && allowance.lt(totalAmount)) {\r\n        setNeedApprove(true)\r\n      } else {\r\n        setNeedApprove(false)\r\n      }\r\n    } else {\r\n      setNeedApprove(false)\r\n    }\r\n  }, [allowance, totalAmount, view])\r\n\r\n  useEffect(() => {\r\n    if (inputedText) {\r\n      const tempAddress = []\r\n      const tempAmount = []\r\n      let tempTAmount = new BigNumber(0)\r\n      const arrayText = inputedText.split('\\n')\r\n      for (let i = 0; i < arrayText.length; i++) {\r\n        const data = arrayText[i]\r\n        if (data && data.length > addressLength) {\r\n          const addressStartIndex = getAddressIndex(data, 0)\r\n          const amountData = data.substring(addressStartIndex + addressLength)\r\n          const amountStartIndex = getAmountIndex(amountData)\r\n          const amount = amountData.substring(amountStartIndex)\r\n          if (parseFloat(amount)) {\r\n            tempAddress.push(data.substring(addressStartIndex, addressStartIndex + addressLength - 1))\r\n            tempAmount.push(\r\n              getMultifyBigNumber(new BigNumber(parseFloat(amount)), view === ViewEnum.TOKEN ? decimal : 18).toString(),\r\n            )\r\n            tempTAmount = tempTAmount.plus(\r\n              getMultifyBigNumber(new BigNumber(parseFloat(amount)), view === ViewEnum.TOKEN ? decimal : 18),\r\n            )\r\n          }\r\n        }\r\n      }\r\n      setAddressArray(tempAddress)\r\n      setAmountArray(tempAmount)\r\n      setTotalAmount(tempTAmount)\r\n    } else {\r\n      setAddressArray([])\r\n      setAmountArray([])\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [inputedText])\r\n\r\n  const getAddressIndex = (data: string, start: number) => {\r\n    const startIndex = data.indexOf('0x', start)\r\n\r\n    if (startIndex === -1) {\r\n      return startIndex\r\n    }\r\n    if (startIndex + addressLength > data.length) {\r\n      return -1\r\n    }\r\n\r\n    const isValidAddress = Web3.utils.isAddress(data.substring(startIndex, startIndex + addressLength - 1))\r\n    if (isValidAddress) {\r\n      return startIndex\r\n    }\r\n    return getAddressIndex(data, startIndex + 2)\r\n  }\r\n\r\n  const getAmountIndex = (data: string) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data.charAt(i) >= '0' && data.charAt(i) <= '9') {\r\n        return i\r\n      }\r\n    }\r\n    return -1\r\n  }\r\n\r\n  const onSendETH = () => {\r\n    if (view === ViewEnum.TOKEN) {\r\n      if (needApprove) {\r\n        onApprove(getMultiAddress(), tokenAddress)\r\n      } else {\r\n        onTokenMultiTransfer(tokenAddress, addressArray, amountArray)\r\n      }\r\n    } else {\r\n      onMultiTransfer(addressArray, amountArray, totalAmount)\r\n    }\r\n  }\r\n\r\n  const onSendNFT = () => {\r\n    transferToken(account, nftRecipientAddress, selectedNFT)\r\n  }\r\n\r\n  const NFTGrid = () => {\r\n    const cols = isMobile ? 2 : 4\r\n    return (\r\n      <>\r\n        {(() => {\r\n          const arr = []\r\n          for (let i = 0; i < ownedNFTsIds.length; i += cols) {\r\n            arr.push(\r\n              <NFTRow key={i}>\r\n                {ownedNFTsIds.slice(i, i + cols).map((token: any) => (\r\n                  <>\r\n                    <NFTCard\r\n                      isDark={isDark}\r\n                      key={token.tokenId}\r\n                      style={{ border: selectedNFT === token.tokenId ? '2px solid #EAAA08' : '' }}\r\n                      onClick={() => setSelectedNFT(token.tokenId)}\r\n                    >\r\n                      <img style={{ width: '100%' }} src={token.image} alt=\"nft\" />\r\n                      <h1 style={{ fontSize: 23, paddingTop: 10, paddingBottom: 10 }}> {token.name} </h1>\r\n                    </NFTCard>\r\n                  </>\r\n                ))}\r\n              </NFTRow>,\r\n            )\r\n          }\r\n          return arr\r\n        })()}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Background>\r\n      <Banner\r\n        src=\"/images/assets/banners/multisender_banner.png\"\r\n        mobileSrc=\"/images/assets/banners/mobile_multisender_banner.png\"\r\n        alt=\"disperse_banner\"\r\n        title={t('Free Token Multisender')}\r\n        text={t('Distribute CORE or tokens to multiple addresses')}\r\n        white\r\n      />\r\n      <Page>\r\n        <Container>\r\n          <TabContainer>\r\n            <TabItem\r\n              active={view === ViewEnum.CORE}\r\n              onClick={() => {\r\n                setView(ViewEnum.CORE)\r\n              }}\r\n            >\r\n              CORE\r\n            </TabItem>\r\n            <TabItem\r\n              active={view === ViewEnum.TOKEN}\r\n              onClick={() => {\r\n                setView(ViewEnum.TOKEN)\r\n                setTokenAddress('')\r\n                setTempTokenAddress('')\r\n                setValidAddress(false)\r\n              }}\r\n            >\r\n              {t('Token')}\r\n            </TabItem>\r\n            <TabItem\r\n              active={view === ViewEnum.NFT}\r\n              onClick={() => {\r\n                setView(ViewEnum.NFT)\r\n                setTokenAddress('')\r\n                setTempTokenAddress('')\r\n                setValidAddress(false)\r\n              }}\r\n            >\r\n              {t('NFT')}\r\n            </TabItem>\r\n          </TabContainer>\r\n          {view !== ViewEnum.CORE ? (\r\n            <div style={{ width: '100%', maxWidth: 800 }}>\r\n              <Title>{t(`${view} Address`)}</Title>\r\n              <InputContainer>\r\n                <TokenInput\r\n                  value={tempTokenAddress}\r\n                  placeholder={\r\n                    view === ViewEnum.NFT\r\n                      ? '0x54DF7dDF83CfB078E074D4331E9f956A2ec12b61'\r\n                      : '0xD6170A12b133005fAbCf877d636340a4B183b16585123'\r\n                  }\r\n                  onChange={(e) => {\r\n                    setTempTokenAddress(e.target.value)\r\n                  }}\r\n                />\r\n                <InputButton\r\n                  onClick={() => {\r\n                    if (view === ViewEnum.NFT) {\r\n                      const isValidAddress = Web3.utils.isAddress(tempTokenAddress)\r\n                      if (isValidAddress) {\r\n                        setValidAddress(true)\r\n                        setNFTTokenAddress(tempTokenAddress)\r\n                      } else {\r\n                        setValidAddress(false)\r\n                      }\r\n                    } else {\r\n                      const isValidAddress = Web3.utils.isAddress(tempTokenAddress)\r\n                      if (isValidAddress) {\r\n                        setValidAddress(true)\r\n                        setTokenAddress(tempTokenAddress)\r\n                      } else {\r\n                        setValidAddress(false)\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {nftBalanceLoading ? t('LOADING...') : t('Load')}\r\n                </InputButton>\r\n              </InputContainer>\r\n              {view === ViewEnum.NFT ? (\r\n                <>\r\n                  {validAddress && ownedNFTsIds.length > 0 ? (\r\n                    <>\r\n                      <Balance>\r\n                        {t('You have %balance%', {\r\n                          balance: `${ownedNFTsIds.length} NFTs`,\r\n                        })}\r\n                      </Balance>\r\n                    </>\r\n                  ) : (\r\n                    <Balance style={{ color: '#6E7B9B' }}>{t('Incorrect address')}</Balance>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {validAddress && decimal > 0 ? (\r\n                    <Balance>\r\n                      {t('You have %balance%', {\r\n                        balance: `${getBalanceBigNumber(tokenBalance, decimal).toFormat(\r\n                          5,\r\n                        )} ${symbol} (ERC 20, ${decimal}{' '}\r\n                      Decimals)`,\r\n                      })}\r\n                    </Balance>\r\n                  ) : (\r\n                    <Balance style={{ color: '#6E7B9B' }}>{t('Incorrect address')}</Balance>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          ) : view === ViewEnum.CORE ? (\r\n            <Balance>{t('You have %balance% CORE', { balance: getBalanceBigNumber(ethBalance).toFormat(5) })}</Balance>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {view !== ViewEnum.NFT ? (\r\n            <>\r\n              <Title>{t('Recipients and amounts')}</Title>\r\n              <Description>\r\n                {t('Enter one address and amounts in %symbol% on each line, supports any format.', {\r\n                  symbol: view === ViewEnum.TOKEN ? 'Token' : 'CORE',\r\n                })}\r\n              </Description>\r\n\r\n              <AddressInput\r\n                placeholder=\"0xD6170A12b133005fAbCf877d636340a4B183b16585123&#10;0xD6170A12b133005fAbCf877d636340a4B183b1658-123&#10;0xD6170A12b133005fAbCf877d636340a4B183b1658=123\"\r\n                value={inputedText}\r\n                onChange={(e) => setInputedText(e.target.value)}\r\n              />\r\n            </>\r\n          ) : (\r\n            <>\r\n              {validAddress && ownedNFTsIds.length > 0 ? (\r\n                <>\r\n                  <Description>\r\n                    {t('Select the NFT you want to send and enter the recipient address below', {\r\n                      symbol: view,\r\n                    })}\r\n                  </Description>\r\n                  <NFTWrapper>\r\n                    <NFTGrid />\r\n                  </NFTWrapper>\r\n\r\n                  <Title>{t('Recipient Address')}</Title>\r\n                  <TokenInput\r\n                    placeholder=\"0xD6170A12b133005fAbCf877d636340a4B183b16585123\"\r\n                    value={nftRecipientAddress}\r\n                    onChange={(e) => setNftRecipientAddress(e.target.value)}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          )}\r\n          <CardContainer>\r\n            <Confirm>{t('Confirm')}</Confirm>\r\n            <TableContainer>\r\n              <TableItem>\r\n                <TableTitle>{t('Address')}</TableTitle>\r\n                {view === ViewEnum.NFT ? (\r\n                  <TableTitle>{t('Token ID')}</TableTitle>\r\n                ) : (\r\n                  <TableTitle>{t('Amount')}</TableTitle>\r\n                )}\r\n              </TableItem>\r\n              {view !== ViewEnum.NFT ? (\r\n                <>\r\n                  {addressArray.map((address, index) => {\r\n                    return (\r\n                      <TableItem key={index.toString()}>\r\n                        <TableContent>{address}</TableContent>\r\n                        <TableContent>\r\n                          {getFullDisplayBalance(\r\n                            new BigNumber(amountArray[index]),\r\n                            view === ViewEnum.TOKEN ? decimal : 18,\r\n                          )}{' '}\r\n                          {view === ViewEnum.TOKEN ? symbol : 'CORE'}\r\n                        </TableContent>\r\n                      </TableItem>\r\n                    )\r\n                  })}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <TableItem>\r\n                    <TableContent>{nftRecipientAddress}</TableContent>\r\n                    <TableContent>{selectedNFT}</TableContent>\r\n                  </TableItem>\r\n                </>\r\n              )}\r\n            </TableContainer>\r\n            {view !== ViewEnum.NFT ? (\r\n              <>\r\n                <ItemContainer>\r\n                  <Item>\r\n                    <ItemTitle>{t('Total')}</ItemTitle>\r\n                    <ItemTitle>\r\n                      {getBalanceBigNumber(totalAmount, view === ViewEnum.TOKEN ? decimal : 18).toFormat(5)}{' '}\r\n                      {view === ViewEnum.TOKEN ? symbol : 'CORE'}\r\n                    </ItemTitle>\r\n                  </Item>\r\n                  <Item>\r\n                    <ItemTitle>{t('Your balance')}</ItemTitle>\r\n                    <ItemTitle>\r\n                      {getBalanceBigNumber(\r\n                        view === ViewEnum.TOKEN ? tokenBalance : ethBalance,\r\n                        view === ViewEnum.TOKEN ? decimal : 18,\r\n                      ).toFormat(5)}{' '}\r\n                      {view === ViewEnum.TOKEN ? symbol : 'CORE'}\r\n                    </ItemTitle>\r\n                  </Item>\r\n                  <Item>\r\n                    <ItemTitle1 active={validAmount}>{t('Remaining')}</ItemTitle1>\r\n                    <ItemTitle1 active={validAmount}>\r\n                      {getBalanceBigNumber(\r\n                        view === ViewEnum.TOKEN ? tokenBalance.minus(totalAmount) : ethBalance.minus(totalAmount),\r\n                        view === ViewEnum.TOKEN ? decimal : 18,\r\n                      ).toFormat(5)}{' '}\r\n                      {view === ViewEnum.TOKEN ? symbol : 'CORE'}\r\n                    </ItemTitle1>\r\n                  </Item>\r\n                </ItemContainer>\r\n                <ButtonContainer>\r\n                  <Button\r\n                    width=\"100%\"\r\n                    disabled={\r\n                      pending ||\r\n                      pendingToken ||\r\n                      approvePending ||\r\n                      addressArray.length === 0 ||\r\n                      amountArray.length === 0 ||\r\n                      !validAmount\r\n                    }\r\n                    onClick={() => {\r\n                      if (!account) {\r\n                        onPresentConnectModal()\r\n                      } else if (validAmount && !pending) {\r\n                        onSendETH()\r\n                      }\r\n                    }}\r\n                  >\r\n                    {!account\r\n                      ? t('Connect Wallet')\r\n                      : pending || pendingToken || approvePending\r\n                      ? `${t('Pending')}...`\r\n                      : needApprove\r\n                      ? t('Approve')\r\n                      : t(`Disperse ${view}`)}\r\n                  </Button>\r\n                </ButtonContainer>\r\n              </>\r\n            ) : (\r\n              <ButtonContainer>\r\n                <Button\r\n                  width=\"100%\"\r\n                  disabled={pending || pendingToken || !selectedNFT || !Web3.utils.isAddress(nftRecipientAddress)}\r\n                  onClick={() => {\r\n                    if (!account) {\r\n                      onPresentConnectModal()\r\n                    } else if (validAmount && !pending) {\r\n                      onSendNFT()\r\n                    }\r\n                  }}\r\n                >\r\n                  {!account\r\n                    ? t('Connect Wallet')\r\n                    : pending || isTransferLoading\r\n                    ? `${t('Pending')}...`\r\n                    : needApprove\r\n                    ? t('Approve')\r\n                    : Web3.utils.isAddress(nftRecipientAddress)\r\n                    ? t(`Disperse ${view}`)\r\n                    : t('Invalid Address')}\r\n                </Button>\r\n              </ButtonContainer>\r\n            )}\r\n          </CardContainer>\r\n        </Container>\r\n      </Page>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default MultiTransfer\r\n","import { useState, useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useToast } from 'state/hooks'\r\nimport { useMuti } from './useContract'\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const useMutiTransfer = () => {\r\n  const [pending, setPending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const mutiContract = useMuti()\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  const handleMulti = useCallback(\r\n    async (addresses: string[], amounts: string[], totalAmount: BigNumber) => {\r\n      try {\r\n        setPending(true)\r\n        const tx = await mutiContract.methods\r\n          .disperseEther(addresses, amounts)\r\n          .send({ from: account, value: totalAmount.toString() })\r\n        toastSuccess('Success', 'Multi send done!')\r\n        setPending(false)\r\n        return tx\r\n      } catch (e) {\r\n        toastError('Error', 'Multi send failed.')\r\n        setPending(false)\r\n        return false\r\n      }\r\n    },\r\n    [mutiContract, account, toastSuccess, toastError],\r\n  )\r\n\r\n  return { onMultiTransfer: handleMulti, pending }\r\n}\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const useTokenMutiTransfer = () => {\r\n  const [pendingToken, setPendingToken] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const mutiContract = useMuti()\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  const handleMulti = useCallback(\r\n    async (token: string, addresses: string[], amounts: string[]) => {\r\n      try {\r\n        setPendingToken(true)\r\n        const tx = await mutiContract.methods.disperseToken(token, addresses, amounts).send({ from: account })\r\n        toastSuccess('Success', 'Multi send done!')\r\n        setPendingToken(false)\r\n        return tx\r\n      } catch (e) {\r\n        toastError('Error', 'Multi send failed.')\r\n        setPendingToken(false)\r\n        return false\r\n      }\r\n    },\r\n    [mutiContract, account, toastSuccess, toastError],\r\n  )\r\n\r\n  return { onTokenMultiTransfer: handleMulti, pendingToken }\r\n}\r\n"],"sourceRoot":""}