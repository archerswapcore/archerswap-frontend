{"version":3,"sources":["components/Column/index.tsx","components/Row/index.tsx","state/multicall/hooks.ts","hooks/Tokens.ts","components/QuestionHelper/index.tsx","state/lists/hooks.ts","state/user/hooks.tsx","contexts/Localisation/translationsContext.ts","hooks/useI18n.ts","components/swap/styleds.tsx","components/Loader/index.tsx","components/Popover/index.tsx","components/Tooltip/index.tsx","views/AppBody.tsx"],"names":["Column","styled","div","ColumnCenter","AutoColumn","gap","justify","Row","Box","align","padding","border","borderRadius","RowBetween","RowFlat","AutoRow","RowFixed","isMethodArg","x","indexOf","isValidMethodArgs","undefined","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","data","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","options","chainId","useActiveWeb3React","callResults","useSelector","state","multicall","dispatch","useDispatch","serializedCallKeys","useMemo","JSON","stringify","filter","c","Boolean","map","toCallKey","sort","useEffect","callKeys","parse","length","key","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","error","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","console","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","address","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","addresses","useSingleCallResult","useAllTokens","userAddedTokens","useUserAddedTokens","allTokens","useSelectedTokenList","reduce","tokenMap","token","useIsUserAddedToken","currency","find","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","parseBytes32String","useToken","tokenAddress","tokens","isAddress","tokenContract","useTokenContract","tokenContractBytes32","useBytes32TokenContract","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","Token","useCurrency","currencyId","isCORE","toUpperCase","ETHER","QuestionWrapper","theme","colors","invertedContrast","textSubtle","QuestionHelper","text","useState","show","setShow","open","useCallback","close","style","marginLeft","onClick","onMouseEnter","onMouseLeave","src","alt","WrappedTokenInfo","tokenInfo","tags","name","this","logoURI","EMPTY_LIST","ChainId","MAINNET","BSCTESTNET","listCache","WeakMap","useTokenList","url","lists","byUrl","current","list","get","tagId","id","Error","set","listToTokenMap","useSelectedListUrl","selectedListUrl","useSelectedListInfo","selectedUrl","listsByUrl","pending","pendingUpdate","loadingRequestId","serializeToken","deserializeToken","serializedToken","useIsExpertMode","user","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","updateUserExpertMode","useUserSlippageTolerance","userSlippageTolerance","slippageTolerance","updateUserSlippageTolerance","useUserDeadline","userDeadline","deadline","updateUserDeadline","useAddUserToken","addSerializedToken","useRemoveUserAddedToken","removeSerializedToken","serializedTokensMap","Object","values","serializePair","pair","token0","token1","usePairAdder","addSerializedPair","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","getAddress","useTrackedTokenPairs","pinnedPairs","PINNED_PAIRS","generatedPairs","flatMap","keys","BASES_TO_TRACK_LIQUIDITY_FOR","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","memo","sorted","sortsBefore","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","useI18n","useContext","translationId","fallback","foundTranslation","translation","stringId","includesVariable","includes","interpolatedText","isEmpty","forEach","dataKey","templateKey","RegExp","replace","Wrapper","ArrowWrapper","clickable","css","SectionBreak","tertiary","BottomGrouping","ErrorText","Text","severity","failure","binance","StyledBalanceMaxMini","button","Dots","span","SwapCallbackErrorInner","transparentize","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","size","SwapShowAcceptChanges","primary","rotate","keyframes","StyledSVG","svg","stroke","Loader","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","PopoverContainer","props","background","ReferenceElement","Arrow","Popover","content","children","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","offset","element","styles","update","attributes","updateCallback","useInterval","ref","popper","className","arrow","TooltipContainer","Tooltip","MouseoverTooltip","BodyWrapper","Card","AppBody"],"mappings":"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","file":"static/js/1.4997ee56.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align || 'center'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      // @ts-ignore\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n        const data = result?.data && result?.data !== '0x' ? result.data : null\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId],\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.error('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            }\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\r\n  }, [fragment, contract, results, latestBlockNumber])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\r\n  }, [fragment, results, contractInterface, latestBlockNumber])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\r\n  }, [result, contract, fragment, latestBlockNumber])\r\n}\r\n","import { parseBytes32String } from '@ethersproject/strings'\r\nimport { Currency, ETHER, Token, currencyEquals } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { useSelectedTokenList } from '../state/lists/hooks'\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useUserAddedTokens } from '../state/user/hooks'\r\nimport { isAddress } from '../utils'\r\n\r\nimport { useActiveWeb3React } from './index'\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React()\r\n  const userAddedTokens = useUserAddedTokens()\r\n  const allTokens = useSelectedTokenList()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {}\r\n    return (\r\n      userAddedTokens\r\n        // reduce into all ALL_TOKENS filtered by the current chain\r\n        .reduce<{ [address: string]: Token }>(\r\n          (tokenMap, token) => {\r\n            tokenMap[token.address] = token\r\n            return tokenMap\r\n          },\r\n          // must make a copy because reduce modifies the map, and we do not\r\n          // want to make a copy in every iteration\r\n          { ...allTokens[chainId] },\r\n        )\r\n    )\r\n  }, [chainId, userAddedTokens, allTokens])\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency): boolean {\r\n  const userAddedTokens = useUserAddedTokens()\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : bytes32 && BYTES32_REGEX.test(bytes32)\r\n    ? parseBytes32String(bytes32)\r\n    : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  const address = isAddress(tokenAddress)\r\n\r\n  const tokenContract = useTokenContract(address || undefined, false)\r\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\r\n  const token: Token | undefined = address ? tokens[address] : undefined\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD,\r\n  )\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\r\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\r\n\r\n  return useMemo(() => {\r\n    if (token) return token\r\n    if (!chainId || !address) return undefined\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ])\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isCORE = currencyId?.toUpperCase() === 'CORE'\r\n  const token = useToken(isCORE ? undefined : currencyId)\r\n  return isCORE ? ETHER : token\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\n// import { HelpCircle as Question } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport Tooltip from '../Tooltip'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nexport default function QuestionHelper({ text }: { text: string }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          {/* <Question size={16} /> */}\r\n          <img src=\"/images/question.svg\" alt=\"help\" />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import { ChainId, Token } from 'archerswap-sdk'\r\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../index'\r\n\r\ntype TagDetails = Tags[keyof Tags]\r\nexport interface TagInfo extends TagDetails {\r\n  id: string\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n  public readonly tokenInfo: TokenInfo\r\n\r\n  public readonly tags: TagInfo[]\r\n\r\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\r\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n    this.tokenInfo = tokenInfo\r\n    this.tags = tags\r\n  }\r\n\r\n  public get logoURI(): string | undefined {\r\n    return this.tokenInfo.logoURI\r\n  }\r\n}\r\n\r\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\r\n\r\n/**\r\n * An empty result, useful as a default.\r\n */\r\nconst EMPTY_LIST: TokenAddressMap = {\r\n  [ChainId.MAINNET]: {},\r\n  [ChainId.BSCTESTNET]: {},\r\n}\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n  const result = listCache?.get(list)\r\n  if (result) return result\r\n\r\n  const map = list.tokens.reduce<TokenAddressMap>(\r\n    (tokenMap, tokenInfo) => {\r\n      const tags: TagInfo[] =\r\n        tokenInfo.tags\r\n          ?.map((tagId) => {\r\n            if (!list.tags?.[tagId]) return undefined\r\n            return { ...list.tags[tagId], id: tagId }\r\n          })\r\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\r\n      const token = new WrappedTokenInfo(tokenInfo, tags)\r\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\r\n      return {\r\n        ...tokenMap,\r\n        [token.chainId]: {\r\n          ...tokenMap[token.chainId],\r\n          [token.address]: token,\r\n        },\r\n      }\r\n    },\r\n    { ...EMPTY_LIST },\r\n  )\r\n  listCache?.set(list, map)\r\n  return map\r\n}\r\n\r\nexport function useTokenList(url: string | undefined): TokenAddressMap {\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  return useMemo(() => {\r\n    if (!url) return EMPTY_LIST\r\n    const current = lists[url]?.current\r\n    if (!current) return EMPTY_LIST\r\n    try {\r\n      return listToTokenMap(current)\r\n    } catch (error) {\r\n      console.error('Could not show token list due to error', error)\r\n      return EMPTY_LIST\r\n    }\r\n  }, [lists, url])\r\n}\r\n\r\nexport function useSelectedListUrl(): string | undefined {\r\n  return useSelector<AppState, AppState['lists']['selectedListUrl']>((state) => state.lists.selectedListUrl)\r\n}\r\n\r\nexport function useSelectedTokenList(): TokenAddressMap {\r\n  return useTokenList(useSelectedListUrl())\r\n}\r\n\r\nexport function useSelectedListInfo(): { current: TokenList | null; pending: TokenList | null; loading: boolean } {\r\n  const selectedUrl = useSelectedListUrl()\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const list = selectedUrl ? listsByUrl[selectedUrl] : undefined\r\n  return {\r\n    current: list?.current ?? null,\r\n    pending: list?.pendingUpdate ?? null,\r\n    loading: list?.loadingRequestId !== null,\r\n  }\r\n}\r\n\r\n// returns all downloaded current lists\r\nexport function useAllLists(): TokenList[] {\r\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n\r\n  return useMemo(\r\n    () =>\r\n      Object.keys(lists)\r\n        .map((url) => lists[url].current)\r\n        .filter((l): l is TokenList => Boolean(l)),\r\n    [lists],\r\n  )\r\n}\r\n","import { ChainId, Pair, Token } from 'archerswap-sdk'\r\nimport flatMap from 'lodash.flatmap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\n// eslint-disable-next-line import/no-cycle\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserDarkMode,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserSlippageTolerance,\r\n  muteAudio,\r\n  unmuteAudio,\r\n} from './actions'\r\nimport { setThemeCache } from '../../utils/theme'\r\n\r\nfunction serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nfunction deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name,\r\n  )\r\n}\r\n\r\nexport function useIsDarkMode(): boolean {\r\n  const { userDarkMode, matchesDarkMode } = useSelector<\r\n    AppState,\r\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\r\n  >(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\r\n      userDarkMode,\r\n      matchesDarkMode,\r\n    }),\r\n    shallowEqual,\r\n  )\r\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\r\n}\r\n\r\nexport function useDarkModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { userDarkMode } = useSelector<AppState, { userDarkMode: boolean | null }>(\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    ({ user: { userDarkMode } }) => ({\r\n      userDarkMode,\r\n    }),\r\n    shallowEqual,\r\n  )\r\n  const darkMode = useIsDarkMode()\r\n\r\n  const toggleSetDarkMode = useCallback(() => {\r\n    setThemeCache(!userDarkMode)\r\n    dispatch(updateUserDarkMode({ userDarkMode: !userDarkMode }))\r\n  }, [userDarkMode, dispatch])\r\n\r\n  return [darkMode, toggleSetDarkMode]\r\n}\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippageTolerance: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippageTolerance }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserDeadline(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Archerswap LPs', 'Archer-LP')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId],\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\r\n    generatedPairs,\r\n    pinnedPairs,\r\n    userPairs,\r\n  ])\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import { useContext } from 'react'\r\nimport { isEmpty } from 'lodash'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\ninterface ContextData {\r\n  [key: string]: number | string\r\n}\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\r\n    if (translations.length === 0) {\r\n      return fallback\r\n    }\r\n\r\n    const foundTranslation = translations.find((translation) => {\r\n      return translation.data.stringId === translationId\r\n    })\r\n\r\n    if (foundTranslation) {\r\n      const { text } = foundTranslation.data\r\n      const includesVariable = text.includes('%')\r\n\r\n      if (includesVariable) {\r\n        let interpolatedText = text\r\n\r\n        // If dynamic tags are found but no data was passed return the fallback\r\n        if (isEmpty(data)) {\r\n          return fallback\r\n        }\r\n\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import { transparentize } from 'polished'\r\nimport React from 'react'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { Text } from 'archerswap-uikit'\r\nimport styled, { css } from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) =>\r\n    clickable\r\n      ? css`\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n      : null}\r\n`\r\n\r\nexport const SectionBreak = styled.div`\r\n  height: 1px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n\r\nexport const BottomGrouping = styled.div`\r\n  margin-top: 1rem;\r\n`\r\n\r\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\r\n  color: ${({ theme, severity }) =>\r\n    severity === 3 || severity === 4\r\n      ? theme.colors.failure\r\n      : severity === 2\r\n      ? theme.colors.binance\r\n      : severity === 1\r\n      ? theme.colors.text\r\n      : theme.colors.success};\r\n`\r\n\r\nexport const StyledBalanceMaxMini = styled.button`\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors.tertiary};\r\n    outline: none;\r\n  }\r\n`\r\n\r\n// styles\r\nexport const Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInner = styled.div`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`\r\n\r\nexport function SwapCallbackError({ error }: { error: string }) {\r\n  return (\r\n    <SwapCallbackErrorInner>\r\n      <SwapCallbackErrorInnerAlertTriangle>\r\n        <AlertTriangle size={24} />\r\n      </SwapCallbackErrorInnerAlertTriangle>\r\n      <p>{error}</p>\r\n    </SwapCallbackErrorInner>\r\n  )\r\n}\r\n\r\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\r\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.primary)};\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`\r\n","import React from 'react'\r\n\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks/useInterval'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.colors.background};\r\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    border: 1px solid ${({ theme }) => theme.colors.tertiary};\r\n    transform: rotate(45deg);\r\n    background: ${({ theme }) => theme.colors.background};\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    if (update) {\r\n      update()\r\n    }\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from 'archerswap-uikit'\r\n\r\nexport const BodyWrapper = styled(Card)`\r\n  position: relative;\r\n  max-width: 436px;\r\n  width: 100%;\r\n  z-index: 5;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n"],"sourceRoot":""}