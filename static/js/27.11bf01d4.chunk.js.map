{"version":3,"sources":["hooks/useTokenBalance.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","../node_modules/react-csv/lib/core.js","../node_modules/react-csv/lib/metaProps.js","../node_modules/react-csv/index.js","../node_modules/react-csv/lib/index.js","../node_modules/react-csv/lib/components/Download.js","../node_modules/react-csv/lib/components/Link.js","contexts/PastLotteryDataContext.tsx","utils/fetchLotteryData.ts","hooks/useLotteryData.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","hooks/useClaimReward.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useApproval.ts","components/TicketInput/TicketInput.tsx","hooks/useBuyTickets.ts","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks2.tsx","views/Lottery/NextDrawPage.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/components/Select/Select.tsx","views/Lottery/Lottery.tsx"],"names":["useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","call","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useNFTBalance","ownedTokensIds","setOwnedTokensIds","isLoading","setIsLoading","getErc721Contract","tokensOfOwner","tokenIds","tokensData","map","tokenId","tokenURI","uri","fetch","data","json","metadata","Promise","all","then","values","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","Wrapper","styled","div","theme","colors","textSubtle","ExpandableSectionButton","onClick","expanded","t","useTranslation","aria-label","role","color","bold","defaultProps","Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_toConsumableArray","arr","Array","isArray","i","arr2","length","isSafari","test","navigator","userAgent","isJsons","array","every","row","isArrays","jsonsHeaders","keys","reduce","b","Set","concat","jsons2arrays","jsons","headers","headerLabels","headerKeys","header","label","key","object","getHeaderValue","property","foundValue","replace","split","o","p","undefined","splice","elementOrEmpty","element","joiner","separator","arguments","enclosingCharacter","filter","e","column","join","arrays2csv","jsons2csv","string2csv","toCSV","TypeError","buildURI","uFEFF","csv","type","blob","Blob","dataURI","URL","window","webkitURL","createObjectURL","PropsNotForwarded","propTypes","_react","require","_propTypes","__esModule","oneOfType","string","isRequired","target","filename","bool","func","asyncOnClick","module","CSVLink","CSVDownload","_Download2","_interopRequireDefault","_Link2","default","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_core","_metaProps","_React$Component","instance","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","subClass","superClass","create","setPrototypeOf","_inherits","apply","_props","specs","page","open","Component","assign","_extends","source","hasOwnProperty","bind","href","setState","prevProps","_props2","event","msSaveOrOpenBlob","preventDefault","_props3","msSaveBlob","_this2","proceed","handleLegacy","_this3","handleAsyncClick","handleSyncClick","_this4","_props4","children","rest","indexOf","_objectWithoutProperties","createElement","download","ref","link","handleClick","React","createContext","mostRecentLotteryNumber","historyError","historyData","idList","poolData","burnedData","lotteryType","fetchLotteryCurrentRoundNo","lotteryAdress","getLotteryAddress","calls","name","params","multicall","lotteryABI","currentRoundNo","Number","fetchLotteryInfo","roundNo","lotteryInfo","lotteryID","lotteryStatus","prizePoolInBow","costPerTicket","prizeDistribution","startingTimestamp","closingTimestamp","winningNumbers","winnerCounts","startTicketID","endTicketID","claimedPrize","fetchLotteryCurrentPrize","lotteryCurrentPrize","fetchLotterySize","lotterySize","fetchLotteryMaxRange","lotteryMaxRange","fetchLotteryTicketData","lotteryNftAdress","getLotteryTicketAddress","lotteryNftABI","tickets","callsForTicketNumbers","ticketNo","ticketNumberDatas","callsForReward","ticketRewardData","callsForTicketClaimStatus","ticketClaimStatusData","ticketData","ticketNumbers","ticketReward","ticketClaim","fetchLotteryGraphData","startLotteryNo","endLotteryNo","push","lotteryData","toFixed","times","fetchDiscountData","bucketOneMax","bucketTwoMax","discountForBucketOne","discountForBucketTwo","discountForBucketThree","exportLotteryInfo","exportData","lotteryNo","totalPoolAmount","toFormat","match4","match3","match2","useLotteryCurrentRoundNo","lotteryCurrentRoundNo","setLotteryCurrentRoundNo","console","error","getLotteryCurrentRoundNo","useLotteryInfo","setLotteryInfo","getLotteryInfo","useLotteryMetaData","lotteryMetaData","setLotteryMetaData","getLotteryMetaData","ProgressWrapper","TopTextWrapper","StyledPrimaryText","Text","LotteryProgress","progress","setProgress","timeAlarm","setTimeAlarm","noteAlarm","setNoteAlarm","useContext","PastLotteryDataContext","currentLotteryNumber","currentTimestamp","moment","unix","timeLeft","hourLeft","Math","floor","minuteLeft","ceil","timeLenght","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","size","Blurb","StyledHero","StyledBanner","img","mediaQueries","md","StyledMobileBanner","StyledContainer","Container","LeftWrapper","sm","lg","RightWrapper","Hero","isDark","useTheme","src","alt","toUpperCase","useClaimReward","lotteryId","lotteryContract","useLottery","gasBoostedPrice","useGasBoost","onClaimReward","ticketIds","claimReward","StyledLoading","Loading","RewardP","TicketsList","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","setWinNumbers","setLotteryStatus","listItems","setListItems","rewardMatch","number","n","tempListItems","index","emoji","title","TICKETS","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","winnings","rewardTicketIds","requestedClaim","setRequestedClaim","useModal","onPresentMyTickets","handleClaim","style","marginRight","width","disabled","TextWrapper","StyledText","Image","NoPrizesContent","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","useLotteryApprove","handleApprove","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledTokenSymbol","span","text","StyledFlex","Flex","StyledInput","Input","TicketInput","onChange","onSelectMax","alignItems","placeholder","generateLottoNumbers","numberOfTickets","lottoSize","maxRange","numberOfNumbers","j","random","useBuyTickets","onBuyTickets","ticketAmount","ticketPrice","buyTickets","BuyTicketModal","max","val","setVal","pendingTx","setPendingTx","setRequestedBuy","discountData","setDiscountData","fullBalance","useMemo","getFullDisplayBalance","maxTickets","parseInt","getCostWithDiscount","cakeCosts","amount","percent","handleBuy","handleSelectMax","LOTTERY_MAX_NUMBER_OF_TICKETS","currentTarget","availableSymbol","Wrap","Tips","lotteryPrice","Announce","StyledMaxText","num","toLocaleString","Final","FinalContent","ModalActions","id","background","WarningModal","onConfirm","CardActions","TicketCard","useLotteryAllowance","confirm","setConfirm","bowBalance","getBowAddress","coreBalance","ticketsLength","PurchaseWarningModal","tokenName","toNumber","onPresentBuy","approveHandler","buyPossible","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","twoMatchesAmount","threeMatchesAmount","fourMatchesAmount","burnAmount","forwardAmount","burnBowAmount","burnHuntAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","Row","RabbitRow","RabbitRowSmall","CardImage","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","setLotteryNo","setWinnerCounts","setLotteryData","exporting","setExporting","csvLinkEl","useRef","lotteryNumber","onExport","setTimeout","current","click","height","responsive","marginTop","cursor","tabIndex","onKeyDown","Link","HowItWorks2","Cards","BaseLayout","SecondCardColumnWrapper","ClaimDiv","NextDrawPage","rewardSum","setRewardSum","setRewardTicketIds","lotteryTicketData","setLotteryTicketData","gt","lotteryTotalPrizeData","rewardTicketData","totalPrize","setLotteryTotalPrizeData","roundArray","lastRoundNo","tempRewardTicketIds","getLotteryTotalPrizeData","useLotteryTotalPrizeData","fetchRecentLotteryData","tempRewardSum","handleBatchClaim","slice","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","isWarning","scale","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","fetchLotteryData","formatLotteryDate","lotteryDate","date","Date","hours","getUTCHours","monthAndDay","getUTCMonth","getUTCDate","Timestamp","startTime","endTime","startMonthAndDay","startHours","endMonthAndDay","endHours","TopLotteryCardHeading","PastRoundCardDetails","mb","PastLotteryActions","PastRoundCard","PastLotteryRoundViewer","roundData","isInitialized","handleSubmit","prevState","Line","lazy","InnerWrapper","HistoryChart","loading","setLoading","setIdList","setPoolData","setBurnedData","graphData","getGraphData","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","DropDownHeader","shadows","inset","input","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","inputSecondary","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","option","offsetWidth","offsetHeight","className","imgUrl","Background","Lottery","activeIndex","setActiveIndex","setLotteryType","setHistoryData","textColor","Provider","Page","onItemClick","borderRadius"],"mappings":"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","file":"static/js/27.11bf01d4.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getBowContract, getErc721Contract, getFactoryContract } from 'utils/contractHelpers'\r\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport const useETHBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useWcoreBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.allowance(account, targetAddress).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && targetAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\r\n\r\n  return allowance\r\n}\r\n\r\nexport const useApprove = () => {\r\n  const [approvePending, setApprovePending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n\r\n  const handleApprove = useCallback(\r\n    async (targetAddress: string, contractAddress: string) => {\r\n      try {\r\n        setApprovePending(true)\r\n        const contract = getBep20Contract(contractAddress, web3)\r\n        const tx = await contract.methods\r\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\r\n          .send({ from: account })\r\n        setApprovePending(false)\r\n        return tx\r\n      } catch (e) {\r\n        setApprovePending(false)\r\n        return false\r\n      }\r\n    },\r\n    [web3, account],\r\n  )\r\n\r\n  return { onApprove: handleApprove, approvePending }\r\n}\r\n\r\nexport const useTokenSymbol = (tokenAddress: string) => {\r\n  const [symbol, setSymbol] = useState('')\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.symbol().call()\r\n      setSymbol(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return symbol\r\n}\r\n\r\nexport const useTokenDecimal = (tokenAddress: string) => {\r\n  const [decimal, setDecimal] = useState(0)\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.decimals().call()\r\n      setDecimal(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return decimal\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useNFTBalance = (tokenAddress: string) => {\r\n  const [ownedTokensIds, setOwnedTokensIds] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      setIsLoading(true)\r\n      const contract = getErc721Contract(tokenAddress, web3)\r\n      const tokenIds = await contract.methods.tokensOfOwner(account).call()\r\n      const tokensData = tokenIds.map(async (tokenId) => {\r\n        const uri = await contract.methods.tokenURI(tokenId).call()\r\n        const data = await fetch(uri)\r\n        const metadata = await data.json()\r\n        return { tokenId, ...metadata }\r\n      })\r\n      Promise.all(tokensData).then((values) => setOwnedTokensIds(values))\r\n      setIsLoading(false)\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return { isLoading, ownedTokensIds }\r\n}\r\n\r\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = getWeb3NoAccountFromChain(chainId)\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && chainId) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const bowContract = getBowContract()\r\n      const supply = await bowContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useCirculatingBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const bowContract = getBowContract()\r\n      const [tRes, res0, res1, res2] = await Promise.all([\r\n        bowContract.methods.totalSupply().call(),\r\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\r\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\r\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\r\n      ])\r\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\r\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const usePairsLength = () => {\r\n  const [pairsLength, setPairsLength] = useState(0)\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchPairsLength = async () => {\r\n      const contract = getFactoryContract(web3)\r\n      const res = await contract.methods.allPairsLength().call()\r\n      setPairsLength(res)\r\n    }\r\n\r\n    fetchPairsLength()\r\n  }, [web3, slowRefresh])\r\n\r\n  return pairsLength\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"textSubtle\" bold>\r\n        {expanded ? t('Hide') : t('Details')}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar isSafari = exports.isSafari = function isSafari() {\n  return (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n  );\n};\n\nvar isJsons = exports.isJsons = function isJsons(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return (typeof row === \"undefined\" ? \"undefined\" : _typeof(row)) === 'object' && !(row instanceof Array);\n  });\n};\n\nvar isArrays = exports.isArrays = function isArrays(array) {\n  return Array.isArray(array) && array.every(function (row) {\n    return Array.isArray(row);\n  });\n};\n\nvar jsonsHeaders = exports.jsonsHeaders = function jsonsHeaders(array) {\n  return Array.from(array.map(function (json) {\n    return Object.keys(json);\n  }).reduce(function (a, b) {\n    return new Set([].concat(_toConsumableArray(a), _toConsumableArray(b)));\n  }, []));\n};\n\nvar jsons2arrays = exports.jsons2arrays = function jsons2arrays(jsons, headers) {\n  headers = headers || jsonsHeaders(jsons);\n\n  var headerLabels = headers;\n  var headerKeys = headers;\n  if (isJsons(headers)) {\n    headerLabels = headers.map(function (header) {\n      return header.label;\n    });\n    headerKeys = headers.map(function (header) {\n      return header.key;\n    });\n  }\n\n  var data = jsons.map(function (object) {\n    return headerKeys.map(function (header) {\n      return getHeaderValue(header, object);\n    });\n  });\n  return [headerLabels].concat(_toConsumableArray(data));\n};\n\nvar getHeaderValue = exports.getHeaderValue = function getHeaderValue(property, obj) {\n  var foundValue = property.replace(/\\[([^\\]]+)]/g, \".$1\").split(\".\").reduce(function (o, p, i, arr) {\n    if (o[p] === undefined) {\n      arr.splice(1);\n    } else {\n      return o[p];\n    }\n  }, obj);\n\n  return foundValue === undefined ? property in obj ? obj[property] : '' : foundValue;\n};\n\nvar elementOrEmpty = exports.elementOrEmpty = function elementOrEmpty(element) {\n  return element || element === 0 ? element : '';\n};\n\nvar joiner = exports.joiner = function joiner(data) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ',';\n  var enclosingCharacter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '\"';\n\n  return data.filter(function (e) {\n    return e;\n  }).map(function (row) {\n    return row.map(function (element) {\n      return elementOrEmpty(element);\n    }).map(function (column) {\n      return \"\" + enclosingCharacter + column + enclosingCharacter;\n    }).join(separator);\n  }).join(\"\\n\");\n};\n\nvar arrays2csv = exports.arrays2csv = function arrays2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(headers ? [headers].concat(_toConsumableArray(data)) : data, separator, enclosingCharacter);\n};\n\nvar jsons2csv = exports.jsons2csv = function jsons2csv(data, headers, separator, enclosingCharacter) {\n  return joiner(jsons2arrays(data, headers), separator, enclosingCharacter);\n};\n\nvar string2csv = exports.string2csv = function string2csv(data, headers, separator, enclosingCharacter) {\n  return headers ? headers.join(separator) + \"\\n\" + data : data;\n};\n\nvar toCSV = exports.toCSV = function toCSV(data, headers, separator, enclosingCharacter) {\n  if (isJsons(data)) return jsons2csv(data, headers, separator, enclosingCharacter);\n  if (isArrays(data)) return arrays2csv(data, headers, separator, enclosingCharacter);\n  if (typeof data === 'string') return string2csv(data, headers, separator);\n  throw new TypeError(\"Data should be a \\\"String\\\", \\\"Array of arrays\\\" OR \\\"Array of objects\\\" \");\n};\n\nvar buildURI = exports.buildURI = function buildURI(data, uFEFF, headers, separator, enclosingCharacter) {\n  var csv = toCSV(data, headers, separator, enclosingCharacter);\n  var type = isSafari() ? 'application/csv' : 'text/csv';\n  var blob = new Blob([uFEFF ? \"\\uFEFF\" : '', csv], { type: type });\n  var dataURI = \"data:\" + type + \";charset=utf-8,\" + (uFEFF ? \"\\uFEFF\" : '') + csv;\n\n  var URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined' ? dataURI : URL.createObjectURL(blob);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PropsNotForwarded = exports.defaultProps = exports.propTypes = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propTypes = exports.propTypes = {\n  data: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array]).isRequired,\n  headers: _propTypes.array,\n  target: _propTypes.string,\n  separator: _propTypes.string,\n  filename: _propTypes.string,\n  uFEFF: _propTypes.bool,\n  onClick: _propTypes.func,\n  asyncOnClick: _propTypes.bool\n};\n\nvar defaultProps = exports.defaultProps = {\n  separator: ',',\n  filename: 'generatedBy_react-csv.csv',\n  uFEFF: true,\n  asyncOnClick: false\n};\n\nvar PropsNotForwarded = exports.PropsNotForwarded = ['data', 'headers'];","module.exports = require('./lib/index.js');\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CSVLink = exports.CSVDownload = undefined;\n\nvar _Download = require('./components/Download');\n\nvar _Download2 = _interopRequireDefault(_Download);\n\nvar _Link = require('./components/Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CSVDownload = exports.CSVDownload = _Download2.default;\nvar CSVLink = exports.CSVLink = _Link2.default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaultProps = {\n  target: '_blank'\n};\n\nvar CSVDownload = function (_React$Component) {\n  _inherits(CSVDownload, _React$Component);\n\n  function CSVDownload(props) {\n    _classCallCheck(this, CSVDownload);\n\n    var _this = _possibleConstructorReturn(this, (CSVDownload.__proto__ || Object.getPrototypeOf(CSVDownload)).call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CSVDownload, [{\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          enclosingCharacter = _props.enclosingCharacter,\n          uFEFF = _props.uFEFF,\n          target = _props.target,\n          specs = _props.specs,\n          replace = _props.replace;\n\n      this.state.page = window.open(this.buildURI(data, uFEFF, headers, separator, enclosingCharacter), target, specs, replace);\n    }\n  }, {\n    key: 'getWindow',\n    value: function getWindow() {\n      return this.state.page;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return CSVDownload;\n}(_react2.default.Component);\n\nCSVDownload.defaultProps = Object.assign(_metaProps.defaultProps, defaultProps);\nCSVDownload.propTypes = _metaProps.propTypes;\nexports.default = CSVDownload;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('../core');\n\nvar _metaProps = require('../metaProps');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CSVLink = function (_React$Component) {\n  _inherits(CSVLink, _React$Component);\n\n  function CSVLink(props) {\n    _classCallCheck(this, CSVLink);\n\n    var _this = _possibleConstructorReturn(this, (CSVLink.__proto__ || Object.getPrototypeOf(CSVLink)).call(this, props));\n\n    _this.buildURI = _this.buildURI.bind(_this);\n    _this.state = { href: '' };\n    return _this;\n  }\n\n  _createClass(CSVLink, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          data = _props.data,\n          headers = _props.headers,\n          separator = _props.separator,\n          uFEFF = _props.uFEFF,\n          enclosingCharacter = _props.enclosingCharacter;\n\n      this.setState({ href: this.buildURI(data, uFEFF, headers, separator, enclosingCharacter) });\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (this.props !== prevProps) {\n        var _props2 = this.props,\n            data = _props2.data,\n            headers = _props2.headers,\n            separator = _props2.separator,\n            uFEFF = _props2.uFEFF;\n\n        this.setState({ href: this.buildURI(data, uFEFF, headers, separator) });\n      }\n    }\n  }, {\n    key: 'buildURI',\n    value: function buildURI() {\n      return _core.buildURI.apply(undefined, arguments);\n    }\n  }, {\n    key: 'handleLegacy',\n    value: function handleLegacy(event) {\n      if (window.navigator.msSaveOrOpenBlob) {\n        event.preventDefault();\n\n        var _props3 = this.props,\n            data = _props3.data,\n            headers = _props3.headers,\n            separator = _props3.separator,\n            filename = _props3.filename,\n            enclosingCharacter = _props3.enclosingCharacter,\n            uFEFF = _props3.uFEFF;\n\n\n        var blob = new Blob([uFEFF ? '\\uFEFF' : '', (0, _core.toCSV)(data, headers, separator, enclosingCharacter)]);\n        window.navigator.msSaveBlob(blob, filename);\n\n        return false;\n      }\n    }\n  }, {\n    key: 'handleAsyncClick',\n    value: function handleAsyncClick(event) {\n      var _this2 = this;\n\n      var done = function done(proceed) {\n        if (proceed === false) {\n          event.preventDefault();\n          return;\n        }\n        _this2.handleLegacy(event);\n      };\n\n      this.props.onClick(event, done);\n    }\n  }, {\n    key: 'handleSyncClick',\n    value: function handleSyncClick(event) {\n      var stopEvent = this.props.onClick(event) === false;\n      if (stopEvent) {\n        event.preventDefault();\n        return;\n      }\n      this.handleLegacy(event);\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick() {\n      var _this3 = this;\n\n      return function (event) {\n        if (typeof _this3.props.onClick === 'function') {\n          return _this3.props.asyncOnClick ? _this3.handleAsyncClick(event) : _this3.handleSyncClick(event);\n        }\n        _this3.handleLegacy(event);\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this4 = this;\n\n      var _props4 = this.props,\n          data = _props4.data,\n          headers = _props4.headers,\n          separator = _props4.separator,\n          filename = _props4.filename,\n          uFEFF = _props4.uFEFF,\n          children = _props4.children,\n          onClick = _props4.onClick,\n          asyncOnClick = _props4.asyncOnClick,\n          enclosingCharacter = _props4.enclosingCharacter,\n          rest = _objectWithoutProperties(_props4, ['data', 'headers', 'separator', 'filename', 'uFEFF', 'children', 'onClick', 'asyncOnClick', 'enclosingCharacter']);\n\n      return _react2.default.createElement(\n        'a',\n        _extends({\n          download: filename\n        }, rest, {\n          ref: function ref(link) {\n            return _this4.link = link;\n          },\n          target: '_self',\n          href: this.state.href,\n          onClick: this.handleClick()\n        }),\n        children\n      );\n    }\n  }]);\n\n  return CSVLink;\n}(_react2.default.Component);\n\nCSVLink.defaultProps = _metaProps.defaultProps;\nCSVLink.propTypes = _metaProps.propTypes;\nexports.default = CSVLink;","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: any\r\n  lotteryType: string\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: {\r\n    idList: ['1'],\r\n    poolData: [0],\r\n    burnedData: [0],\r\n  },\r\n  lotteryType: 'bow',\r\n} as PastLotteryDataState)\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport lotteryABI from 'config/abi/lottery.json'\r\nimport lotteryNftABI from 'config/abi/lotteryNft.json'\r\nimport multicall from './multicall'\r\nimport { getLotteryAddress, getBowAddress, getLotteryTicketAddress } from './addressHelpers'\r\n\r\nexport const fetchLotteryAllowances = async (account, lotteryType) => {\r\n  const bowAddress = getBowAddress()\r\n  const lotteryAdress = getLotteryAddress(lotteryType)\r\n\r\n  const calls = [\r\n    {\r\n      address: bowAddress,\r\n      name: 'allowance',\r\n      params: [account, lotteryAdress],\r\n    },\r\n  ]\r\n\r\n  const [allowance] = await multicall(erc20ABI, calls)\r\n  return new BigNumber(allowance)\r\n}\r\n\r\nexport const fetchLotteryCurrentRoundNo = async (lotteryType) => {\r\n  const lotteryAdress = getLotteryAddress(lotteryType)\r\n\r\n  const calls = [\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'getCurrentLotteryId',\r\n      params: [],\r\n    },\r\n  ]\r\n\r\n  const [currentRoundNo] = await multicall(lotteryABI, calls)\r\n  return Number(currentRoundNo)\r\n}\r\n\r\nexport const fetchLotteryInfo = async (roundNo, lotteryType) => {\r\n  const lotteryAdress = getLotteryAddress(lotteryType)\r\n\r\n  const calls = [\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'getBasicLottoInfo',\r\n      params: [roundNo],\r\n    },\r\n  ]\r\n\r\n  const [lotteryInfo] = await multicall(lotteryABI, calls)\r\n  return {\r\n    lotteryID: Number(lotteryInfo[0].lotteryID),\r\n    lotteryStatus: Number(lotteryInfo[0].lotteryStatus),\r\n    prizePoolInBow: Number(lotteryInfo[0].prizePoolInBow),\r\n    costPerTicket: Number(lotteryInfo[0].costPerTicket),\r\n    prizeDistribution: lotteryInfo[0].prizeDistribution,\r\n    startingTimestamp: Number(lotteryInfo[0].startingTimestamp),\r\n    closingTimestamp: Number(lotteryInfo[0].closingTimestamp),\r\n    winningNumbers: lotteryInfo[0].winningNumbers,\r\n    winnerCounts: lotteryInfo[0].winnerCounts,\r\n    startTicketID: Number(lotteryInfo[0].startTicketID),\r\n    endTicketID: Number(lotteryInfo[0].endTicketID),\r\n    claimedPrize: Number(lotteryInfo[0].claimedPrize),\r\n  }\r\n}\r\n\r\nexport const fetchLotteryCurrentPrize = async (roundNo, lotteryType) => {\r\n  const lotteryAdress = getLotteryAddress(lotteryType)\r\n\r\n  const lotteryInfo = await fetchLotteryInfo(roundNo, lotteryType)\r\n  const { lotteryStatus } = lotteryInfo\r\n\r\n  if (lotteryStatus === 4) return new BigNumber(lotteryInfo.prizePoolInBow)\r\n\r\n  const calls = [\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'getPrizeForCurrentLottery',\r\n      params: [],\r\n    },\r\n  ]\r\n\r\n  const [lotteryCurrentPrize] = await multicall(lotteryABI, calls)\r\n  return new BigNumber(lotteryCurrentPrize)\r\n}\r\n\r\nexport const fetchLotterySize = async (lotteryType) => {\r\n  const lotteryAdress = getLotteryAddress(lotteryType)\r\n\r\n  const calls = [\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'sizeOfLottery_',\r\n      params: [],\r\n    },\r\n  ]\r\n\r\n  const [lotterySize] = await multicall(lotteryABI, calls)\r\n  return Number(lotterySize)\r\n}\r\n\r\nexport const fetchLotteryMaxRange = async (lotteryType) => {\r\n  const lotteryAdress = getLotteryAddress(lotteryType)\r\n\r\n  const calls = [\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'getMaxRange',\r\n      params: [],\r\n    },\r\n  ]\r\n\r\n  const [lotteryMaxRange] = await multicall(lotteryABI, calls)\r\n  return Number(lotteryMaxRange)\r\n}\r\n\r\nexport const fetchLotteryTicketData = async (account, roundNo, lotteryType) => {\r\n  const lotteryAdress = getLotteryAddress(lotteryType)\r\n  const lotteryNftAdress = getLotteryTicketAddress(lotteryType)\r\n\r\n  const calls = [\r\n    {\r\n      address: lotteryNftAdress,\r\n      name: 'getUserTickets',\r\n      params: [roundNo, account],\r\n    },\r\n  ]\r\n  const [tickets] = await multicall(lotteryNftABI, calls)\r\n\r\n  const callsForTicketNumbers = tickets[0].map((ticketNo) => {\r\n    return {\r\n      address: lotteryNftAdress,\r\n      name: 'getTicketNumbers',\r\n      params: [Number(ticketNo)],\r\n    }\r\n  })\r\n  const ticketNumberDatas = await multicall(lotteryNftABI, callsForTicketNumbers)\r\n\r\n  const callsForReward = tickets[0].map((ticketNo) => {\r\n    return {\r\n      address: lotteryAdress,\r\n      name: 'getClaimableRewardForTicket',\r\n      params: [roundNo, Number(ticketNo)],\r\n    }\r\n  })\r\n  const ticketRewardData = await multicall(lotteryABI, callsForReward)\r\n\r\n  const callsForTicketClaimStatus = tickets[0].map((ticketNo) => {\r\n    return {\r\n      address: lotteryNftAdress,\r\n      name: 'getTicketClaimStatus',\r\n      params: [Number(ticketNo)],\r\n    }\r\n  })\r\n  const ticketClaimStatusData = await multicall(lotteryNftABI, callsForTicketClaimStatus)\r\n\r\n  const ticketData = tickets[0].map((ticketNo, i) => {\r\n    return {\r\n      ticketNo: Number(ticketNo),\r\n      ticketNumbers: ticketNumberDatas[i],\r\n      ticketReward: new BigNumber(ticketRewardData[i]),\r\n      ticketClaim: ticketClaimStatusData[i][0],\r\n    }\r\n  })\r\n\r\n  return ticketData\r\n}\r\n\r\nexport const fetchLotteryGraphData = async (startLotteryNo, endLotteryNo, lotteryType) => {\r\n  const lotteryAdress = getLotteryAddress(lotteryType)\r\n\r\n  const calls = []\r\n  for (let i = startLotteryNo; i <= endLotteryNo; i++) {\r\n    calls.push({\r\n      address: lotteryAdress,\r\n      name: 'getBasicLottoInfo',\r\n      params: [i],\r\n    })\r\n  }\r\n\r\n  const lotteryInfo = await multicall(lotteryABI, calls)\r\n  const idList = []\r\n  const poolData = []\r\n  const burnedData = []\r\n  lotteryInfo.map((lotteryData) => {\r\n    idList.push(Number(lotteryData[0].lotteryID))\r\n    poolData.push(new BigNumber(Number(lotteryData[0].prizePoolInBow)).div(10 ** 18).toFixed(2))\r\n    burnedData.push(\r\n      new BigNumber(Number(lotteryData[0].prizePoolInBow))\r\n        .div(10 ** 18)\r\n        .times(lotteryData[0].prizeDistribution[0])\r\n        .div(100)\r\n        .toFixed(2),\r\n    )\r\n    return 0\r\n  })\r\n\r\n  return {\r\n    idList,\r\n    poolData,\r\n    burnedData,\r\n  }\r\n}\r\n\r\nexport const fetchDiscountData = async (lotteryType) => {\r\n  const lotteryAdress = getLotteryAddress(lotteryType)\r\n\r\n  const calls = [\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'bucketOneMax_',\r\n      params: [],\r\n    },\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'bucketTwoMax_',\r\n      params: [],\r\n    },\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'discountForBucketOne_',\r\n      params: [],\r\n    },\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'discountForBucketTwo_',\r\n      params: [],\r\n    },\r\n    {\r\n      address: lotteryAdress,\r\n      name: 'discountForBucketThree_',\r\n      params: [],\r\n    },\r\n  ]\r\n\r\n  if (lotteryAdress) {\r\n    const [\r\n      bucketOneMax,\r\n      bucketTwoMax,\r\n      discountForBucketOne,\r\n      discountForBucketTwo,\r\n      discountForBucketThree,\r\n    ] = await multicall(lotteryABI, calls)\r\n    return {\r\n      bucketOneMax: bucketOneMax[0],\r\n      bucketTwoMax: bucketTwoMax[0],\r\n      discountForBucketOne: discountForBucketOne[0],\r\n      discountForBucketTwo: discountForBucketTwo[0],\r\n      discountForBucketThree: discountForBucketThree[0],\r\n    }\r\n  }\r\n\r\n  return {\r\n    bucketOneMax: 0,\r\n    bucketTwoMax: 0,\r\n    discountForBucketOne: 0,\r\n    discountForBucketTwo: 0,\r\n    discountForBucketThree: 0,\r\n  }\r\n}\r\n\r\nexport const exportLotteryInfo = async (roundNo, lotteryType) => {\r\n  // const roundArray = [];\r\n  const exportData = []\r\n\r\n  // for (let i = 1; i <= roundNo; i++)\r\n  //     roundArray.push(i)\r\n\r\n  // await Promise.all(\r\n  //     roundArray.map(async (i) => {\r\n  //         const lotteryInfo = await fetchLotteryInfo(i)\r\n  //         if (lotteryInfo.lotteryStatus === 4) {\r\n  //             exportData.push({\r\n  //                 lotteryNo: i,\r\n  //                 totalPoolAmount: new BigNumber(lotteryInfo.prizePoolInBow).div(10 ** 18).toFormat(2),\r\n  //                 match4: lotteryInfo.winnerCounts[3],\r\n  //                 match3: lotteryInfo.winnerCounts[2],\r\n  //                 match2: lotteryInfo.winnerCounts[1]\r\n  //             })\r\n  //         }\r\n  //     })\r\n  // )\r\n\r\n  /* eslint-disable */\r\n  for (let i = 1; i <= roundNo; i++) {\r\n    const lotteryInfo = await fetchLotteryInfo(i, lotteryType)\r\n    if (lotteryInfo.lotteryStatus === 4) {\r\n      exportData.push({\r\n        lotteryNo: i,\r\n        totalPoolAmount: new BigNumber(lotteryInfo.prizePoolInBow).div(10 ** 18).toFormat(2),\r\n        match4: lotteryInfo.winnerCounts[3],\r\n        match3: lotteryInfo.winnerCounts[2],\r\n        match2: lotteryInfo.winnerCounts[1],\r\n      })\r\n    }\r\n  }\r\n  /* eslint-enable */\r\n  return exportData\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  fetchLotteryCurrentRoundNo,\r\n  fetchLotteryInfo,\r\n  fetchLotteryCurrentPrize,\r\n  fetchLotterySize,\r\n  fetchLotteryMaxRange,\r\n  fetchLotteryTicketData,\r\n} from 'utils/fetchLotteryData'\r\nimport { getBowAddress, getLotteryAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\nimport useWeb3 from './useWeb3'\r\nimport { useERC20 } from './useContract'\r\n\r\nexport const useAllowance = (lotteryType) => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const bowContract = useERC20(getBowAddress())\r\n  const lotteryAddress = getLotteryAddress(lotteryType)\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await bowContract.methods.allowance(account, lotteryAddress).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n    if (account && bowContract && lotteryAddress) {\r\n      fetchAllowance()\r\n    }\r\n  }, [account, bowContract, lotteryAddress, fastRefresh])\r\n\r\n  return allowance\r\n}\r\n\r\nexport const useLotteryCurrentRoundNo = (lotteryType) => {\r\n  const [lotteryCurrentRoundNo, setLotteryCurrentRoundNo] = useState(0)\r\n\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const getLotteryCurrentRoundNo = async () => {\r\n      try {\r\n        const data = await fetchLotteryCurrentRoundNo(lotteryType)\r\n        setLotteryCurrentRoundNo(data)\r\n      } catch (e) {\r\n        console.error('fetch lottery current round no had error', e)\r\n      }\r\n    }\r\n    if (web3) {\r\n      getLotteryCurrentRoundNo()\r\n    }\r\n  }, [web3, lotteryType, fastRefresh])\r\n\r\n  return lotteryCurrentRoundNo\r\n}\r\n\r\nexport const useLotteryInfo = (roundNo, lotteryType) => {\r\n  const [lotteryInfo, setLotteryInfo] = useState(null)\r\n\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const getLotteryInfo = async () => {\r\n      try {\r\n        const data = await fetchLotteryInfo(roundNo, lotteryType)\r\n        setLotteryInfo(data)\r\n      } catch (e) {\r\n        console.error('fetch lottery info had error', e)\r\n      }\r\n    }\r\n    if (web3 && roundNo > 0) {\r\n      getLotteryInfo()\r\n    }\r\n  }, [web3, fastRefresh, roundNo, lotteryType])\r\n\r\n  return lotteryInfo\r\n}\r\n\r\nexport const useLotteryMetaData = (roundNo, lotteryType) => {\r\n  const [lotteryMetaData, setLotteryMetaData] = useState(null)\r\n\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const getLotteryMetaData = async () => {\r\n      try {\r\n        const lotteryCurrentPrize = await fetchLotteryCurrentPrize(roundNo, lotteryType)\r\n        const lotterySize = await fetchLotterySize(lotteryType)\r\n        const lotteryMaxRange = await fetchLotteryMaxRange(lotteryType)\r\n        setLotteryMetaData({ lotteryCurrentPrize, lotterySize, lotteryMaxRange })\r\n      } catch (e) {\r\n        console.error('fetch lottery meta data had error', e)\r\n      }\r\n    }\r\n    if (web3 && roundNo) {\r\n      getLotteryMetaData()\r\n    }\r\n  }, [web3, fastRefresh, roundNo, lotteryType])\r\n\r\n  return lotteryMetaData\r\n}\r\n\r\nexport const useLotteryTicketData = (roundNo, lotteryType) => {\r\n  const [lotteryTicketData, setLotteryTicketData] = useState(null)\r\n\r\n  const web3 = useWeb3()\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const getLotteryTicketData = async () => {\r\n      try {\r\n        const ticketData = await fetchLotteryTicketData(account, roundNo, lotteryType)\r\n        setLotteryTicketData(ticketData)\r\n      } catch (e) {\r\n        console.error('fetch lottery ticket data had error', e)\r\n      }\r\n    }\r\n    if (web3 && account && roundNo) {\r\n      getLotteryTicketData()\r\n    }\r\n  }, [web3, account, fastRefresh, roundNo, lotteryType])\r\n\r\n  return lotteryTicketData\r\n}\r\n\r\nexport const useLotteryTotalPrizeData = (roundNo, lotteryType) => {\r\n  const [lotteryTotalPrizeData, setLotteryTotalPrizeData] = useState({ rewardTicketData: [], totalPrize: '0' })\r\n\r\n  const web3 = useWeb3()\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const getLotteryTotalPrizeData = async () => {\r\n      const roundArray = []\r\n      const rewardTicketData = []\r\n      let totalPrize = new BigNumber(0)\r\n      let lastRoundNo = roundNo\r\n\r\n      const data = await fetchLotteryInfo(roundNo, lotteryType)\r\n      if (data.lotteryStatus < 4) lastRoundNo--\r\n\r\n      for (let i = 1; i <= lastRoundNo; i++) roundArray.push(i)\r\n\r\n      await Promise.all(\r\n        roundArray.map(async (i) => {\r\n          try {\r\n            const tempRewardTicketIds = [i]\r\n            const ticketData = await fetchLotteryTicketData(account, i, lotteryType)\r\n\r\n            for (let j = 0; j < ticketData.length; j++) {\r\n              if (ticketData[j].ticketReward.gt(0) && !ticketData[j].ticketClaim) {\r\n                totalPrize = totalPrize.plus(ticketData[j].ticketReward)\r\n                tempRewardTicketIds.push(ticketData[j].ticketNo)\r\n              }\r\n            }\r\n\r\n            if (tempRewardTicketIds.length > 1) rewardTicketData.push(tempRewardTicketIds.join(','))\r\n          } catch (e) {\r\n            console.error('fetch lottery ticket data had error', e)\r\n          }\r\n        }),\r\n      )\r\n\r\n      /* eslint-disable */\r\n      // for (let i = 1; i <= lastRoundNo; i++) {\r\n      //     try {\r\n      //         let tempRewardTicketIds = [i]\r\n      //         const ticketData = await fetchLotteryTicketData(account, i)\r\n\r\n      //         for (let j = 0; j < ticketData.length; j++) {\r\n      //             if (ticketData[j].ticketReward.gt(0) && !ticketData[j].ticketClaim) {\r\n      //                 totalPrize = totalPrize.plus(ticketData[j].ticketReward)\r\n      //                 tempRewardTicketIds.push(ticketData[j].ticketNo)\r\n      //             }\r\n      //         }\r\n\r\n      //         if (tempRewardTicketIds.length > 1)\r\n      //             rewardTicketData.push(tempRewardTicketIds.join(','))\r\n\r\n      //     } catch (e) {\r\n      //         console.error(\"fetch lottery ticket data had error\", e)\r\n      //     }\r\n      // }\r\n      /* eslint-enable */\r\n\r\n      if (totalPrize.gt(0))\r\n        setLotteryTotalPrizeData({ rewardTicketData, totalPrize: totalPrize.div(10 ** 18).toFormat(2) })\r\n      else setLotteryTotalPrizeData({ rewardTicketData: [], totalPrize: '0' })\r\n    }\r\n    if (web3 && account && roundNo > 0) {\r\n      getLotteryTotalPrizeData()\r\n    }\r\n  }, [web3, account, fastRefresh, roundNo, lotteryType, setLotteryTotalPrizeData])\r\n\r\n  return lotteryTotalPrizeData\r\n}\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport moment from 'moment'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { useLotteryInfo } from 'hooks/useLotteryData'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\n// const BottomTextWrapper = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   text-align: center;\r\n// `\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  color: #1c1917;\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const { t } = useTranslation()\r\n\r\n  const [progress, setProgress] = useState(0)\r\n  const [timeAlarm, setTimeAlarm] = useState('')\r\n  const [noteAlarm, setNoteAlarm] = useState('')\r\n  const { currentLotteryNumber, lotteryType } = useContext(PastLotteryDataContext)\r\n  const lotteryInfo = useLotteryInfo(currentLotteryNumber, lotteryType)\r\n\r\n  useEffect(() => {\r\n    if (lotteryInfo) {\r\n      const currentTimestamp = moment().unix()\r\n      if (currentTimestamp >= lotteryInfo.closingTimestamp) {\r\n        setProgress(0)\r\n        if (lotteryInfo.lotteryStatus > 0 && lotteryInfo.lotteryStatus < 3)\r\n          setNoteAlarm('Winning numbers will be drawn soon')\r\n        else setNoteAlarm('On sale soon')\r\n        setTimeAlarm('')\r\n      } else if (currentTimestamp < lotteryInfo.startingTimestamp) {\r\n        const timeLeft = lotteryInfo.startingTimestamp - currentTimestamp\r\n        setProgress(0)\r\n        const hourLeft = Math.floor(timeLeft / 3600)\r\n        const minuteLeft = Math.ceil((timeLeft - hourLeft * 3600) / 60)\r\n\r\n        if (hourLeft === 0) setTimeAlarm(`${minuteLeft}m`)\r\n        else setTimeAlarm(`${hourLeft}h, ${minuteLeft}m`)\r\n        setNoteAlarm('Until ticket sale')\r\n      } else {\r\n        const timeLenght = lotteryInfo.closingTimestamp - lotteryInfo.startingTimestamp\r\n        const timeLeft = lotteryInfo.closingTimestamp - currentTimestamp\r\n        setProgress((timeLeft / timeLenght) * 100)\r\n        const hourLeft = Math.floor(timeLeft / 3600)\r\n        const minuteLeft = Math.ceil((timeLeft - hourLeft * 3600) / 60)\r\n        if (hourLeft === 0) setTimeAlarm(`${minuteLeft}m`)\r\n        else setTimeAlarm(`${hourLeft}h, ${minuteLeft}m`)\r\n\r\n        setNoteAlarm('Until lottery draw')\r\n      }\r\n    } else {\r\n      setNoteAlarm(`On sale soon`)\r\n      setTimeAlarm('')\r\n    }\r\n  }, [lotteryInfo, lotteryType])\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={progress} secondaryStep={0} showProgressBunny />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold>\r\n          {timeAlarm}\r\n        </StyledPrimaryText>\r\n        <StyledPrimaryText fontSize=\"20px\" bold>\r\n          {t(noteAlarm)}\r\n        </StyledPrimaryText>\r\n      </TopTextWrapper>\r\n      {/* {lotteryHasDrawn && (\r\n        <BottomTextWrapper>\r\n          <Text color=\"textDisabled\">\r\n            {timeUntilLotteryDraw} {t('Until lottery draw')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      )} */}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React, { useContext } from 'react'\r\nimport useTheme from 'hooks/useTheme'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/layout/Container'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: #1c1917;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #44403c;\r\n`\r\n\r\nconst StyledHero = styled.div<StyledHeroProps>`\r\n  position: relative;\r\n`\r\n\r\nconst StyledBanner = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\nconst StyledMobileBanner = styled.img`\r\n  width: 100%;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  position: absolute;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n\r\n  top: 50px;\r\n  transform: translateY(0%);\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    top: 50%;\r\n    right: 0;\r\n    transform: translateY(-50%);\r\n    max-width: 80%;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\ninterface StyledHeroProps {\r\n  isDark: boolean\r\n}\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n  const { lotteryType } = useContext(PastLotteryDataContext)\r\n  const { isDark } = useTheme()\r\n\r\n  return (\r\n    <StyledHero isDark={isDark}>\r\n      <StyledMobileBanner src=\"/images/assets/banners/mobile_lottery_banner.png\" alt=\"mobile_lottery_banner\" />\r\n      <StyledBanner src=\"/images/assets/banners/lottery_banner.png\" alt=\"lottery_banner\" />\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{t(`The ${lotteryType.toUpperCase()} Lottery`)}</Title>\r\n          <Blurb>{t(`Buy tickets with ${lotteryType.toUpperCase()}`)}</Blurb>\r\n          <Blurb>{t('Win if 2, 3 or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { claimReward } from 'utils/callHelpers'\r\nimport useGasBoost from './useGasBoost'\r\n\r\nconst useClaimReward = (lotteryId, lotteryType) => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery(lotteryType)\r\n  const { gasBoostedPrice } = useGasBoost()\r\n  const handleClaimReward = useCallback(\r\n    async (ticketIds) => {\r\n      try {\r\n        const tx = await claimReward(lotteryContract, lotteryId, ticketIds, account, gasBoostedPrice)\r\n        return tx\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract, lotteryId, gasBoostedPrice],\r\n  )\r\n\r\n  return { onClaimReward: handleClaimReward }\r\n}\r\n\r\nexport default useClaimReward\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Button, Modal } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport { useLotteryCurrentRoundNo, useLotteryInfo } from 'hooks/useLotteryData'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  lotteryNo?: number\r\n  lotteryType?: string\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({\r\n  myTicketNumbers,\r\n  lotteryNo = 0,\r\n  lotteryType,\r\n  onDismiss,\r\n}) => {\r\n  const currentLotteryNumber = useLotteryCurrentRoundNo(lotteryType)\r\n  const [winNumbers, setWinNumbers] = useState([0, 0, 0, 0])\r\n  const [lotteryStatus, setLotteryStatus] = useState(0)\r\n  const [listItems, setListItems] = useState<any>(<></>)\r\n  const lotteryInfo = useLotteryInfo(lotteryNo > 0 ? lotteryNo : currentLotteryNumber, lotteryType)\r\n\r\n  useEffect(() => {\r\n    if (lotteryInfo) {\r\n      setLotteryStatus(lotteryInfo.lotteryStatus)\r\n      if (lotteryInfo.lotteryStatus === 4) {\r\n        setWinNumbers(lotteryInfo.winningNumbers)\r\n      } else {\r\n        setWinNumbers([0, 0, 0, 0])\r\n      }\r\n    }\r\n  }, [lotteryInfo, lotteryType])\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  useEffect(() => {\r\n    const tempListItems = myTicketNumbers ? (\r\n      myTicketNumbers.map(({ ticketNumbers }, index) => {\r\n        if (lotteryStatus === 4 && rewardMatch(ticketNumbers[0]) > 1) {\r\n          const emoji = new Array(rewardMatch(ticketNumbers[0]) + 1).join('🤑')\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <RewardP key={index}>\r\n              {emoji}\r\n              {ticketNumbers.toString()}\r\n              {emoji}\r\n            </RewardP>\r\n          )\r\n        }\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        return <p key={index}>{ticketNumbers.toString()}</p>\r\n      })\r\n    ) : (\r\n      <></>\r\n    )\r\n    setListItems(tempListItems)\r\n  }, [lotteryStatus, myTicketNumbers, rewardMatch])\r\n\r\n  return (\r\n    <Modal\r\n      title={t(`My Tickets (Total: %TICKETS%)`, { TICKETS: myTicketNumbers ? myTicketNumbers.length : 0 })}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {t('Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, useModal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport useClaimReward from 'hooks/useClaimReward'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  text-align: center;\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\ninterface PrizesWonContentProps {\r\n  winnings?: string\r\n  tickets?: Array<any>\r\n  rewardTicketIds?: Array<any>\r\n}\r\n\r\nconst PrizesWonContent: React.FC<PrizesWonContentProps> = ({ winnings, tickets, rewardTicketIds }) => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { currentLotteryNumber, lotteryType } = useContext(PastLotteryDataContext)\r\n  const [onPresentMyTickets] = useModal(\r\n    <MyTicketsModal myTicketNumbers={tickets} from=\"buy\" lotteryType={lotteryType} />,\r\n  )\r\n  const { onClaimReward } = useClaimReward(currentLotteryNumber, lotteryType)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onClaimReward(rewardTicketIds)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    } finally {\r\n      setRequestedClaim(false)\r\n    }\r\n  }, [onClaimReward, setRequestedClaim, rewardTicketIds])\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <div>\r\n        <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n          {t('You won!')}\r\n        </Heading>\r\n        {requestedClaim && <Loading />}\r\n        {!requestedClaim && (\r\n          <>\r\n            <WinningsWrapper>\r\n              <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n                {winnings}\r\n              </Heading>\r\n              <Heading as=\"h4\" size=\"lg\">\r\n                {lotteryType.toUpperCase()}\r\n              </Heading>\r\n            </WinningsWrapper>\r\n          </>\r\n        )}\r\n        <StyledCardActions>\r\n          <Button width=\"100%\" disabled={requestedClaim || rewardTicketIds.length === 0} onClick={handleClaim}>\r\n            {t('Collect')}\r\n          </Button>\r\n        </StyledCardActions>\r\n      </div>\r\n      <div>\r\n        <IconWrapper>\r\n          <img src=\"/images/assets/ticket.svg\" alt=\"win\" width={100} />\r\n        </IconWrapper>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {t('View your tickets')}\r\n        </StyledButton>\r\n      </div>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledText = styled(Text)``\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  height: unset;\r\n`\r\n\r\ninterface NoPrizesContentProps {\r\n  tickets: Array<any>\r\n}\r\n\r\nconst NoPrizesContent: React.FC<NoPrizesContentProps> = ({ tickets }) => {\r\n  const { t } = useTranslation()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/assets/lotteryImage3.svg\" alt=\"no prizes won\" width={60} />\r\n      <TextWrapper>\r\n        <StyledText color=\"text\">{t('Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {t('View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'archerswap-uikit'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\ninterface YourPrizesCardProps {\r\n  isAWin?: boolean\r\n  tickets?: Array<any>\r\n  rewardTicketIds?: Array<any>\r\n  winnings?: string\r\n}\r\n\r\nconst YourPrizesCard: React.FC<YourPrizesCardProps> = ({\r\n  isAWin = false,\r\n  tickets = [],\r\n  rewardTicketIds = [],\r\n  winnings = '0.00',\r\n}) => {\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={false}>\r\n      <CardBody>\r\n        {isAWin ? (\r\n          <PrizesWonContent tickets={tickets} rewardTicketIds={rewardTicketIds} winnings={winnings} />\r\n        ) : (\r\n          <NoPrizesContent tickets={tickets} />\r\n        )}\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCard = styled(Card)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 300px;\r\n  border: 2px solid #ed952e;\r\n  border-radius: 8px;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  text-align: center;\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledCard>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <img src=\"/images/assets/ticket.svg\" alt=\"ticket\" width=\"180\" />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">\r\n          {t('Unlock wallet to')}\r\n          <br />\r\n          {t('access lottery')}\r\n        </StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import { useCallback, useState } from 'react'\r\nimport { useLotteryApprove } from './useApprove'\r\n\r\nexport const useApproval = (onPresentApprove: () => void, lotteryType: string) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove } = useLotteryApprove(lotteryType)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport default useApproval\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Flex, Input, InputProps } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  value: string\r\n  onSelectMax?: () => void\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ symbol, onChange, onSelectMax, value }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledFlex alignItems=\"center\">\r\n        <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\r\n        <StyledTokenAdornmentWrapper>\r\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n          <StyledSpacer />\r\n          <div>\r\n            <StyledButton size=\"sm\" onClick={onSelectMax}>\r\n              {t('Max')}\r\n            </StyledButton>\r\n          </div>\r\n        </StyledTokenAdornmentWrapper>\r\n      </StyledFlex>\r\n      {/* <StyledMaxText>{t(`${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText> */}\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\n// const StyledMaxText = styled.div`\r\n//   align-items: center;\r\n//   color: ${(props) => props.theme.colors.primary};\r\n//   display: flex;\r\n//   font-size: 14px;\r\n//   font-weight: 700;\r\n//   height: 44px;\r\n//   justify-content: flex-end;\r\n// `\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-weight: 700;\r\n`\r\n\r\nconst StyledFlex = styled(Flex)`\r\n  border: 1px solid ${(props) => props.theme.colors.text};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  padding: 0px 15px;\r\n  max-height: 30px;\r\n  margin-right: 10px;\r\n  color: black;\r\n  box-shadow: 0px 0px 12px #ffe480;\r\n  border-radius: 7px;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  background: transparent;\r\n  outline: none !important;\r\n  box-shadow: none;\r\n\r\n  &:focus {\r\n    outline: none !important;\r\n    box-shadow: none !important;\r\n  }\r\n`\r\n\r\nexport default TicketInput\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { buyTickets } from 'utils/callHelpers'\r\nimport useGasBoost from './useGasBoost'\r\n\r\nconst generateLottoNumbers = (numberOfTickets, lottoSize, maxRange) => {\r\n  const numberOfNumbers = []\r\n  for (let i = 0; i < numberOfTickets; i++) {\r\n    for (let j = 0; j < lottoSize; j++) {\r\n      numberOfNumbers.push(Math.floor(Math.random() * maxRange))\r\n    }\r\n  }\r\n  return numberOfNumbers\r\n}\r\n\r\nconst useBuyTickets = (lotteryId, lotterySize, maxRange, lotteryType) => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery(lotteryType)\r\n  const { gasBoostedPrice } = useGasBoost()\r\n\r\n  const handleBuyTicket = useCallback(\r\n    async (ticketAmount, ticketPrice) => {\r\n      try {\r\n        const ticketNumbers = generateLottoNumbers(ticketAmount, lotterySize, maxRange)\r\n        const tx = await buyTickets(\r\n          lotteryContract,\r\n          lotteryId,\r\n          ticketAmount,\r\n          ticketPrice,\r\n          ticketNumbers,\r\n          account,\r\n          gasBoostedPrice,\r\n          lotteryType,\r\n        )\r\n        return tx\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract, lotteryId, lotterySize, maxRange, gasBoostedPrice, lotteryType],\r\n  )\r\n\r\n  return { onBuyTickets: handleBuyTicket }\r\n}\r\n\r\nexport default useBuyTickets\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from 'archerswap-uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { fetchDiscountData } from 'utils/fetchLotteryData'\r\nimport useBuyTickets from 'hooks/useBuyTickets'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS } from 'config'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  lotteryId?: number\r\n  lotterySize?: number\r\n  lotteryType?: string\r\n  maxRange?: number\r\n  ticketPrice?: number\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({\r\n  max,\r\n  onDismiss,\r\n  lotteryId,\r\n  lotterySize,\r\n  lotteryType,\r\n  maxRange,\r\n  ticketPrice,\r\n}) => {\r\n  const [val, setVal] = useState('0')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onBuyTickets } = useBuyTickets(lotteryId, lotterySize, maxRange, lotteryType)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const [discountData, setDiscountData] = useState<any>({})\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(ticketPrice)), 10)\r\n  }, [max, ticketPrice])\r\n\r\n  const getCostWithDiscount = useCallback(async () => {\r\n    const res = await fetchDiscountData(lotteryType)\r\n    setDiscountData(res)\r\n  }, [lotteryType])\r\n\r\n  useEffect(() => {\r\n    getCostWithDiscount()\r\n  }, [getCostWithDiscount])\r\n\r\n  const cakeCosts = useCallback(\r\n    (amount: string): number => {\r\n      if (!discountData.bucketOneMax) return 0\r\n      let percent = 0\r\n      if (Number(amount) < Number(discountData.bucketOneMax)) {\r\n        percent = discountData.discountForBucketOne\r\n      } else if (Number(amount) >= Number(discountData.bucketTwoMax)) {\r\n        percent = discountData.discountForBucketThree\r\n      } else {\r\n        percent = discountData.discountForBucketTwo\r\n      }\r\n      return (+amount * ticketPrice * (100 - percent)) / 100\r\n    },\r\n    [discountData, ticketPrice],\r\n  )\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const txHash = await onBuyTickets(val, cakeCosts(val))\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onBuyTickets, setRequestedBuy, cakeCosts, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\r\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  return (\r\n    <Modal title={t('Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={t('TICKET')}\r\n        availableSymbol={lotteryType.toUpperCase()}\r\n      />\r\n      <Wrap>\r\n        <div>\r\n          <div>\r\n            <Tips>\r\n              {t(`1 Ticket = %lotteryPrice% %lotteryType%`, {\r\n                lotteryPrice: ticketPrice,\r\n                lotteryType: lotteryType.toUpperCase(),\r\n              })}\r\n            </Tips>\r\n          </div>\r\n          <div>\r\n            <Announce>\r\n              {t(`Ticket purchases are final. Your %lotteryType% cannot be returned to you after buying tickets.`, {\r\n                lotteryType: lotteryType.toUpperCase(),\r\n              })}\r\n            </Announce>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <StyledMaxText>\r\n            {t(`%num% %lotteryType% Available`, {\r\n              num: fullBalance.toLocaleString(),\r\n              lotteryType: lotteryType.toUpperCase(),\r\n            })}\r\n          </StyledMaxText>\r\n        </div>\r\n      </Wrap>\r\n      <Final>\r\n        <FinalContent>\r\n          {t(`You will spend: %num% %lotteryType%`, {\r\n            num: cakeCosts(val).toLocaleString(),\r\n            lotteryType: lotteryType.toUpperCase(),\r\n          })}\r\n        </FinalContent>\r\n      </Final>\r\n      <ModalActions>\r\n        <StyledButton width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {t('Cancel')}\r\n        </StyledButton>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          width=\"100%\"\r\n          disabled={\r\n            pendingTx ||\r\n            parseInt(val) > Number(maxTickets) ||\r\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\r\n            parseInt(val) < 1\r\n          }\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.text};\r\n`\r\n\r\nconst Final = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 1em;\r\n`\r\n\r\nconst FinalContent = styled.div`\r\n  padding: 15px 30px;\r\n  border-radius: 6px;\r\n  background: ${(props) => props.theme.colors.background};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.text};\r\n`\r\n\r\nconst Announce = styled.div`\r\n  width: 100%;\r\n  font-size: 14px;\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: ${(props) => props.theme.colors.text};\r\n`\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  margin-top: 10px;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.textDisabled};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  border: 1px solid ${(props) => props.theme.colors.text};\r\n  color: ${(props) => props.theme.colors.text};\r\n`\r\n","import React from 'react'\r\nimport { Button, Modal } from 'archerswap-uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst WarningModal: React.FC<{ onConfirm?: () => void; onDismiss?: () => void }> = ({ onConfirm, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Modal title={t('Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {t('Lottery ticket purchases are final.')}\r\n        <br />\r\n        {t('Your BOW will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {t('Tickets are only valid for one lottery draw, and will be burned after the draw.')}\r\n        <br />\r\n        {t(\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={() => {\r\n            onDismiss()\r\n            onConfirm()\r\n          }}\r\n        >\r\n          {t('I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport moment from 'moment'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { useLotteryInfo, useLotteryMetaData } from 'hooks/useLotteryData'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport useTokenBalance, { useETHBalance } from 'hooks/useTokenBalance'\r\nimport { getBowAddress } from 'utils/addressHelpers'\r\nimport { useApproval } from 'hooks/useApproval'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\ninterface TicketCardProps {\r\n  tickets?: Array<any>\r\n}\r\n\r\nconst TicketCard: React.FC<TicketCardProps> = ({ tickets = [] }) => {\r\n  const { t } = useTranslation()\r\n  const { currentLotteryNumber, lotteryType } = useContext(PastLotteryDataContext)\r\n  const allowance = useLotteryAllowance(lotteryType)\r\n  const [lotteryStatus, setLotteryStatus] = useState(0)\r\n  const [confirm, setConfirm] = useState(false)\r\n  const lotteryInfo = useLotteryInfo(currentLotteryNumber, lotteryType)\r\n  const lotteryMetaData = useLotteryMetaData(currentLotteryNumber, lotteryType)\r\n\r\n  const onConfirm = () => {\r\n    setConfirm(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lotteryInfo) setLotteryStatus(lotteryInfo.lotteryStatus)\r\n  }, [lotteryInfo])\r\n\r\n  const bowBalance = useTokenBalance(getBowAddress())\r\n  const coreBalance = useETHBalance()\r\n  const ticketsLength = tickets ? tickets.length : 0\r\n  const [onPresentMyTickets] = useModal(\r\n    <MyTicketsModal myTicketNumbers={tickets} from=\"buy\" lotteryType={lotteryType} />,\r\n  )\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal onConfirm={onConfirm} />)\r\n  const [onPresentBuy] = useModal(\r\n    <BuyTicketModal\r\n      max={lotteryType === 'bow' ? bowBalance : coreBalance}\r\n      tokenName=\"BOW\"\r\n      lotteryId={currentLotteryNumber}\r\n      lotteryType={lotteryType}\r\n      lotterySize={lotteryMetaData ? lotteryMetaData.lotterySize : 4}\r\n      maxRange={lotteryMetaData ? lotteryMetaData.lotteryMaxRange : 10}\r\n      ticketPrice={lotteryInfo ? new BigNumber(lotteryInfo.costPerTicket).div(10 ** 18).toNumber() : 1}\r\n    />,\r\n  )\r\n  const { handleApprove, requestedApproval } = useApproval(null, lotteryType)\r\n\r\n  const approveHandler = () => {\r\n    onPresentApprove()\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (confirm) {\r\n      setConfirm(false)\r\n      handleApprove()\r\n    }\r\n  }, [confirm, handleApprove])\r\n\r\n  const renderLotteryTicketButtons = (buyPossible) => {\r\n    if (lotteryType === 'bow' && !allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button style={{ marginRight: '20px' }} width=\"100%\" disabled>\r\n            {t('View your tickets')}\r\n          </Button>\r\n          <Button width=\"100%\" disabled={requestedApproval || !buyPossible} onClick={approveHandler}>\r\n            {t('Approve BOW')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '20px' }}\r\n          width=\"100%\"\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {t('View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" width=\"100%\" disabled={!buyPossible} onClick={onPresentBuy}>\r\n          {t('Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {!lotteryInfo ||\r\n      (lotteryStatus === 0 && lotteryInfo.startingTimestamp > 0 && lotteryInfo.startingTimestamp > moment().unix()) ||\r\n      lotteryStatus === 4 ? (\r\n        // <Button disabled> {t('On sale soon')}</Button>\r\n        <></>\r\n      ) : (\r\n        renderLotteryTicketButtons(lotteryInfo.closingTimestamp > 0 && lotteryInfo.closingTimestamp > moment().unix())\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Text, Heading } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { useLotteryInfo } from 'hooks/useLotteryData'\r\nimport TicketActions from './TicketActions'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n  tickets?: Array<any>\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 8px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 8px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false, tickets = [] }) => {\r\n  const { t } = useTranslation()\r\n  const { currentLotteryNumber, lotteryType } = useContext(PastLotteryDataContext)\r\n  const [lotteryStatus, setLotteryStatus] = useState(0)\r\n  const lotteryInfo = useLotteryInfo(currentLotteryNumber, lotteryType)\r\n\r\n  useEffect(() => {\r\n    if (lotteryInfo) setLotteryStatus(lotteryInfo.lotteryStatus)\r\n  }, [lotteryInfo])\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <img src=\"/images/assets/ticket.svg\" alt=\"ticket\" width=\"48\" />\r\n          </IconWrapper>\r\n          {lotteryStatus === 0 ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {t('On sale soon')}\r\n              </Text>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {t('Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{tickets ? tickets.length : 0}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions tickets={tickets} />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Heading, Text } from 'archerswap-uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryType: string\r\n  twoMatchesAmount?: number\r\n  threeMatchesAmount?: number\r\n  fourMatchesAmount?: number\r\n  burnAmount?: number\r\n  forwardAmount?: number\r\n  burnBowAmount?: number\r\n  burnHuntAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  oneTicketMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryType,\r\n  twoMatchesAmount = 0,\r\n  threeMatchesAmount = 0,\r\n  fourMatchesAmount = 0,\r\n  burnAmount = 0,\r\n  forwardAmount = 0,\r\n  burnBowAmount = 0,\r\n  burnHuntAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem>\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {lotteryType === 'bow' && (\r\n        <>\r\n          {/* Burn row */}\r\n          <GridItem marginBottom=\"0\">\r\n            <Text>{t(`${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n          </GridItem>\r\n          {pastDraw ? (\r\n            <>\r\n              <GridItem marginBottom=\"0\" />\r\n              <GridItem marginBottom=\"0\">\r\n                <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n              </GridItem>\r\n            </>\r\n          ) : (\r\n            <GridItem marginBottom=\"0\">\r\n              <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n            </GridItem>\r\n          )}\r\n        </>\r\n      )}\r\n      {lotteryType === 'core' && (\r\n        <>\r\n          {/* Forward row */}\r\n          <GridItem marginBottom=\"0\">\r\n            <Text>{t(`${pastDraw ? 'Forwarded' : 'To Forward'}`)}:</Text>\r\n          </GridItem>\r\n          {pastDraw ? (\r\n            <>\r\n              <GridItem marginBottom=\"0\" />\r\n              <GridItem marginBottom=\"0\">\r\n                <RightAlignedText>{forwardAmount.toLocaleString()}</RightAlignedText>\r\n              </GridItem>\r\n            </>\r\n          ) : (\r\n            <GridItem marginBottom=\"0\">\r\n              <RightAlignedText>{forwardAmount.toLocaleString()}</RightAlignedText>\r\n            </GridItem>\r\n          )}\r\n\r\n          {/* Burn BOW row */}\r\n          <GridItem marginBottom=\"0\">\r\n            <Text>{t(`${pastDraw ? 'Burned for BOW' : 'To Burn for BOW'}`)}:</Text>\r\n          </GridItem>\r\n          {pastDraw ? (\r\n            <>\r\n              <GridItem marginBottom=\"0\" />\r\n              <GridItem marginBottom=\"0\">\r\n                <RightAlignedText>{burnBowAmount.toLocaleString()}</RightAlignedText>\r\n              </GridItem>\r\n            </>\r\n          ) : (\r\n            <GridItem marginBottom=\"0\">\r\n              <RightAlignedText>{burnBowAmount.toLocaleString()}</RightAlignedText>\r\n            </GridItem>\r\n          )}\r\n\r\n          {/* Burn HUNT row */}\r\n          <GridItem marginBottom=\"0\">\r\n            <Text>{t(`${pastDraw ? 'Burned for HUNT' : 'To Burn for HUNT'}`)}:</Text>\r\n          </GridItem>\r\n          {pastDraw ? (\r\n            <>\r\n              <GridItem marginBottom=\"0\" />\r\n              <GridItem marginBottom=\"0\">\r\n                <RightAlignedText>{burnHuntAmount.toLocaleString()}</RightAlignedText>\r\n              </GridItem>\r\n            </>\r\n          ) : (\r\n            <GridItem marginBottom=\"0\">\r\n              <RightAlignedText>{burnHuntAmount.toLocaleString()}</RightAlignedText>\r\n            </GridItem>\r\n          )}\r\n        </>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\n// import { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Card, CardBody, CardFooter, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useLotteryInfo, useLotteryMetaData } from 'hooks/useLotteryData'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const { t } = useTranslation()\r\n  // const { account } = useWeb3React()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const { currentLotteryNumber, lotteryType } = useContext(PastLotteryDataContext)\r\n  const lotteryInfo = useLotteryInfo(currentLotteryNumber, lotteryType)\r\n  const lotteryMetaData = useLotteryMetaData(currentLotteryNumber, lotteryType)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {/* {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\r\n                  {t(`Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\r\n                </Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )} */}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <img src={`/images/tokens/${lotteryType}.png`} alt=\"bow\" width=\"48\" />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {t('Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">\r\n                {lotteryMetaData ? lotteryMetaData.lotteryCurrentPrize.div(10 ** 18).toFormat(2) : 0.0}{' '}\r\n                {lotteryType.toUpperCase()}\r\n              </Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryType={lotteryType}\r\n            fourMatchesAmount={\r\n              lotteryInfo && lotteryMetaData && lotteryInfo.prizeDistribution[3] > 0\r\n                ? lotteryMetaData.lotteryCurrentPrize\r\n                    .div(10 ** 18)\r\n                    .times(lotteryInfo.prizeDistribution[3])\r\n                    .div(100)\r\n                    .toNumber()\r\n                : 0\r\n            }\r\n            threeMatchesAmount={\r\n              lotteryInfo && lotteryMetaData && lotteryInfo.prizeDistribution[2] > 0\r\n                ? lotteryMetaData.lotteryCurrentPrize\r\n                    .div(10 ** 18)\r\n                    .times(lotteryInfo.prizeDistribution[2])\r\n                    .div(100)\r\n                    .toFormat(2)\r\n                : 0\r\n            }\r\n            twoMatchesAmount={\r\n              lotteryInfo && lotteryMetaData && lotteryInfo.prizeDistribution[1] > 0\r\n                ? lotteryMetaData.lotteryCurrentPrize\r\n                    .div(10 ** 18)\r\n                    .times(lotteryInfo.prizeDistribution[1])\r\n                    .div(100)\r\n                    .toFormat(2)\r\n                : 0\r\n            }\r\n            burnAmount={\r\n              lotteryInfo && lotteryMetaData && lotteryInfo.prizeDistribution[0] > 0\r\n                ? lotteryMetaData.lotteryCurrentPrize\r\n                    .div(10 ** 18)\r\n                    .times(lotteryInfo.prizeDistribution[0])\r\n                    .div(100)\r\n                    .toFormat(2)\r\n                : 0\r\n            }\r\n            forwardAmount={\r\n              lotteryInfo && lotteryMetaData && lotteryInfo.prizeDistribution[1] > 0\r\n                ? lotteryMetaData.lotteryCurrentPrize\r\n                    .div(10 ** 18)\r\n                    .times(lotteryInfo.prizeDistribution[1])\r\n                    .div(100)\r\n                    .toFormat(2)\r\n                : 0\r\n            }\r\n            burnBowAmount={\r\n              lotteryType === 'core' && lotteryInfo && lotteryMetaData && lotteryInfo.prizeDistribution[4] > 0\r\n                ? lotteryMetaData.lotteryCurrentPrize\r\n                    .div(10 ** 18)\r\n                    .times(lotteryInfo.prizeDistribution[4])\r\n                    .div(100)\r\n                    .toFormat(2)\r\n                : 0\r\n            }\r\n            burnHuntAmount={\r\n              lotteryType === 'core' && lotteryInfo && lotteryMetaData && lotteryInfo.prizeDistribution[5] > 0\r\n                ? lotteryMetaData.lotteryCurrentPrize\r\n                    .div(10 ** 18)\r\n                    .times(lotteryInfo.prizeDistribution[5])\r\n                    .div(100)\r\n                    .toFormat(2)\r\n                : 0\r\n            }\r\n          />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React, { useContext, useState, useEffect, useRef } from 'react'\r\nimport { CSVLink } from 'react-csv'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { Image, Card, CardBody } from 'archerswap-uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { fetchLotteryInfo, exportLotteryInfo } from 'utils/fetchLotteryData'\r\nimport { useTranslation } from 'contexts/Localization'\r\n// import { isExportDeclaration } from 'typescript'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const { currentLotteryNumber, lotteryType } = useContext(PastLotteryDataContext)\r\n  const { fastRefresh } = useRefresh()\r\n  const [lotteryNo, setLotteryNo] = useState(currentLotteryNumber)\r\n  const [winNumbers, setWinNumbers] = useState([0, 0, 0, 0])\r\n  const [winnerCounts, setWinnerCounts] = useState([0, 0, 0, 0])\r\n  const [lotteryData, setLotteryData] = useState([])\r\n  const [exporting, setExporting] = useState(false)\r\n\r\n  const csvLinkEl = useRef<{ link: HTMLAnchorElement }>(null)\r\n\r\n  const exportHeaders = [\r\n    { label: 'Lottery No', key: 'lotteryNo' },\r\n    { label: 'Total Pool Amount', key: 'totalPoolAmount' },\r\n    { label: '4 matches', key: 'match4' },\r\n    { label: '3 matches', key: 'match3' },\r\n    { label: '2 matches', key: 'match2' },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    /* eslint-disable */\r\n    async function getLotteryInfo(lotteryNumber, lotteryType) {\r\n      for (let i = lotteryNumber; i > 0; i--) {\r\n        const lotteryInfo = await fetchLotteryInfo(i, lotteryType)\r\n        if (lotteryInfo && lotteryInfo.lotteryStatus === 4) {\r\n          setLotteryNo(i)\r\n          setWinNumbers(lotteryInfo.winningNumbers)\r\n          setWinnerCounts(lotteryInfo.winnerCounts)\r\n          break\r\n        } else {\r\n          setWinNumbers([0, 0, 0, 0])\r\n          setWinnerCounts([0, 0, 0, 0])\r\n        }\r\n      }\r\n    }\r\n    /* eslint-enable */\r\n    if (currentLotteryNumber > 0) getLotteryInfo(currentLotteryNumber, lotteryType)\r\n  }, [currentLotteryNumber, fastRefresh, lotteryType])\r\n\r\n  const onExport = async () => {\r\n    if (exporting) return\r\n    setExporting(true)\r\n    const data = await exportLotteryInfo(currentLotteryNumber, lotteryType)\r\n    setLotteryData(data)\r\n    setTimeout(() => {\r\n      if (csvLinkEl?.current) csvLinkEl.current.link.click()\r\n    }, 1000)\r\n    setExporting(false)\r\n  }\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryNo === currentLotteryNumber\r\n                  ? `${t('Winning Numbers This Round')}`\r\n                  : t('Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImage>\r\n                  <Image src=\"/images/assets/lotteryImage2.svg\" alt=\"Number 1\" width={65} height={129} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage>\r\n                  <Image src=\"/images/assets/lotteryImage2.svg\" alt=\"Number 2\" width={65} height={129} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage>\r\n                  <Image src=\"/images/assets/lotteryImage2.svg\" alt=\"Number 3\" width={65} height={129} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage>\r\n                  <Image src=\"/images/assets/lotteryImage2.svg\" alt=\"Number 4\" width={65} height={129} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage>\r\n                  <Image src=\"/images/assets/lotteryImage2.svg\" alt=\"Number 1\" width={60} height={119} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage>\r\n                  <Image src=\"/images/assets/lotteryImage2.svg\" alt=\"Number 2\" width={60} height={119} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage>\r\n                  <Image src=\"/images/assets/lotteryImage2.svg\" alt=\"Number 3\" width={60} height={119} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage>\r\n                  <Image src=\"/images/assets/lotteryImage2.svg\" alt=\"Number 4\" width={60} height={119} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <Column>\r\n              <div>\r\n                <RowNoPadding>\r\n                  <CenteredTextWithPadding>{t('Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                  <CenteredTextWithPadding>\r\n                    <strong>{winnerCounts[3]}</strong>\r\n                  </CenteredTextWithPadding>\r\n                </RowNoPadding>\r\n                <RowNoPadding>\r\n                  <CenteredTextWithPadding>{t('Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                  <CenteredTextWithPadding>\r\n                    <strong>{winnerCounts[2]}</strong>\r\n                  </CenteredTextWithPadding>\r\n                </RowNoPadding>\r\n                <RowNoPadding>\r\n                  <CenteredTextWithPadding>{t('Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                  <CenteredTextWithPadding>\r\n                    <strong>{winnerCounts[1]}</strong>\r\n                  </CenteredTextWithPadding>\r\n                </RowNoPadding>\r\n              </div>\r\n            </Column>\r\n            <div\r\n              style={{ color: '#EAAA08', marginTop: '10px', cursor: 'pointer' }}\r\n              role=\"button\"\r\n              tabIndex={0}\r\n              onClick={() => onExport()}\r\n              onKeyDown={() => onExport()}\r\n            >\r\n              {exporting ? t('Exporting...') : t('Export recent winning numbers')}\r\n            </div>\r\n            <CSVLink headers={exportHeaders} filename=\"lotteryData.csv\" data={lotteryData} ref={csvLinkEl} />\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\n// const Link = styled.a`\r\n//   margin-top: 1em;\r\n//   text-decoration: none;\r\n//   color: #25beca;\r\n// `\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-bottom: -5em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 18px;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-bottom: -3.8em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 4px;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n\r\n  @media (max-width: 768px) {\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(265.22deg, #ed952e 0%, #f7ce47 100%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 60px;\r\n  height: 60px;\r\n  z-index: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 40px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 22px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\n\r\nconst HowItWorks2: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { lotteryType } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>{t('How It Works')}</Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Column>\r\n              <div>\r\n                {t(\r\n                  'Spend %lotteryType% to buy tickets, contributing to the lottery pot. Win prizes if 2, 3 or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n                  { lotteryType: lotteryType.toUpperCase() },\r\n                )}\r\n              </div>\r\n            </Column>\r\n            <Link\r\n              href=\"https://docs.archerswap.finance/products-and-features-guide/lottery-coming-soon\"\r\n              target=\"_blank\"\r\n              style={{ color: '#EAAA08' }}\r\n            >\r\n              {t('Read More')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div`\r\n  margin-top: 20px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default HowItWorks2\r\n","import React, { useContext, useEffect, useState, useCallback } from 'react'\r\nimport { Button, BaseLayout } from 'archerswap-uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { fetchLotteryTicketData } from 'utils/fetchLotteryData'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { useLotteryTotalPrizeData } from 'hooks/useLotteryData'\r\nimport { claimReward } from 'utils/callHelpers'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport useGasBoost from 'hooks/useGasBoost'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks2 from './components/HowItWorks2'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst ClaimDiv = styled.div`\r\n  text-align: center;\r\n  margin: 20px auto;\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWeb3React()\r\n  const { currentLotteryNumber, lotteryType } = useContext(PastLotteryDataContext)\r\n  const lotteryContract = useLottery(lotteryType)\r\n  const { t } = useTranslation()\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const { fastRefresh } = useRefresh()\r\n  const [rewardSum, setRewardSum] = useState(new BigNumber(0))\r\n  const [rewardTicketIds, setRewardTicketIds] = useState([])\r\n  const [lotteryTicketData, setLotteryTicketData] = useState(null)\r\n  const isAWin = rewardSum.gt(0)\r\n  const lotteryTotalPrizeData = useLotteryTotalPrizeData(currentLotteryNumber, lotteryType)\r\n  const { gasBoostedPrice } = useGasBoost()\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        const data = await fetchLotteryTicketData(account, currentLotteryNumber, lotteryType)\r\n        setLotteryTicketData(data)\r\n      } catch (err) {\r\n        setLotteryTicketData(null)\r\n      }\r\n    }\r\n    if (currentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [currentLotteryNumber, lotteryType, account, setLotteryTicketData, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    if (lotteryTicketData && lotteryTicketData.length > 0) {\r\n      let tempRewardSum = new BigNumber(0)\r\n      const tempRewardTicketIds = []\r\n\r\n      for (let i = 0; i < lotteryTicketData.length; i++) {\r\n        tempRewardSum = tempRewardSum.plus(lotteryTicketData[i].ticketReward)\r\n        if (lotteryTicketData[i].ticketReward.gt(0) && !lotteryTicketData[i].ticketClaim)\r\n          tempRewardTicketIds.push(lotteryTicketData[i].ticketNo)\r\n      }\r\n\r\n      setRewardSum(tempRewardSum)\r\n      setRewardTicketIds(tempRewardTicketIds)\r\n    } else {\r\n      setRewardSum(new BigNumber(0))\r\n      setRewardTicketIds([])\r\n    }\r\n  }, [lotteryTicketData, setRewardSum, setRewardTicketIds])\r\n\r\n  const handleBatchClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n\r\n      await Promise.all(\r\n        lotteryTotalPrizeData.rewardTicketData.map(async (data) => {\r\n          const array = data.split(',')\r\n          const lotteryId = array[0]\r\n          const ticketIds = array.slice(1)\r\n          await claimReward(lotteryContract, lotteryId, ticketIds, account, gasBoostedPrice)\r\n        }),\r\n      )\r\n    } catch (e) {\r\n      console.error(e)\r\n    } finally {\r\n      setRequestedClaim(false)\r\n    }\r\n  }, [setRequestedClaim, lotteryTotalPrizeData, account, lotteryContract, gasBoostedPrice])\r\n\r\n  return (\r\n    <>\r\n      {lotteryTotalPrizeData.rewardTicketData.length > 0 && (\r\n        <ClaimDiv>\r\n          <Button onClick={handleBatchClaim} disabled={requestedClaim}>\r\n            {`${t('Collect')} (${lotteryTotalPrizeData.rewardTicketData.length} / ${\r\n              lotteryTotalPrizeData.totalPrize\r\n            } ${lotteryType.toUpperCase()})`}\r\n          </Button>\r\n        </ClaimDiv>\r\n      )}\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard\r\n                isAWin={isAWin}\r\n                tickets={lotteryTicketData}\r\n                rewardTicketIds={rewardTicketIds}\r\n                winnings={rewardSum.div(10 ** 18).toFormat(2)}\r\n              />\r\n              <TicketCard isSecondCard={isAWin} tickets={lotteryTicketData} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      {/* <HowItWorks /> */}\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n      <HowItWorks2 />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\nconst InputWrapper = styled.div`\r\n  input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  /* Firefox */\r\n  input[type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0px 15px;\r\n  max-height: 30px;\r\n  color: black;\r\n  box-shadow: 0px 0px 12px #ffe480;\r\n  border-radius: 7px;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  border: 1px solid ${(props) => props.theme.colors.textDisabled};\r\n  border-radius: 4px;\r\n  outline: none !important;\r\n  box-shadow: none;\r\n\r\n  &:focus {\r\n    outline: none !important;\r\n    box-shadow: none !important;\r\n  }\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(true)\r\n  const { t } = useTranslation()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber || value <= 0)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLotteryNumber(initialLotteryNumber)\r\n  }, [initialLotteryNumber, setLotteryNumber])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{t('Select Lottery Number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <InputWrapper>\r\n            <StyledInput\r\n              value={lotteryNumber}\r\n              type=\"number\"\r\n              isWarning={isError}\r\n              max={initialLotteryNumber}\r\n              onChange={handleChange}\r\n            />\r\n          </InputWrapper>\r\n          <ButtonWrapper>\r\n            <StyledButton type=\"submit\" scale=\"sm\" disabled={isError}>\r\n              {t('Search')}\r\n            </StyledButton>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from 'archerswap-uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from 'archerswap-uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: string\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <img src={Icon} alt=\"\" width=\"48\" />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: '',\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React, { useEffect, useState, useCallback, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useClaimReward from 'hooks/useClaimReward'\r\nimport { fetchLotteryTicketData } from 'utils/fetchLotteryData'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const { t } = useTranslation()\r\n  const { lotteryType } = useContext(PastLotteryDataContext)\r\n  const { account } = useWeb3React()\r\n  const [rewardTicketIds, setRewardTicketIds] = useState([])\r\n  const [lotteryTicketData, setLotteryTicketData] = useState(null)\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const { onClaimReward } = useClaimReward(lotteryNumber, lotteryType)\r\n\r\n  useEffect(() => {\r\n    const fetchLotteryData = async () => {\r\n      try {\r\n        const data = await fetchLotteryTicketData(account, lotteryNumber, lotteryType)\r\n        setLotteryTicketData(data)\r\n      } catch (err) {\r\n        setLotteryTicketData(null)\r\n      }\r\n    }\r\n    if (lotteryNumber > 0) {\r\n      fetchLotteryData()\r\n    }\r\n  }, [lotteryNumber, account, lotteryType, setLotteryTicketData])\r\n\r\n  useEffect(() => {\r\n    if (lotteryTicketData && lotteryTicketData.length > 0) {\r\n      const tempRewardTicketIds = []\r\n\r\n      for (let i = 0; i < lotteryTicketData.length; i++) {\r\n        if (lotteryTicketData[i].ticketReward.gt(0) && !lotteryTicketData[i].ticketClaim)\r\n          tempRewardTicketIds.push(lotteryTicketData[i].ticketNo)\r\n      }\r\n\r\n      setRewardTicketIds(tempRewardTicketIds)\r\n    } else {\r\n      setRewardTicketIds([])\r\n    }\r\n  }, [lotteryTicketData, setRewardTicketIds])\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onClaimReward(rewardTicketIds)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    } finally {\r\n      setRequestedClaim(false)\r\n    }\r\n  }, [onClaimReward, setRequestedClaim, rewardTicketIds])\r\n\r\n  const [onPresentMyTickets] = useModal(\r\n    <MyTicketsModal\r\n      myTicketNumbers={lotteryTicketData}\r\n      lotteryNo={lotteryNumber}\r\n      lotteryType={lotteryType}\r\n      from=\"buy\"\r\n    />,\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CardActions>\r\n        <Button\r\n          style={{ marginRight: '20px', color: 'black' }}\r\n          width=\"100%\"\r\n          disabled={!lotteryTicketData || lotteryTicketData.length === 0}\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {t('View your tickets')}\r\n        </Button>\r\n        <Button\r\n          style={{ color: 'black' }}\r\n          width=\"100%\"\r\n          disabled={requestedClaim || rewardTicketIds.length === 0}\r\n          onClick={handleClaim}\r\n        >\r\n          {t('Collect')}\r\n        </Button>\r\n      </CardActions>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{t('View on Core Scan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: number) => {\r\n  const monthName = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate * 1000)\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = `${monthName[date.getUTCMonth()]} ${date.getUTCDate()}`\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'archerswap-uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  @media (max-width: 768px) {\r\n    position: relative;\r\n    margin-bottom: 20px;\r\n  }\r\n`\r\n\r\nconst Timestamp = ({ startTime, endTime }) => {\r\n  const { monthAndDay: startMonthAndDay, hours: startHours } = formatLotteryDate(startTime)\r\n  const { monthAndDay: endMonthAndDay, hours: endHours } = formatLotteryDate(endTime)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {startMonthAndDay}, {startHours}:00 UTC - {endMonthAndDay}, {endHours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React, { useContext } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryAddress } from 'utils/addressHelpers'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: any\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  @media (max-width: 768px) {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const { t } = useTranslation()\r\n  const { lotteryType } = useContext(PastLotteryDataContext)\r\n\r\n  const {\r\n    lotteryID,\r\n    prizePoolInBow,\r\n    prizeDistribution,\r\n    winningNumbers,\r\n    winnerCounts,\r\n    startingTimestamp,\r\n    closingTimestamp,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data &&\r\n    lotteryID > 0 && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <div>\r\n              <Heading size=\"md\" mb=\"24px\">\r\n                {t(`Round #%num%`, { num: lotteryID })}\r\n              </Heading>\r\n              <Timestamp startTime={startingTimestamp} endTime={closingTimestamp} />\r\n            </div>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${winningNumbers[0]}, ${winningNumbers[1]}, ${winningNumbers[2]}, ${winningNumbers[3]}`}\r\n              Icon=\"/images/assets/win_ticket.svg\"\r\n            >\r\n              {t('Winning Numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={t(\r\n                `${new BigNumber(prizePoolInBow).div(10 ** 18).toLocaleString()} ${lotteryType.toUpperCase()}`,\r\n              )}\r\n              Icon={`/images/tokens/${lotteryType}.png`}\r\n            >\r\n              {t('Total Prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryType={lotteryType}\r\n            fourMatchesAmount={\r\n              prizeDistribution[3] > 0\r\n                ? new BigNumber(prizePoolInBow)\r\n                    .div(10 ** 18)\r\n                    .times(prizeDistribution[3])\r\n                    .div(100)\r\n                    .toNumber()\r\n                : 0\r\n            }\r\n            threeMatchesAmount={\r\n              prizeDistribution[2] > 0\r\n                ? new BigNumber(prizePoolInBow)\r\n                    .div(10 ** 18)\r\n                    .times(prizeDistribution[2])\r\n                    .div(100)\r\n                    .toNumber()\r\n                : 0\r\n            }\r\n            twoMatchesAmount={\r\n              prizeDistribution[1] > 0\r\n                ? new BigNumber(prizePoolInBow)\r\n                    .div(10 ** 18)\r\n                    .times(prizeDistribution[1])\r\n                    .div(100)\r\n                    .toNumber()\r\n                : 0\r\n            }\r\n            burnAmount={\r\n              prizeDistribution[0] > 0\r\n                ? new BigNumber(prizePoolInBow)\r\n                    .div(10 ** 18)\r\n                    .times(prizeDistribution[0])\r\n                    .div(100)\r\n                    .toNumber()\r\n                : 0\r\n            }\r\n            forwardAmount={\r\n              prizeDistribution[0] > 0\r\n                ? new BigNumber(prizePoolInBow)\r\n                    .div(10 ** 18)\r\n                    .times(prizeDistribution[0])\r\n                    .div(100)\r\n                    .toNumber()\r\n                : 0\r\n            }\r\n            burnBowAmount={\r\n              lotteryType === 'core' && prizeDistribution[4] > 0\r\n                ? new BigNumber(prizePoolInBow)\r\n                    .div(10 ** 18)\r\n                    .times(prizeDistribution[4])\r\n                    .div(100)\r\n                    .toNumber()\r\n                : 0\r\n            }\r\n            burnHuntAmount={\r\n              lotteryType === 'core' && prizeDistribution[5] > 0\r\n                ? new BigNumber(prizePoolInBow)\r\n                    .div(10 ** 18)\r\n                    .times(prizeDistribution[5])\r\n                    .div(100)\r\n                    .toNumber()\r\n                : 0\r\n            }\r\n            jackpotMatches={winnerCounts[3]}\r\n            threeTicketMatches={winnerCounts[2]}\r\n            twoTicketMatches={winnerCounts[1]}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions\r\n            contractLink={`https://scan.coredao.org/address/${getLotteryAddress(lotteryType)}`}\r\n            lotteryNumber={lotteryID}\r\n          />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from 'archerswap-uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { fetchLotteryInfo } from 'utils/fetchLotteryData'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const { t } = useTranslation()\r\n\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: t('The lottery number you provided does not exist'), type: 'web3' },\r\n    isInitialized: true,\r\n    isLoading: false,\r\n  })\r\n\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n  const { currentLotteryNumber, lotteryType } = useContext(PastLotteryDataContext)\r\n  const [lotteryNo, setLotteryNo] = useState(0)\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  const handleSubmit = useCallback(\r\n    async (lotteryNumber: number) => {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: true,\r\n      }))\r\n\r\n      try {\r\n        const data = await fetchLotteryInfo(lotteryNumber, lotteryType)\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: null, type: null },\r\n          roundData: data,\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      } catch (e) {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: t('The lottery number you provided does not exist'), type: 'web3' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      }\r\n    },\r\n    [setState, t, lotteryType],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (lotteryNo > 0) handleSubmit(lotteryNo)\r\n  }, [lotteryNo, handleSubmit])\r\n\r\n  useEffect(() => {\r\n    /* eslint-disable */\r\n    async function getLotteryInfo(lotteryNumber) {\r\n      for (let i = lotteryNumber; i > 0; i--) {\r\n        const lotteryInfo = await fetchLotteryInfo(i, lotteryType)\r\n        if (lotteryInfo && lotteryInfo.lotteryStatus === 4) {\r\n          setLotteryNo(i)\r\n          break\r\n        }\r\n      }\r\n    }\r\n    /* eslint-enable */\r\n    if (currentLotteryNumber > 0) getLotteryInfo(currentLotteryNumber)\r\n    else setLotteryNo(0)\r\n  }, [currentLotteryNumber, fastRefresh, lotteryType])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={lotteryNo} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useState, useEffect, useContext } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { fetchLotteryGraphData } from 'utils/fetchLotteryData'\r\nimport useTheme from 'hooks/useTheme'\r\nimport styled from 'styled-components'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [idList, setIdList] = useState(['1'])\r\n  const [poolData, setPoolData] = useState([0])\r\n  const [burnedData, setBurnedData] = useState([0])\r\n  const { isDark } = useTheme()\r\n  const { currentLotteryNumber, lotteryType } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    async function getGraphData(startLotteryNo, endLotteryNo) {\r\n      setLoading(true)\r\n      try {\r\n        const graphData = await fetchLotteryGraphData(startLotteryNo, endLotteryNo, lotteryType)\r\n        if (graphData && graphData.idList.length > 0) {\r\n          if (Number(graphData.poolData[graphData.idList.length - 1]) === 0) {\r\n            setIdList(graphData.idList.slice(0, -1))\r\n            setPoolData(graphData.poolData.slice(0, -1))\r\n            setBurnedData(graphData.burnedData.slice(0, -1))\r\n          } else {\r\n            setIdList(graphData.idList)\r\n            setPoolData(graphData.poolData)\r\n            setBurnedData(graphData.burnedData)\r\n          }\r\n        }\r\n        setLoading(false)\r\n      } catch (error) {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    if (currentLotteryNumber > 0) getGraphData(1, currentLotteryNumber)\r\n  }, [currentLotteryNumber, lotteryType])\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: idList,\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: poolData,\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: isDark ? '#FFF' : '#000' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: burnedData,\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#EAAA08' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: isDark ? '#FFF' : '#000', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#EAAA08', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: isDark ? '#FFF' : '#000', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'success']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{t('Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{t('Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{t('History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from 'archerswap-uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/assets/lotteryImage1.svg\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from 'archerswap-uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    img {\r\n      width: 24px;\r\n    }\r\n  }\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 168px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    img {\r\n      width: 24px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: string\r\n  imgUrl: string\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOption, setSelectedOption] = useState(options[0])\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = () => setIsOpen(!isOpen)\r\n\r\n  const onOptionClicked = (option: OptionProps) => () => {\r\n    setSelectedOption(option)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(option)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <div className=\"item\">\r\n            <img src={selectedOption.imgUrl} alt=\"img\" />\r\n            <Text color=\"textSubtle\">{selectedOption.label}</Text>\r\n          </div>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option) =>\r\n            option.label !== selectedOption.label ? (\r\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\r\n                <div className=\"item\">\r\n                  <img src={option.imgUrl} alt=\"img\" />\r\n                  <Text color=\"textSubtle\">{option.label}</Text>\r\n                </div>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { useLotteryCurrentRoundNo } from 'hooks/useLotteryData'\r\nimport { fetchLotteryGraphData } from 'utils/fetchLotteryData'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\nimport Select, { OptionProps } from './components/Select/Select'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    justify-content: space-between;\r\n  }\r\n`\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  // background-image: url('/images/assets/bg6.svg');\r\n  // background-repeat: no-repeat;\r\n  // background-position: top 80px right;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [lotteryType, setLotteryType] = useState('bow')\r\n  const [historyData, setHistoryData] = useState({ idList: ['1'], poolData: [0], burnedData: [0] })\r\n  const historyError = false\r\n  const lotteryCurrentRoundNo = useLotteryCurrentRoundNo(lotteryType)\r\n  const { isDark } = useTheme()\r\n  const textColor = isDark ? '' : '#2A2A2A'\r\n\r\n  useEffect(() => {\r\n    async function getGraphData(startLotteryNo, endLotteryNo) {\r\n      const graphData = await fetchLotteryGraphData(startLotteryNo, endLotteryNo, lotteryType)\r\n      if (graphData)\r\n        setHistoryData({ idList: graphData.idList, poolData: graphData.poolData, burnedData: graphData.burnedData })\r\n    }\r\n    if (lotteryCurrentRoundNo >= 1) {\r\n      getGraphData(1, lotteryCurrentRoundNo)\r\n    }\r\n  }, [lotteryCurrentRoundNo, lotteryType])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  const handleLotteryTypeChange = (option: OptionProps): void => {\r\n    setLotteryType(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PastLotteryDataContext.Provider\r\n        value={{\r\n          historyError,\r\n          historyData,\r\n          mostRecentLotteryNumber: lotteryCurrentRoundNo - 1,\r\n          currentLotteryNumber: lotteryCurrentRoundNo,\r\n          lotteryType,\r\n        }}\r\n      >\r\n        <Hero />\r\n        <Background>\r\n          <Page>\r\n            <Wrapper>\r\n              <Select\r\n                options={[\r\n                  {\r\n                    label: t('BOW'),\r\n                    value: 'bow',\r\n                    imgUrl: '/images/tokens/bow.png',\r\n                  },\r\n                  {\r\n                    label: t('CORE'),\r\n                    value: 'core',\r\n                    imgUrl: '/images/tokens/core.png',\r\n                  },\r\n                ]}\r\n                onChange={handleLotteryTypeChange}\r\n              />\r\n              <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"primary\">\r\n                <ButtonMenuItem style={{ borderRadius: '30px', width: '140px', color: textColor }}>\r\n                  {t('Next draw')}\r\n                </ButtonMenuItem>\r\n                <ButtonMenuItem style={{ borderRadius: '30px', width: '140px', color: textColor }}>\r\n                  {t('Past draws')}\r\n                </ButtonMenuItem>\r\n              </ButtonMenu>\r\n            </Wrapper>\r\n            {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n          </Page>\r\n        </Background>\r\n      </PastLotteryDataContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}