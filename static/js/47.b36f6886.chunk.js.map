{"version":3,"sources":["hooks/useTokenBalance.ts","hooks/useApproveConfirmTransaction.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/hooks/useGetPublicIfoData.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/hooks/useGetWalletIfoData.ts","views/Profile/components/ApproveConfirmButtonsWithWhitelist.tsx","views/Ifos/components/IfoCard/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/PercentageOfTotal.tsx","views/Ifos/components/IfoCard/Contribute.tsx","views/Ifos/components/IfoCard/Tooltip.tsx","views/Ifos/components/IfoCard/MetaLabel.tsx","views/Ifos/components/IfoCard/BalanceInUsd.tsx","views/Ifos/components/IfoCard/Claim.tsx","views/Ifos/components/IfoCard/ActiveSkeleton.tsx","views/Ifos/components/IfoCard/InactiveSkeleton.tsx","views/Ifos/components/IfoCard/IfoCardActions.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","utils/getTimePeriods.ts","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","call","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useNFTBalance","ownedTokensIds","setOwnedTokensIds","isLoading","setIsLoading","getErc721Contract","tokensOfOwner","tokenIds","tokensData","map","tokenId","tokenURI","uri","fetch","data","json","metadata","Promise","all","then","values","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","initialState","approvalState","isWhitelisted","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onWhitelisted","onConfirm","onRequiresApproval","onSuccess","noop","useReducer","dispatch","toastError","useToast","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","console","handleConfirm","Wrapper","styled","div","theme","mediaQueries","xs","md","IfoTabButtons","useRouteMatch","url","isExact","t","useTranslation","activeIndex","scale","variant","as","Link","to","style","borderRadius","color","getStatus","currentTime","startTime","endTime","useGetPublicIfoData","ifo","releaseTime","vestingPercentage","status","secondsUntilStart","progress","secondsUntilEnd","raisingAmount","totalAmount","startTimestamp","endTimestamp","vestingDuration","vestingSlicePeriodSeconds","liquidityIsCreated","setState","currentBlock","useBlock","blockNumber","useIfoContract","makeBatchRequest","_vestingSlicePeriodSeconds","_vestingDuration","parseInt","Math","floor","Date","now","totalSeconds","fetchProgress","StyledIfoCardHeader","Flex","Name","Heading","attrs","size","Description","Text","colors","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","maxWidth","maxHeight","IfoCardDetails","isOpen","setIsOpen","description","onClick","endIcon","mt","useGetWalletIfoData","isPendingTx","offeringTokenBalance","refundingAmount","userInfo","amount","claimed","userVestingInfo","amountTotal","released","releasable","currencyAddress","currencyContract","useERC20","useIfoAllowance","getOfferingAmount","getRefundingAmount","getVestingInfo","computeReleasableAmount","offeringAmount","userInfoResponse","userVestingInfoResponse","releasableAmount","prevState","fetchIfoData","setPendingTx","addUserContributedAmount","setIsClaimed","StyledApprovConfirmButtons","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtonsWithWhitelist","privateSale","isApproveDisabled","isConfirmDisabled","textAlign","disabled","undefined","justifyContent","StyledBalanceInput","Box","input","radii","default","Input","UIKitInput","BalanceInput","title","max","onChange","onSelectMax","value","props","maxDisplay","toFixed","fontSize","placeholder","marginRight","mr","ToggleWrapper","sm","ContributeModal","currency","currencyDecimals","contributedBalance","maxDepositAmount","onDismiss","setValue","raisingTokenContract","getBalanceNumber","valueWithTokenDecimals","times","refresh","setRefresh","response","options","currentAllowance","gt","ethers","constants","MaxUint256","deposit","isHunter","setIsHunter","hunterContract","useHunter","xBowContract","useXbow","lock","isApprovingHunter","isApprovedHunter","isConfirmedHunter","isConfirmingHunter","handleApproveHunter","handleConfirmHunter","e","parseFloat","currentTarget","temp","handleMax","onItemClick","index","isNaN","eq","PercentageOfTotal","userAmount","percentofUserDisplay","toNumber","toLocaleString","maximumFractionDigits","num","Contribute","publicIfoData","toastSuccess","useModal","isPrivate","token","onPresentContributeModal","bold","textTransform","flex","pr","TooltipContent","tooltip","background","text","zIndices","modal","Container","Tooltip","content","children","MetaLabel","minHeight","BalanceInUsd","priceInUsd","useGetApiPrice","hasBalance","total","minimumFractionDigits","AmountGrid","Claim","didContribute","canClaim","tokenSymbol","tokenDecimals","refundedBalance","rewardBalance","handleClaim","harvest","message","handleRelease","release","lastReleaseTimeEst","moment","unix","format","vestingText","marginLeft","claimable","buttonLabel","ActiveSkeleton","InactiveSkeleton","IfoCardActions","isActive","UnlockButton","IfoCardProgress","primaryStep","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Details","IfoCardTime","timeUntil","href","target","rel","ml","StyledCardRibbon","CardRibbon","StyledIfoCard","Card","Item","secondary","Display","IfoCard","id","projectSiteUrl","launchDate","launchTime","saleAmount","raiseAmount","Ribbon","variantColor","getRibbonComponent","ribbon","padding","marginTop","display","margin","Title","IfoCardWrapper","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","List","ul","GuideCard","CardContainer","StyledTitle","StyledHeading","span","Airplane","LaunchCard","activeIfo","ifosConfig","find","Ifo","IfoCards","marginBottom","external","inactiveIfo","filter","PastIfo","Background","StyledContainer","Ifos","path","Banner","mobileSrc","exact","CurrentIfo"],"mappings":"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","file":"static/js/47.b36f6886.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getBowContract, getErc721Contract, getFactoryContract } from 'utils/contractHelpers'\r\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport const useETHBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useWcoreBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.allowance(account, targetAddress).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && targetAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\r\n\r\n  return allowance\r\n}\r\n\r\nexport const useApprove = () => {\r\n  const [approvePending, setApprovePending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n\r\n  const handleApprove = useCallback(\r\n    async (targetAddress: string, contractAddress: string) => {\r\n      try {\r\n        setApprovePending(true)\r\n        const contract = getBep20Contract(contractAddress, web3)\r\n        const tx = await contract.methods\r\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\r\n          .send({ from: account })\r\n        setApprovePending(false)\r\n        return tx\r\n      } catch (e) {\r\n        setApprovePending(false)\r\n        return false\r\n      }\r\n    },\r\n    [web3, account],\r\n  )\r\n\r\n  return { onApprove: handleApprove, approvePending }\r\n}\r\n\r\nexport const useTokenSymbol = (tokenAddress: string) => {\r\n  const [symbol, setSymbol] = useState('')\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.symbol().call()\r\n      setSymbol(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return symbol\r\n}\r\n\r\nexport const useTokenDecimal = (tokenAddress: string) => {\r\n  const [decimal, setDecimal] = useState(0)\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.decimals().call()\r\n      setDecimal(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return decimal\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useNFTBalance = (tokenAddress: string) => {\r\n  const [ownedTokensIds, setOwnedTokensIds] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      setIsLoading(true)\r\n      const contract = getErc721Contract(tokenAddress, web3)\r\n      const tokenIds = await contract.methods.tokensOfOwner(account).call()\r\n      const tokensData = tokenIds.map(async (tokenId) => {\r\n        const uri = await contract.methods.tokenURI(tokenId).call()\r\n        const data = await fetch(uri)\r\n        const metadata = await data.json()\r\n        return { tokenId, ...metadata }\r\n      })\r\n      Promise.all(tokensData).then((values) => setOwnedTokensIds(values))\r\n      setIsLoading(false)\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return { isLoading, ownedTokensIds }\r\n}\r\n\r\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = getWeb3NoAccountFromChain(chainId)\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && chainId) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const bowContract = getBowContract()\r\n      const supply = await bowContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useCirculatingBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const bowContract = getBowContract()\r\n      const [tRes, res0, res1, res2] = await Promise.all([\r\n        bowContract.methods.totalSupply().call(),\r\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\r\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\r\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\r\n      ])\r\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\r\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const usePairsLength = () => {\r\n  const [pairsLength, setPairsLength] = useState(0)\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchPairsLength = async () => {\r\n      const contract = getFactoryContract(web3)\r\n      const res = await contract.methods.allPairsLength().call()\r\n      setPairsLength(res)\r\n    }\r\n\r\n    fetchPairsLength()\r\n  }, [web3, slowRefresh])\r\n\r\n  return pairsLength\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useEffect, useReducer } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToast } from 'state/hooks'\r\n\r\ntype Web3Payload = Record<string, unknown> | null\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'requires_not_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'requires_whitelist'; payload: boolean }\r\n  | { type: 'approve_receipt'; payload: Web3Payload }\r\n  | { type: 'approve_error'; payload: Web3Payload }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt'; payload: Web3Payload }\r\n  | { type: 'confirm_error'; payload: Web3Payload }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  isWhitelisted: boolean\r\n  approvalReceipt: Web3Payload\r\n  approvalError: Web3Payload\r\n  confirmState: LoadingState\r\n  confirmReceipt: Web3Payload\r\n  confirmError: Web3Payload\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  isWhitelisted: false,\r\n  approvalReceipt: null,\r\n  approvalError: null,\r\n  confirmState: 'idle',\r\n  confirmReceipt: null,\r\n  confirmError: null,\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'requires_not_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n      }\r\n    case 'requires_whitelist':\r\n      return {\r\n        ...state,\r\n        isWhitelisted: actions.payload,\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n        approvalReceipt: actions.payload,\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n        approvalError: actions.payload,\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n        confirmReceipt: actions.payload,\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n        confirmError: actions.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype ContractHandler = () => any\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onWhitelisted?: ContractHandler\r\n  onApprove: ContractHandler\r\n  onConfirm: ContractHandler\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: (state: State) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onWhitelisted,\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account) {\r\n      onRequiresApproval().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        } else {\r\n          dispatch({ type: 'requires_not_approval' })\r\n        }\r\n      })\r\n      if (onWhitelisted) {\r\n        onWhitelisted().then((result) => {\r\n          dispatch({ type: 'requires_whitelist', payload: result })\r\n        })\r\n      }\r\n    }\r\n  }, [account, onWhitelisted, onRequiresApproval, dispatch])\r\n\r\n  return {\r\n    isWhitelisted: state.isWhitelisted,\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    approvalReceipt: state.approvalReceipt,\r\n    approvalError: state.approvalError,\r\n    confirmReceipt: state.confirmReceipt,\r\n    confirmError: state.confirmError,\r\n    handleApprove: () => {\r\n      onApprove()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'approve_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'approve_receipt', payload })\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'approve_error', payload: error })\r\n          console.error('An error occurred approving transaction:', error)\r\n          toastError('An error occurred approving transaction')\r\n        })\r\n    },\r\n    handleConfirm: () => {\r\n      onConfirm()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'confirm_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'confirm_receipt', payload })\r\n          onSuccess(state)\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'confirm_error', payload: error })\r\n          console.error('An error occurred confirming transaction:', error)\r\n          toastError('An error occurred confirming transaction')\r\n        })\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 39px;\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    margin-top: 16px;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-top: 0;\r\n  }\r\n`\r\n\r\nconst IfoTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"primary\">\r\n        <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: '30px', color: 'contrast' }}>\r\n          {t('Next IDO')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`} style={{ borderRadius: '30px', color: 'contrast' }}>\r\n          {t('Past IDOs')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default IfoTabButtons\r\n","import BigNumber from 'bignumber.js'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport { useBlock } from 'state/hooks'\r\nimport { useIfoContract } from 'hooks/useContract'\r\nimport { useEffect, useState } from 'react'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nexport interface PublicIfoState {\r\n  status: IfoStatus\r\n  // blocksRemaining: number\r\n  // blocksRemainingToStart: number\r\n  secondsUntilStart: number\r\n  progress: number\r\n  secondsUntilEnd: number\r\n  raisingAmount: BigNumber\r\n  totalAmount: BigNumber\r\n  startTimestamp: number\r\n  endTimestamp: number\r\n  vestingDuration: number\r\n  vestingSlicePeriodSeconds: number\r\n  liquidityIsCreated?: boolean\r\n}\r\n\r\nconst getStatus = (currentTime: number, startTime: number, endTime: number): IfoStatus => {\r\n  // Add an extra check to currentTime because it takes awhile to fetch so the initial value is 0\r\n  // making the UI change to an inaccurate status\r\n  if (currentTime === 0) {\r\n    return 'idle'\r\n  }\r\n\r\n  if (currentTime < startTime) {\r\n    return 'coming_soon'\r\n  }\r\n\r\n  if (currentTime >= startTime && currentTime <= endTime) {\r\n    return 'live'\r\n  }\r\n\r\n  if (currentTime > endTime) {\r\n    return 'finished'\r\n  }\r\n\r\n  return 'idle'\r\n}\r\n\r\n/**\r\n * Gets all public data of an IFO\r\n */\r\nconst useGetPublicIfoData = (ifo: Ifo) => {\r\n  const { address, releaseTime, vestingPercentage } = ifo\r\n  const [state, setState] = useState<PublicIfoState>({\r\n    status: 'idle',\r\n    // blocksRemaining: 0,\r\n    // blocksRemainingToStart: 0,\r\n    secondsUntilStart: 0,\r\n    progress: 5,\r\n    secondsUntilEnd: 0,\r\n    raisingAmount: new BigNumber(0),\r\n    totalAmount: new BigNumber(0),\r\n    startTimestamp: 0,\r\n    endTimestamp: 0,\r\n    vestingDuration: 0,\r\n    vestingSlicePeriodSeconds: 0,\r\n    liquidityIsCreated: false,\r\n  })\r\n  const { blockNumber: currentBlock } = useBlock()\r\n  const contract = useIfoContract(address)\r\n\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      const [startTime, endTime, raisingAmount, totalAmount, liquidityIsCreated] = (await makeBatchRequest([\r\n        contract.methods.startTime().call,\r\n        contract.methods.endTime().call,\r\n        contract.methods.raisingAmount().call,\r\n        contract.methods.totalAmount().call,\r\n        contract.methods.liquidityIsCreated().call,\r\n      ])) as [string, string, string, string, boolean]\r\n      let vestingSlicePeriodSeconds = 0\r\n      let vestingDuration = 0\r\n      if (vestingPercentage > 0) {\r\n        const [_vestingSlicePeriodSeconds, _vestingDuration] = (await makeBatchRequest([\r\n          contract.methods.vestingSlicePeriodSeconds().call,\r\n          contract.methods.vestingDuration().call,\r\n        ])) as [string, string]\r\n        vestingSlicePeriodSeconds = parseInt(_vestingSlicePeriodSeconds, 10)\r\n        vestingDuration = parseInt(_vestingDuration, 10)\r\n      }\r\n\r\n      const startTimestamp = parseInt(startTime, 10)\r\n      const endTimestamp = parseInt(endTime, 10)\r\n\r\n      const currentTime = Math.floor(Date.now() / 1000)\r\n      const status = getStatus(currentTime, startTimestamp, endTimestamp)\r\n      const totalSeconds = endTimestamp - startTimestamp\r\n      // const blocksRemaining = endTimestamp - currentTime\r\n      // const blocksRemainingToStart = startTimestamp - currentTime\r\n\r\n      // Calculate the total progress until finished or until start\r\n      const progress =\r\n        currentTime > startTimestamp\r\n          ? ((currentTime - startTimestamp) / totalSeconds) * 100\r\n          : ((currentTime - releaseTime) / (startTimestamp - releaseTime)) * 100\r\n\r\n      setState({\r\n        secondsUntilEnd: endTimestamp - currentTime,\r\n        secondsUntilStart: startTimestamp - currentTime,\r\n        raisingAmount: new BigNumber(raisingAmount),\r\n        totalAmount: new BigNumber(totalAmount),\r\n        status,\r\n        progress,\r\n        // blocksRemaining,\r\n        // blocksRemainingToStart,\r\n        startTimestamp,\r\n        endTimestamp,\r\n        vestingDuration,\r\n        vestingSlicePeriodSeconds,\r\n        liquidityIsCreated,\r\n      })\r\n    }\r\n\r\n    fetchProgress()\r\n  }, [address, currentBlock, contract, releaseTime, vestingPercentage, setState])\r\n\r\n  return state\r\n}\r\n\r\nexport default useGetPublicIfoData\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, Flex } from 'archerswap-uikit'\r\n\r\ninterface IfoCardHeaderProps {\r\n  ifoId: string\r\n  name: string\r\n  subTitle: string\r\n}\r\n\r\nconst StyledIfoCardHeader = styled(Flex)`\r\n  & > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\r\n  margin-bottom: 4px;\r\n  text-align: left;\r\n  margin-left: 20px;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  text-align: left;\r\n  margin-left: 20px;\r\n`\r\n\r\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\r\n  return (\r\n    <StyledIfoCardHeader mb=\"30px\" alignItems=\"center\">\r\n      <img\r\n        src={`/images/ifos/${ifoId}.png`}\r\n        alt={ifoId}\r\n        width=\"50px\"\r\n        height=\"50px\"\r\n        style={{ maxWidth: '50px', maxHeight: '50px' }}\r\n      />\r\n      <div>\r\n        <Name>{name}</Name>\r\n        <Description>{subTitle}</Description>\r\n      </div>\r\n    </StyledIfoCardHeader>\r\n  )\r\n}\r\n\r\nexport default IfoCardHeader\r\n","import React, { useState } from 'react'\r\n// import styled from 'styled-components'\r\nimport { Text, CardFooter, Button, ChevronDownIcon, ChevronUpIcon } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\r\n\r\nexport interface IfoCardDetailsProps {\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoState\r\n}\r\n\r\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({ ifo }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { description } = ifo\r\n  const handleToggle = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <CardFooter>\r\n      <Button\r\n        variant=\"text\"\r\n        onClick={handleToggle}\r\n        width=\"100%\"\r\n        endIcon={\r\n          isOpen ? <ChevronUpIcon color=\"primary\" width=\"24px\" /> : <ChevronDownIcon color=\"primary\" width=\"24px\" />\r\n        }\r\n      >\r\n        {isOpen ? t('Hide') : t('Details')}\r\n      </Button>\r\n      {isOpen && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"30px\" mt=\"5px\">\r\n            {t(description)}\r\n          </Text>\r\n        </>\r\n      )}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default IfoCardDetails\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { useERC20, useIfoContract } from 'hooks/useContract'\r\nimport { useIfoAllowance } from 'hooks/useAllowance'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nexport interface UserInfo {\r\n  amount: BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface UserVestingInfo {\r\n  amountTotal: BigNumber\r\n  released: BigNumber\r\n  releasable: BigNumber\r\n}\r\n\r\nexport interface WalletIfoState {\r\n  isPendingTx: boolean\r\n  offeringTokenBalance: BigNumber\r\n  refundingAmount: BigNumber\r\n  userInfo: UserInfo\r\n  userVestingInfo: UserVestingInfo\r\n}\r\n\r\n/**\r\n * Gets all data from an IFO related to a wallet\r\n */\r\nconst useGetWalletIfoData = (ifo: Ifo) => {\r\n  const [state, setState] = useState<WalletIfoState>({\r\n    isPendingTx: false,\r\n    offeringTokenBalance: new BigNumber(0),\r\n    refundingAmount: new BigNumber(0),\r\n    userInfo: {\r\n      amount: new BigNumber(0),\r\n      claimed: false,\r\n    },\r\n    userVestingInfo: {\r\n      amountTotal: new BigNumber(0),\r\n      released: new BigNumber(0),\r\n      releasable: new BigNumber(0),\r\n    },\r\n  })\r\n\r\n  const { address, currencyAddress, vestingPercentage } = ifo\r\n  const { isPendingTx } = state\r\n\r\n  const { account } = useWeb3React()\r\n  const contract = useIfoContract(address)\r\n  const currencyContract = useERC20(currencyAddress)\r\n  const allowance = useIfoAllowance(currencyContract, address, isPendingTx)\r\n\r\n  const setPendingTx = (status: boolean) =>\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isPendingTx: status,\r\n    }))\r\n\r\n  const addUserContributedAmount = (amount: BigNumber) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      userInfo: {\r\n        ...prevState.userInfo,\r\n        amount: prevState.userInfo.amount.plus(amount),\r\n      },\r\n    }))\r\n  }\r\n\r\n  const setIsClaimed = () => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      userInfo: {\r\n        ...prevState.userInfo,\r\n        claimed: true,\r\n      },\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchIfoData = async () => {\r\n      let offeringAmount\r\n      let userInfoResponse\r\n      let refundingAmount\r\n      let userVestingInfoResponse\r\n      let releasableAmount\r\n      if (vestingPercentage > 0) {\r\n        ;[\r\n          offeringAmount,\r\n          userInfoResponse,\r\n          refundingAmount,\r\n          userVestingInfoResponse,\r\n          releasableAmount,\r\n        ] = (await makeBatchRequest([\r\n          contract.methods.getOfferingAmount(account).call,\r\n          contract.methods.userInfo(account).call,\r\n          contract.methods.getRefundingAmount(account).call,\r\n          contract.methods.getVestingInfo(account).call,\r\n          contract.methods.computeReleasableAmount(account).call,\r\n        ])) as [string, UserInfo, string, any, string]\r\n      } else {\r\n        ;[offeringAmount, userInfoResponse, refundingAmount] = (await makeBatchRequest([\r\n          contract.methods.getOfferingAmount(account).call,\r\n          contract.methods.userInfo(account).call,\r\n          contract.methods.getRefundingAmount(account).call,\r\n        ])) as [string, UserInfo, string]\r\n      }\r\n\r\n      if (vestingPercentage > 0) {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          offeringTokenBalance: new BigNumber(offeringAmount),\r\n          refundingAmount: new BigNumber(refundingAmount),\r\n          userInfo: {\r\n            amount: new BigNumber(userInfoResponse.amount),\r\n            claimed: userInfoResponse.claimed,\r\n          },\r\n          userVestingInfo: {\r\n            amountTotal: new BigNumber(userVestingInfoResponse.amountTotal),\r\n            released: new BigNumber(userVestingInfoResponse.released),\r\n            releasable: new BigNumber(releasableAmount),\r\n          },\r\n        }))\r\n      } else {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          offeringTokenBalance: new BigNumber(offeringAmount),\r\n          refundingAmount: new BigNumber(refundingAmount),\r\n          userInfo: {\r\n            amount: new BigNumber(userInfoResponse.amount),\r\n            claimed: userInfoResponse.claimed,\r\n          },\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoData()\r\n    }\r\n  }, [account, vestingPercentage, contract, setState])\r\n\r\n  return { ...state, allowance, contract, setPendingTx, addUserContributedAmount, setIsClaimed }\r\n}\r\n\r\nexport default useGetWalletIfoData\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  ChevronRightIcon,\r\n  Text,\r\n  Button as UIKitButton,\r\n  AutoRenewIcon,\r\n  ChevronDownIcon,\r\n  Box,\r\n  Flex,\r\n} from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  privateSale: boolean\r\n  isWhitelisted: boolean\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst StyledApprovConfirmButtons = styled.div`\r\n  align-items: center;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  justify-content: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: 1fr 24px 1fr;\r\n  }\r\n`\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtonsWithWhitelist: React.FC<ApproveConfirmButtonsProps> = ({\r\n  privateSale,\r\n  isWhitelisted,\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  if (privateSale && !isWhitelisted) {\r\n    return (\r\n      <Text as=\"p\" mb=\"24px\" style={{ textAlign: 'center', width: '100%' }}>\r\n        You are not whitlisted.\r\n      </Text>\r\n    )\r\n  }\r\n  return (\r\n    <StyledApprovConfirmButtons>\r\n      <Box>\r\n        <Button\r\n          disabled={isApproveDisabled}\r\n          onClick={onApprove}\r\n          endIcon={isApproving ? spinnerIcon : undefined}\r\n          isLoading={isApproving}\r\n        >\r\n          {isApproving ? t('Approving') : t('Approve')}\r\n        </Button>\r\n      </Box>\r\n      <Flex justifyContent=\"center\">\r\n        <ChevronRight />\r\n        <ChevronBottom />\r\n      </Flex>\r\n      <Box>\r\n        <Button\r\n          onClick={onConfirm}\r\n          disabled={isConfirmDisabled}\r\n          isLoading={isConfirming}\r\n          endIcon={isConfirming ? spinnerIcon : undefined}\r\n        >\r\n          {isConfirming ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      </Box>\r\n    </StyledApprovConfirmButtons>\r\n  )\r\n}\r\n\r\nexport default ApproveConfirmButtonsWithWhitelist\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Box, BoxProps, Flex, Input as UIKitInput, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface BalanceInputProps extends BoxProps {\r\n  title: string\r\n  max: number\r\n  symbol: string\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n  value: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst StyledBalanceInput = styled(Box)`\r\n  background: ${({ theme }) => theme.colors.input};\r\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.2) inset;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  ::-webkit-outer-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  box-shadow: none;\r\n  flex: 1;\r\n`\r\n\r\n// const TokenSymbol = styled(Text)`\r\n//   max-width: 120px;\r\n//   overflow: hidden;\r\n//   text-overflow: ellipsis;\r\n//   white-space: nowrap;\r\n//   flex: 1;\r\n// `\r\n\r\nconst BalanceInput: React.FC<BalanceInputProps> = ({ title, max, symbol, onChange, onSelectMax, value, ...props }) => {\r\n  const { t } = useTranslation()\r\n  const maxDisplay = max.toFixed(2)\r\n\r\n  return (\r\n    <StyledBalanceInput {...props}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text fontSize=\"14px\">{title}</Text>\r\n        <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: maxDisplay })}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Input onChange={onChange} placeholder=\"0\" value={value} type=\"number\" style={{ marginRight: '10px' }} />\r\n        {onSelectMax && (\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            Max\r\n          </Button>\r\n        )}\r\n        <Text fontSize=\"14px\">{symbol}</Text>\r\n      </Flex>\r\n    </StyledBalanceInput>\r\n  )\r\n}\r\n\r\nexport default BalanceInput\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport styled from 'styled-components'\r\nimport { Modal, Box, Text, ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ApproveConfirmButtonsWithWhitelist from 'views/Profile/components/ApproveConfirmButtonsWithWhitelist'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useERC20, useHunter, useXbow } from 'hooks/useContract'\r\nimport BalanceInput from './BalanceInput'\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  privateSale: boolean\r\n  currency: string\r\n  contract: any\r\n  currencyAddress: string\r\n  currencyDecimals: number\r\n  contributedBalance?: number\r\n  maxDepositAmount?: number\r\n  onSuccess: (amount: BigNumber) => void\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ContributeModal: React.FC<Props> = ({\r\n  privateSale,\r\n  currency,\r\n  contract,\r\n  currencyAddress,\r\n  currencyDecimals,\r\n  contributedBalance,\r\n  maxDepositAmount,\r\n  onDismiss,\r\n  onSuccess,\r\n}) => {\r\n  const [value, setValue] = useState('')\r\n  const { account } = useWeb3React()\r\n  const raisingTokenContract = useERC20(currencyAddress)\r\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress), currencyDecimals)\r\n  const { t } = useTranslation()\r\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(currencyDecimals))\r\n\r\n  const [refresh, setRefresh] = useState(0)\r\n\r\n  const {\r\n    isWhitelisted,\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onWhitelisted: useCallback(async () => {\r\n      try {\r\n        const response = await contract.methods.isWhitelisted(account).call()\r\n        return response\r\n      } catch (error) {\r\n        return false\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [refresh, account, contract]),\r\n    onRequiresApproval: useCallback(async () => {\r\n      try {\r\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gt(0)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    }, [raisingTokenContract, account, contract]),\r\n    onApprove: () => {\r\n      return raisingTokenContract.methods\r\n        .approve(contract.options.address, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      onDismiss()\r\n      onSuccess(valueWithTokenDecimals)\r\n    },\r\n  })\r\n\r\n  const [isHunter, setIsHunter] = useState(true)\r\n\r\n  const hunterContract = useHunter()\r\n  const xBowContract = useXbow()\r\n  const isWhitelistedHunter = true\r\n\r\n  const {\r\n    isApproving: isApprovingHunter,\r\n    isApproved: isApprovedHunter,\r\n    isConfirmed: isConfirmedHunter,\r\n    isConfirming: isConfirmingHunter,\r\n    handleApprove: handleApproveHunter,\r\n    handleConfirm: handleConfirmHunter,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: useCallback(async () => {\r\n      try {\r\n        const response = isHunter\r\n          ? await hunterContract.methods.allowance(account, contract.options.address).call()\r\n          : await xBowContract.methods.allowance(account, contract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gt(0)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    }, [isHunter, account, contract, hunterContract, xBowContract]),\r\n    onApprove: () => {\r\n      return isHunter\r\n        ? hunterContract.methods.approve(contract.options.address, ethers.constants.MaxUint256).send({ from: account })\r\n        : xBowContract.methods.approve(contract.options.address, ethers.constants.MaxUint256).send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return contract.methods.lock(isHunter).send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      setRefresh(refresh + 1)\r\n    },\r\n  })\r\n\r\n  const handleMax = () => {\r\n    let temp = balance\r\n    if (maxDepositAmount > 0 && maxDepositAmount - contributedBalance < temp) {\r\n      temp = maxDepositAmount - contributedBalance\r\n    }\r\n\r\n    setValue(temp.toString())\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Contribute %symbol%', { symbol: currency })} onDismiss={onDismiss}>\r\n      <Box maxWidth=\"400px\">\r\n        {(!privateSale || isWhitelisted) && (\r\n          <BalanceInput\r\n            title={t('Contribute')}\r\n            value={value}\r\n            onChange={(e) => {\r\n              if (parseFloat(e.currentTarget.value) >= 0 || !e.currentTarget.value) setValue(e.currentTarget.value)\r\n            }}\r\n            symbol={currency}\r\n            max={balance}\r\n            onSelectMax={() => handleMax()}\r\n            mb=\"24px\"\r\n          />\r\n        )}\r\n        {!privateSale || isWhitelisted ? (\r\n          <Text as=\"p\" mb=\"24px\">\r\n            {t(\r\n              \"If you don't contribute enough BOW tokens, you may not receive any IDO tokens at all and will only receive a full refund of your BOW tokens.\",\r\n            )}\r\n          </Text>\r\n        ) : (\r\n          <Text as=\"p\" mb=\"24px\">\r\n            {t('To get whitelisted, you need to lock 200 xBOW (300 HUNT) till the sale ends.')}\r\n          </Text>\r\n        )}\r\n        {privateSale && !isWhitelisted && (\r\n          <>\r\n            <ToggleWrapper>\r\n              <ButtonMenu\r\n                activeIndex={isHunter ? 0 : 1}\r\n                onItemClick={(index) => {\r\n                  setIsHunter(index === 0)\r\n                }}\r\n                scale=\"sm\"\r\n                variant=\"primary\"\r\n              >\r\n                <ButtonMenuItem style={{ borderRadius: '30px', width: '140px' }}>{t('Hunter')}</ButtonMenuItem>\r\n                <ButtonMenuItem style={{ borderRadius: '30px', width: '140px' }}>{t('xBow')}</ButtonMenuItem>\r\n              </ButtonMenu>\r\n            </ToggleWrapper>\r\n            <ApproveConfirmButtonsWithWhitelist\r\n              privateSale={privateSale}\r\n              isWhitelisted={isWhitelistedHunter}\r\n              isApproveDisabled={isConfirmedHunter || isConfirmingHunter || isApprovedHunter}\r\n              isApproving={isApprovingHunter}\r\n              isConfirmDisabled={!isApprovedHunter || isConfirmedHunter}\r\n              isConfirming={isConfirmingHunter}\r\n              onApprove={handleApproveHunter}\r\n              onConfirm={handleConfirmHunter}\r\n            />\r\n          </>\r\n        )}\r\n        {(!privateSale || isWhitelisted) && (\r\n          <ApproveConfirmButtonsWithWhitelist\r\n            privateSale={privateSale}\r\n            isWhitelisted={isWhitelisted}\r\n            isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={\r\n              !isApproved ||\r\n              isConfirmed ||\r\n              valueWithTokenDecimals.isNaN() ||\r\n              valueWithTokenDecimals.eq(0) ||\r\n              valueWithTokenDecimals.gt(new BigNumber(balance).times(new BigNumber(10).pow(currencyDecimals))) ||\r\n              (maxDepositAmount > 0 &&\r\n                valueWithTokenDecimals.gt(\r\n                  new BigNumber(maxDepositAmount - contributedBalance).times(new BigNumber(10).pow(currencyDecimals)),\r\n                ))\r\n            }\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        )}\r\n        {/* <LinkExternal\r\n          href={`/add/CORE/${currencyAddress}`}\r\n          style={{ margin: '16px auto 0' }}\r\n        >\r\n          {`Get ${currency}`}\r\n        </LinkExternal> */}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ContributeModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { UserInfo } from 'views/Ifos/hooks/useGetWalletIfoData'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface PercentageOfTotalProps {\r\n  userAmount: UserInfo['amount']\r\n  totalAmount: BigNumber\r\n}\r\n\r\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, totalAmount }) => {\r\n  const { t } = useTranslation()\r\n  const percentOfUserContribution = totalAmount.gt(0) ? userAmount.div(totalAmount).times(100).toNumber() : 0\r\n  const percentofUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 2 })\r\n\r\n  return (\r\n    <Text fontSize=\"14px\" color=\"textSubtle\">\r\n      {t('%num% of total', { num: percentofUserDisplay })}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default PercentageOfTotal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { Box, Button, Flex, Text, useModal } from 'archerswap-uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useToast } from 'state/hooks'\r\nimport { UserInfo } from '../../hooks/useGetWalletIfoData'\r\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\r\nimport ContributeModal from './ContributeModal'\r\nimport PercentageOfTotal from './PercentageOfTotal'\r\n\r\ninterface ContributeProps {\r\n  ifo: Ifo\r\n  contract: Contract\r\n  userInfo: UserInfo\r\n  isPendingTx: boolean\r\n  publicIfoData: PublicIfoState\r\n  addUserContributedAmount: (amount: BigNumber) => void\r\n}\r\nconst Contribute: React.FC<ContributeProps> = ({\r\n  ifo,\r\n  contract,\r\n  userInfo,\r\n  isPendingTx,\r\n  publicIfoData,\r\n  addUserContributedAmount,\r\n}) => {\r\n  const { currency, currencyAddress, currencyDecimals, maxDepositAmount } = ifo\r\n  const { totalAmount } = publicIfoData\r\n  const { t } = useTranslation()\r\n  const contributedBalance = getBalanceNumber(userInfo.amount, currencyDecimals)\r\n  const { toastSuccess } = useToast()\r\n\r\n  const handleContributeSuccess = (amount: BigNumber) => {\r\n    toastSuccess(\r\n      t('Success!'),\r\n      t(`You have contributed %num% %token% tokens to this IDO!`, {\r\n        num: getBalanceNumber(amount, currencyDecimals),\r\n        token: currency,\r\n      }),\r\n    )\r\n    addUserContributedAmount(amount)\r\n  }\r\n\r\n  const [onPresentContributeModal] = useModal(\r\n    <ContributeModal\r\n      privateSale={ifo.isPrivate}\r\n      currency={currency}\r\n      contract={contract}\r\n      currencyAddress={currencyAddress}\r\n      currencyDecimals={currencyDecimals}\r\n      contributedBalance={contributedBalance}\r\n      maxDepositAmount={maxDepositAmount}\r\n      onSuccess={handleContributeSuccess}\r\n    />,\r\n    false,\r\n  )\r\n\r\n  return (\r\n    <Box>\r\n      <Flex>\r\n        <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\r\n          {currency}\r\n        </Text>\r\n        <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n          {t('Committed')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\">\r\n        <Box style={{ flex: 1 }} pr=\"8px\">\r\n          <Text bold fontSize=\"22px\">\r\n            {contributedBalance.toFixed(2)}\r\n          </Text>\r\n        </Box>\r\n        <Button\r\n          onClick={onPresentContributeModal}\r\n          disabled={isPendingTx || (maxDepositAmount > 0 && contributedBalance >= maxDepositAmount)}\r\n          style={{ height: '40px' }}\r\n        >\r\n          {t('Contribute')}\r\n        </Button>\r\n      </Flex>\r\n      <PercentageOfTotal userAmount={userInfo.amount} totalAmount={totalAmount} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Contribute\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface TooltipProps {\r\n  content: React.ReactNode\r\n}\r\n\r\nconst TooltipContent = styled.div`\r\n  background: ${({ theme }) => theme.tooltip.background};\r\n  padding: 16px;\r\n  border-radius: 16px;\r\n  color: ${({ theme }) => theme.tooltip.text};\r\n  width: max-content;\r\n  display: none;\r\n  padding: 16px;\r\n  max-height: 500px;\r\n  z-index: ${({ theme }) => theme.zIndices.modal};\r\n  position: absolute;\r\n  bottom: calc(100% + 16px);\r\n  transform: translate(34px, 0);\r\n  right: 0;\r\n\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid ${({ theme }) => theme.tooltip.background};\r\n    bottom: 0;\r\n    position: absolute;\r\n    transform: translate(-34px, 9px);\r\n    right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  &:hover ${TooltipContent}, &:focus-within ${TooltipContent} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({ content, children }) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n      <TooltipContent>{content}</TooltipContent>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Tooltip\r\n","import React from 'react'\r\nimport { Box, BoxProps, Text } from 'archerswap-uikit'\r\n\r\ntype MetaLabel = BoxProps\r\n\r\nconst MetaLabel: React.FC<BoxProps> = ({ children, ...props }) => {\r\n  return (\r\n    <Box minHeight=\"18px\" {...props}>\r\n      <Text color=\"textSubtle\" fontSize=\"12px\">\r\n        {children}\r\n      </Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default MetaLabel\r\n","import React from 'react'\r\nimport { useGetApiPrice } from 'state/hooks'\r\nimport MetaLabel from './MetaLabel'\r\n\r\ninterface BalanceInUsdProps {\r\n  token: string\r\n  balance: number\r\n}\r\n\r\nconst BalanceInUsd: React.FC<BalanceInUsdProps> = ({ token, balance }) => {\r\n  const priceInUsd = useGetApiPrice(token)\r\n  const hasBalance = !!priceInUsd && balance > 0\r\n  const total = priceInUsd * balance\r\n\r\n  return (\r\n    <MetaLabel>\r\n      {hasBalance && `~$${total.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\r\n    </MetaLabel>\r\n  )\r\n}\r\n\r\nexport default BalanceInUsd\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AutoRenewIcon, Box, Button, Flex, Text, HelpIcon } from 'archerswap-uikit'\r\nimport moment from 'moment'\r\nimport { useToast } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Ifo } from 'config/constants/types'\r\nimport ToolTip from './Tooltip'\r\nimport { UserInfo, UserVestingInfo, WalletIfoState } from '../../hooks/useGetWalletIfoData'\r\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\r\nimport BalanceInUsd from './BalanceInUsd'\r\nimport MetaLabel from './MetaLabel'\r\n\r\ninterface ClaimProps {\r\n  ifo: Ifo\r\n  contract: Contract\r\n  userInfo: UserInfo\r\n  userVestingInfo: UserVestingInfo\r\n  isPendingTx: WalletIfoState['isPendingTx']\r\n  setPendingTx: (status: boolean) => void\r\n  offeringTokenBalance: WalletIfoState['offeringTokenBalance']\r\n  refundingAmount: WalletIfoState['refundingAmount']\r\n  setIsClaimed: () => void\r\n  publicIfoData: PublicIfoState\r\n}\r\n\r\nconst AmountGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 8px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst DISPLAY_DECIMALS = 4\r\n\r\nconst Claim: React.FC<ClaimProps> = ({\r\n  ifo,\r\n  contract,\r\n  userInfo,\r\n  userVestingInfo,\r\n  isPendingTx,\r\n  setPendingTx,\r\n  offeringTokenBalance,\r\n  refundingAmount,\r\n  setIsClaimed,\r\n  publicIfoData,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const didContribute = userInfo.amount.gt(0)\r\n  const canClaim = !userInfo.claimed || userVestingInfo.releasable.gt(0)\r\n  const { tokenSymbol, tokenDecimals, currencyDecimals, vestingPercentage } = ifo\r\n  const contributedBalance = getBalanceNumber(userInfo.amount, currencyDecimals)\r\n  const refundedBalance = getBalanceNumber(refundingAmount, currencyDecimals).toFixed(\r\n    userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS,\r\n  )\r\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals)\r\n  const { toastError, toastSuccess } = useToast()\r\n  const { liquidityIsCreated, vestingDuration, vestingSlicePeriodSeconds, endTimestamp } = publicIfoData\r\n\r\n  const handleClaim = async () => {\r\n    try {\r\n      setPendingTx(true)\r\n      await contract.methods.harvest().send({ from: account })\r\n      setIsClaimed()\r\n      toastSuccess('Success!', 'You have successfully claimed your rewards.')\r\n    } catch (error) {\r\n      toastError('Error', error?.message)\r\n      console.error(error)\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  const handleRelease = async () => {\r\n    try {\r\n      setPendingTx(true)\r\n      await contract.methods.release().send({ from: account })\r\n      setIsClaimed()\r\n      toastSuccess('Success!', 'You have successfully claimed your rewards.')\r\n    } catch (error) {\r\n      toastError('Error', error?.message)\r\n      console.error(error)\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  const buttonLabel = () => {\r\n    if (!liquidityIsCreated) {\r\n      return t('Adding Liquidity...')\r\n    }\r\n    if (canClaim) {\r\n      if (!vestingPercentage) {\r\n        return t('Claim')\r\n      }\r\n\r\n      let claimable = getBalanceNumber(offeringTokenBalance.times((100 - vestingPercentage) / 100), tokenDecimals)\r\n      if (userVestingInfo.releasable.gt(0)) {\r\n        claimable = getBalanceNumber(userVestingInfo.releasable, tokenDecimals)\r\n      }\r\n      return `${t('Claim')}(${claimable})`\r\n    }\r\n\r\n    return t('Claimed')\r\n  }\r\n\r\n  const vestingText = () => {\r\n    const lastReleaseTimeEst = userVestingInfo.released.gt(0)\r\n      ? Math.floor(userVestingInfo.amountTotal.times(vestingDuration).div(userVestingInfo.released).toNumber())\r\n      : 0\r\n\r\n    return (\r\n      <>\r\n        <span>{`${t('Initial release')}:  ${getBalanceNumber(\r\n          offeringTokenBalance.times((100 - vestingPercentage) / 100),\r\n          tokenDecimals,\r\n        )} ${tokenSymbol}`}</span>\r\n        <br />\r\n        <span>{`${t('Total vesting')}: ${getBalanceNumber(\r\n          userVestingInfo.amountTotal,\r\n          tokenDecimals,\r\n        )} ${tokenSymbol}`}</span>\r\n        <br />\r\n        <span>{`${t('Vesting claimed')}: ${getBalanceNumber(\r\n          userVestingInfo.released,\r\n          tokenDecimals,\r\n        )} ${tokenSymbol}`}</span>\r\n        <br />\r\n        {lastReleaseTimeEst > 0 && (\r\n          <>\r\n            <span>{`${t('Claimable time')}: ${moment\r\n              .unix(endTimestamp + lastReleaseTimeEst + vestingSlicePeriodSeconds)\r\n              .format('YYYY-MM-DD hh:mm A')}`}</span>\r\n            <br />\r\n          </>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AmountGrid>\r\n        <Box>\r\n          <Flex mb=\"4px\">\r\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\r\n              {ifo.currency} {t('Tokens')}\r\n            </Text>\r\n            <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n              {t('Committed')}\r\n            </Text>\r\n          </Flex>\r\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\r\n            {contributedBalance.toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)}\r\n          </Text>\r\n          <MetaLabel>{canClaim ? `${refundedBalance} to reclaim` : `${refundedBalance} reclaimed`}</MetaLabel>\r\n        </Box>\r\n        <Box>\r\n          <Flex mb=\"4px\">\r\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\r\n              {tokenSymbol}\r\n            </Text>\r\n            {!canClaim ? (\r\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n                Claimed\r\n              </Text>\r\n            ) : (\r\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n                To Claim\r\n              </Text>\r\n            )}\r\n            {vestingPercentage > 0 && (\r\n              <ToolTip content={vestingText()}>\r\n                <HelpIcon color=\"textSubtle\" style={{ marginLeft: '5px' }} />\r\n              </ToolTip>\r\n            )}\r\n          </Flex>\r\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\r\n            {rewardBalance.toFixed(offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS)}\r\n          </Text>\r\n          {canClaim && <BalanceInUsd token={tokenSymbol} balance={rewardBalance} />}\r\n        </Box>\r\n      </AmountGrid>\r\n      {didContribute ? (\r\n        <Button\r\n          onClick={!userInfo.claimed ? handleClaim : handleRelease}\r\n          disabled={isPendingTx || !canClaim || !liquidityIsCreated}\r\n          width=\"100%\"\r\n          mb=\"24px\"\r\n          isLoading={isPendingTx}\r\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        >\r\n          {buttonLabel()}\r\n        </Button>\r\n      ) : (\r\n        <Button disabled width=\"100%\" mb=\"24px\">\r\n          {t('Nothing to Claim')}\r\n        </Button>\r\n      )}\r\n      {!liquidityIsCreated ? (\r\n        <Text mt=\"4px\" fontSize=\"14px\">\r\n          {t('Please wait until liquidity is created')}\r\n        </Text>\r\n      ) : (\r\n        <Text mt=\"4px\" fontSize=\"14px\">\r\n          {t('You’ll be refunded any excess tokens when you claim')}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Claim\r\n","import React from 'react'\r\nimport { Box, Skeleton } from 'archerswap-uikit'\r\n\r\nconst ActiveSkeleton = () => (\r\n  <Box>\r\n    <Skeleton height=\"18px\" mb=\"4px\" width=\"30%\" />\r\n    <Skeleton height=\"48px\" mb=\"2px\" />\r\n    <Skeleton height=\"19px\" width=\"15%\" />\r\n  </Box>\r\n)\r\n\r\nexport default ActiveSkeleton\r\n","import React from 'react'\r\nimport { Box, Flex, Skeleton } from 'archerswap-uikit'\r\n\r\nconst InactiveSkeleton = () => (\r\n  <>\r\n    <Flex mb=\"24px\">\r\n      <Box width=\"50%\" height=\"52px\">\r\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\r\n        <Skeleton height=\"30px\" width=\"20%\" />\r\n      </Box>\r\n      <Box width=\"50%\" height=\"52px\">\r\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\r\n        <Skeleton height=\"30px\" width=\"20%\" />\r\n      </Box>\r\n    </Flex>\r\n    <Skeleton height=\"48px\" mb=\"24px\" />\r\n    <Skeleton height=\"48px\" mt=\"4px\" />\r\n  </>\r\n)\r\n\r\nexport default InactiveSkeleton\r\n","import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Ifo } from 'config/constants/types'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { PublicIfoState } from 'views/Ifos/hooks/useGetPublicIfoData'\r\nimport useGetWalletIfoData from '../../hooks/useGetWalletIfoData'\r\nimport Contribute from './Contribute'\r\nimport Claim from './Claim'\r\nimport ActiveSkeleton from './ActiveSkeleton'\r\nimport InactiveSkeleton from './InactiveSkeleton'\r\n\r\nexport interface Props {\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoState\r\n}\r\n\r\nconst IfoCardActions: React.FC<Props> = ({ ifo, publicIfoData }) => {\r\n  const {\r\n    isPendingTx,\r\n    offeringTokenBalance,\r\n    refundingAmount,\r\n    userInfo,\r\n    userVestingInfo,\r\n    contract,\r\n    setPendingTx,\r\n    addUserContributedAmount,\r\n    setIsClaimed,\r\n  } = useGetWalletIfoData(ifo)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <UnlockButton />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {ifo.isActive && publicIfoData.status === 'idle' && <ActiveSkeleton />}\r\n      {!ifo.isActive && publicIfoData.status === 'idle' && <InactiveSkeleton />}\r\n      {publicIfoData.status === 'live' && (\r\n        <Contribute\r\n          ifo={ifo}\r\n          contract={contract}\r\n          userInfo={userInfo}\r\n          isPendingTx={isPendingTx}\r\n          publicIfoData={publicIfoData}\r\n          addUserContributedAmount={addUserContributedAmount}\r\n        />\r\n      )}\r\n      {publicIfoData.status === 'finished' && (\r\n        <Claim\r\n          ifo={ifo}\r\n          contract={contract}\r\n          userInfo={userInfo}\r\n          userVestingInfo={userVestingInfo}\r\n          isPendingTx={isPendingTx}\r\n          setPendingTx={setPendingTx}\r\n          offeringTokenBalance={offeringTokenBalance}\r\n          refundingAmount={refundingAmount}\r\n          setIsClaimed={setIsClaimed}\r\n          publicIfoData={publicIfoData}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardActions\r\n","import React from 'react'\r\nimport { Box, Progress } from 'archerswap-uikit'\r\n\r\ninterface IfoCardProgressProps {\r\n  progress: number\r\n}\r\n\r\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\r\n  return (\r\n    <Box mb=\"16px\">\r\n      <Progress primaryStep={progress} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default IfoCardProgress\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link } from 'archerswap-uikit'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\n// import { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface IfoCardTimeProps {\r\n  status: IfoStatus\r\n  secondsUntilStart: number\r\n  secondsUntilEnd: number\r\n  startTime: number\r\n  endTime: number\r\n  // blocksRemaining: number\r\n  // blocksRemainingToStart: number\r\n  // block: number\r\n  // blockToEnd: number\r\n}\r\n\r\nconst Details = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-bottom: 24px;\r\n`\r\n\r\n// const Countdown = styled.div`\r\n//   color: ${({ theme }) => theme.colors.secondary};\r\n//   font-size: 20px;\r\n//   font-weight: 600;\r\n//   text-align: center;\r\n// `\r\n\r\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({\r\n  status,\r\n  secondsUntilStart,\r\n  secondsUntilEnd,\r\n  startTime,\r\n  endTime,\r\n  // block,\r\n  // blockToEnd,\r\n  // blocksRemaining,\r\n  // blocksRemainingToStart,\r\n}) => {\r\n  // const { t } = useTranslation()\r\n  // const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\r\n  // const blockCount = status === 'coming_soon' ? blocksRemainingToStart : blocksRemaining\r\n  const timeCount = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\r\n  const timeUntil = getTimePeriods(timeCount)\r\n  // const suffix = status === 'coming_soon' ? 'start' : 'finish'\r\n\r\n  if (status === 'idle') {\r\n    return (\r\n      <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"24px\" height=\"24px\">\r\n        Loading...\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Details>\r\n      {/* <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown> */}\r\n      <Link\r\n        href={`https://www.epochconverter.com/countdown?q=${status === 'coming_soon' ? startTime : endTime}`}\r\n        target=\"blank\"\r\n        rel=\"noopener noreferrer\"\r\n        ml=\"8px\"\r\n      >\r\n        {`${timeUntil.days} ${timeUntil.days === 1 ? 'day' : 'days'}\r\n          ${timeUntil.hours} ${timeUntil.hours === 1 ? 'hr' : 'hrs'}\r\n          ${timeUntil.minutes} ${timeUntil.minutes === 1 ? 'min' : 'mins'} `}\r\n        {status === 'coming_soon' ? 'until start' : 'until finish'}\r\n      </Link>\r\n    </Details>\r\n  )\r\n}\r\n\r\nexport default IfoCardTime\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Card, CardBody, CardRibbon, Text, LinkExternal, Link, Box } from 'archerswap-uikit'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport useGetPublicIfoData from '../../hooks/useGetPublicIfoData'\r\nimport IfoCardHeader from './IfoCardHeader'\r\nimport IfoCardDetails from './IfoCardDetails'\r\nimport IfoCardActions from './IfoCardActions'\r\nimport IfoCardProgress from './IfoCardProgress'\r\nimport IfoCardTime from './IfoCardTime'\r\n\r\nexport interface IfoCardProps {\r\n  ifo: Ifo\r\n}\r\n\r\nconst StyledCardRibbon = styled(CardRibbon)`\r\n  font-size: 12px;\r\n`\r\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\r\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.png')`};\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  padding-top: 105px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 437px;\r\n  width: 100%;\r\n  border-radius: 20px;\r\n  box-shadow: 0px 4px 10px 5px rgba(105, 105, 105, 0.15);\r\n`\r\nconst getRibbonComponent = (status: IfoStatus, t: (fallback: string) => any, isPrivate: boolean) => {\r\n  if (status === 'live') {\r\n    return <CardRibbon variantColor=\"primary\" text={t('LIVE NOW!')} />\r\n  }\r\n\r\n  return <StyledCardRibbon variantColor=\"textDisabled\" text={t(isPrivate ? 'Private Sale' : 'Public Sale')} />\r\n}\r\n\r\nconst Item = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  display: flex;\r\n`\r\n\r\nconst Display = styled(Text)`\r\n  flex: 1;\r\n`\r\n\r\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\r\n  const {\r\n    id,\r\n    isPrivate,\r\n    name,\r\n    subTitle,\r\n    projectSiteUrl,\r\n    launchDate,\r\n    launchTime,\r\n    saleAmount,\r\n    raiseAmount,\r\n    maxDepositAmount,\r\n    currency,\r\n  } = ifo\r\n  const publicIfoData = useGetPublicIfoData(ifo)\r\n  const { raisingAmount, totalAmount } = publicIfoData\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const Ribbon = getRibbonComponent(publicIfoData.status, t, isPrivate)\r\n\r\n  return (\r\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={publicIfoData.status === 'live'}>\r\n      <CardBody style={{ padding: '30px' }}>\r\n        <IfoCardHeader ifoId={id} name={t(name)} subTitle={subTitle} />\r\n        {publicIfoData.status !== 'finished' && ifo.isActive && (\r\n          <>\r\n            <IfoCardProgress progress={publicIfoData.progress} />\r\n            <IfoCardTime\r\n              status={publicIfoData.status}\r\n              secondsUntilStart={publicIfoData.secondsUntilStart}\r\n              secondsUntilEnd={publicIfoData.secondsUntilEnd}\r\n              startTime={publicIfoData.startTimestamp}\r\n              endTime={publicIfoData.endTimestamp}\r\n              // blocksRemaining={publicIfoData.blocksRemaining}\r\n              // blocksRemainingToStart={publicIfoData.blocksRemainingToStart}\r\n              // block={publicIfoData.startTimestamp}\r\n              // blockToEnd={publicIfoData.endTimestamp}\r\n            />\r\n          </>\r\n        )}\r\n        {account ? <IfoCardActions ifo={ifo} publicIfoData={publicIfoData} /> : <UnlockButton width=\"100%\" />}\r\n        <div style={{ marginTop: '20px' }}>\r\n          <Box mb=\"24px\">\r\n            <Item>\r\n              <Display fontSize=\"14px\" bold>\r\n                {t('Launch Time')}\r\n              </Display>\r\n              <Text fontSize=\"14px\" bold>\r\n                {launchDate},\r\n                <Link\r\n                  href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\r\n                  target=\"blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  ml=\"4px\"\r\n                  style={{ display: 'inline' }}\r\n                  color=\"text\"\r\n                  fontSize=\"14px\"\r\n                >\r\n                  {launchTime}\r\n                </Link>\r\n              </Text>\r\n            </Item>\r\n            <Item>\r\n              <Display fontSize=\"14px\" bold>\r\n                {t('For Sale')}\r\n              </Display>\r\n              <Text fontSize=\"14px\" bold>\r\n                {saleAmount}\r\n              </Text>\r\n            </Item>\r\n            <Item>\r\n              <Display fontSize=\"14px\" bold>\r\n                {t('To raise (USD)')}\r\n              </Display>\r\n              <Text fontSize=\"14px\" bold>\r\n                {raiseAmount}\r\n              </Text>\r\n            </Item>\r\n            <Item>\r\n              <Display fontSize=\"14px\" bold>\r\n                {t('Total raised (% of target)')}\r\n              </Display>\r\n              <Text fontSize=\"14px\" bold>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\r\n            </Item>\r\n            {maxDepositAmount > 0 && (\r\n              <Item>\r\n                <Display fontSize=\"14px\" bold>\r\n                  {t('Max deposit amount')}\r\n                </Display>\r\n                <Text fontSize=\"14px\" bold>{`${maxDepositAmount.toFixed(2)} ${currency}`}</Text>\r\n              </Item>\r\n            )}\r\n          </Box>\r\n          <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\r\n            {t('View Project Site')}\r\n          </LinkExternal>\r\n        </div>\r\n      </CardBody>\r\n      <IfoCardDetails ifo={ifo} publicIfoData={publicIfoData} />\r\n    </StyledIfoCard>\r\n  )\r\n}\r\n\r\nexport default IfoCard\r\n","import styled from 'styled-components'\r\nimport { Heading } from 'archerswap-uikit'\r\n\r\nconst Title = styled(Heading).attrs({ size: 'lg' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 16px;\r\n`\r\n\r\nexport default Title\r\n","import styled from 'styled-components'\r\n\r\ninterface IfoCardWrapperProps {\r\n  isSingle?: boolean\r\n}\r\n\r\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\r\n  align-items: start;\r\n  border-top: 2px solid #e9e9e9;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\r\n  }\r\n`\r\n\r\nIfoCardWrapper.defaultProps = {\r\n  isSingle: false,\r\n}\r\n\r\nexport default IfoCardWrapper\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, BaseLayout, Button, Card } from 'archerswap-uikit'\r\nimport { ifosConfig } from 'config/constants'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport IfoCard from './components/IfoCard'\r\nimport Title from './components/Title'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst LaunchIfoCallout = styled(BaseLayout)`\r\n  border-top: 2px solid #e9e9e9;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  margin: 0 auto;\r\n  padding: 32px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-top: 17px;\r\n  margin-bottom: 30px;\r\n\r\n  & > li {\r\n    line-height: 1.4;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 105.5%;\r\n`\r\n\r\nconst GuideCard = styled.div`\r\n  background: transparent;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 491px;\r\n  max-height: 570px;\r\n  border-radius: 20px;\r\n  padding: 30px 91px 49px 50px;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 12px;\r\n  }\r\n`\r\nconst CardContainer = styled.div`\r\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\r\n  border-radius: 16px;\r\n`\r\n\r\nconst StyledTitle = styled(Title)`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  font-size: 17px;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst Description = styled.span`\r\n  margin-left: 5px;\r\n  display: inline-block;\r\n  font-size: 17px;\r\n`\r\n\r\nconst Airplane = styled(Card)`\r\n  max-width: 488px;\r\n  height: 211px;\r\n  background-image: url('/images/ifo-airplane.png');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  padding-top: 30px;\r\n  margin-bottom: 20px;\r\n\r\n  @media (max-width: 768px) {\r\n    height: 200px;\r\n    padding-top: 50px;\r\n  }\r\n`\r\n\r\n// const Frame = styled(Card)`\r\n//   width: 100px;\r\n//   height: 71px;\r\n//   background-image: url('/images/ifo-frame.svg');\r\n//   background-repeat: no-repeat;\r\n//   background-position: center;\r\n//   position: absolute;\r\n//   top: 96px;\r\n//   right: 42px;\r\n\r\n//   @media (max-width: 768px) {\r\n//     top: 110px;\r\n//     transform: scale(0.7);\r\n//   }\r\n// `\r\n\r\n// const ZIndexImage = styled(Image)`\r\n//   z-index: 1000;\r\n\r\n//   @media (max-width: 768px) {\r\n//     width: 300px;\r\n//   }\r\n// `\r\n\r\nconst LaunchCard = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 491px;\r\n  max-height: 335px;\r\n  border-radius: 20px;\r\n  padding: 30px 91px 49px 50px;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 12px;\r\n  }\r\n`\r\n\r\n/**\r\n * Note: currently there should be only 1 active IFO at a time\r\n */\r\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\r\n\r\nconst Ifo = () => {\r\n  const { t } = useTranslation()\r\n\r\n  if (!activeIfo) {\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <IfoCards isSingle>\r\n        <IfoCard ifo={activeIfo} />\r\n      </IfoCards>\r\n      <LaunchIfoCallout>\r\n        <GuideCard>\r\n          <StyledTitle as=\"h2\">{t('How to take part')}</StyledTitle>\r\n          <StyledHeading as=\"h1\">{t('Before Sale')}:</StyledHeading>\r\n          <List>\r\n            <Description>{t('Purchase BOW Tokens')}</Description>\r\n          </List>\r\n          <StyledHeading as=\"h1\">{t('For private sale')}:</StyledHeading>\r\n          <List>\r\n            <Description>{t('Optional: You have to be whitelisted')}</Description>\r\n          </List>\r\n          <StyledHeading>{t('During Sale')}:</StyledHeading>\r\n          <List>\r\n            <Description>{t('While The Sale Is Live, Commit Your BOW')}</Description>\r\n          </List>\r\n          <StyledHeading>{t('After Sale')}:</StyledHeading>\r\n          <List>\r\n            <Description style={{ marginBottom: '20px' }}>\r\n              {t('Claim the tokens you bought, along with any unspent funds.')}\r\n            </Description>\r\n          </List>\r\n          <Text as=\"div\">\r\n            <Button\r\n              as=\"a\"\r\n              variant=\"secondary\"\r\n              href=\"https://docs.archerswap.finance/products-and-features-guide/token-sales\"\r\n              external\r\n            >\r\n              {t('Read More')}\r\n            </Button>\r\n          </Text>\r\n        </GuideCard>\r\n        <CardContainer>\r\n          <Airplane />\r\n          <LaunchCard>\r\n            <StyledTitle as=\"h2\">{t('Want to launch your own Token Sale?')}</StyledTitle>\r\n            <Text mb={4} fontSize=\"17px\">\r\n              {t(\r\n                'Launch your project with ArcherSwap, Core Chain’s the best AMM+NFT DEX to bring your token directly to the most active and rapidly growing community on Core Chain.',\r\n              )}\r\n            </Text>\r\n            <Button\r\n              as=\"a\"\r\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLScKFg9jfA1UKWmcv2H5SQyW_jjrgD0_2O106C2n7kmdOZyH5w/viewform?usp=pp_url\"\r\n              external\r\n            >\r\n              {t('Apply to launch')}\r\n            </Button>\r\n          </LaunchCard>\r\n        </CardContainer>\r\n      </LaunchIfoCallout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ifo\r\n","import React from 'react'\r\nimport { ifosConfig } from 'config/constants'\r\nimport { Ifo } from 'config/constants/types'\r\nimport IfoCard from './components/IfoCard'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\r\n\r\nconst PastIfo = () => {\r\n  return (\r\n    <IfoCards>\r\n      {inactiveIfo.map((ifo) => (\r\n        <IfoCard key={ifo.id} ifo={ifo} />\r\n      ))}\r\n    </IfoCards>\r\n  )\r\n}\r\n\r\nexport default PastIfo\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport Container from 'components/layout/Container'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport IfoTabButtons from './components/IfoTabButtons'\r\n// import Hero from './components/Hero'\r\nimport Banner from '../../components/Banner'\r\nimport CurrentIfo from './CurrentIfo'\r\nimport PastIfo from './PastIfo'\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  max-width: 1034px;\r\n`\r\n\r\nconst Ifos = () => {\r\n  const { t } = useTranslation()\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <Background>\r\n      <Banner\r\n        src=\"/images/assets/banners/ifo_banner.png\"\r\n        mobileSrc=\"/images/assets/banners/mobile_ifo_banner.png\"\r\n        alt=\"IDO_banner\"\r\n        title=\"BowPad\"\r\n        text={t('Buy new tokens with a brand new token sale model.')}\r\n      />\r\n      <StyledContainer>\r\n        <IfoTabButtons />\r\n        <Route exact path={`${path}`}>\r\n          <CurrentIfo />\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          <PastIfo />\r\n        </Route>\r\n      </StyledContainer>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default Ifos\r\n"],"sourceRoot":""}