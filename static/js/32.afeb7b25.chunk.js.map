{"version":3,"sources":["state/multicall/hooks.ts","utils/wrappedCurrency.ts","data/Reserves.ts","hooks/useTokenBalance.ts","hooks/useFarmsWithBalance.ts","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/HeroCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TotalValueLockedCard.tsx","hooks/useFarmTvl.ts","components/BannerArcher/index.tsx","views/Home/Home.tsx"],"names":["isMethodArg","x","indexOf","isValidMethodArgs","undefined","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","data","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","options","chainId","useActiveWeb3React","callResults","useSelector","state","multicall","dispatch","useDispatch","serializedCallKeys","useMemo","JSON","stringify","filter","c","Boolean","map","toCallKey","sort","useEffect","callKeys","parse","length","key","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","error","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","console","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","address","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","addresses","useSingleCallResult","wrappedCurrency","currency","ETHER","WETH","Token","wrappedCurrencyAmount","currencyAmount","token","TokenAmount","raw","unwrappedToken","equals","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencies","tokens","currencyA","currencyB","pairAddresses","tokenA","tokenB","Pair","getAddress","i","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","toString","usePair","useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","a","eth","getBalance","res","fetchBalance","useWcoreBalance","getBep20Contract","wcore","methods","balanceOf","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useNFTBalance","ownedTokensIds","setOwnedTokensIds","isLoading","setIsLoading","getErc721Contract","tokensOfOwner","tokenIds","tokensData","tokenId","tokenURI","uri","fetch","json","metadata","Promise","all","then","values","useTokenBalanceFromChain","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","farmPids","farmsConfig","farm","pid","allPids","getMasterChefAddress","name","params","masterChefABI","rawResults","index","fetchBalances","CardValue","value","fontSize","lineHeight","prefix","bold","useCountUp","start","end","duration","separator","countUp","update","isDark","useTheme","updateValue","useRef","BowText","styled","div","current","style","color","className","CardBusdValue","props","Block","BlockValue","CakeHarvestBalance","t","useTranslation","earningsSum","reduce","accum","pending","toNumber","earningsBusd","multipliedBy","usePriceBowUsd","CakeWalletBalance","bowBalance","getBowAddress","busdBalance","getBalanceNumber","StyledFarmStakingCard","Card","StyledUnlockButton","UnlockButton","LeftBlock","RightBlock","StyledButton","Button","Actions","FarmedStakingCard","pendingTx","setPendingTx","balancesWithValue","balanceType","onReward","useAllHarvest","farmWithBalance","harvestAllFarms","justifyContent","id","disabled","onClick","width","count","StyledHeroCard","theme","mediaQueries","sm","xs","md","lg","BowTitle","Heading","BackgroundArcherSwap","img","ContentTxt","HeroCard","title","content","as","mb","textAlign","src","StyledBowStats","CakeStats","burnedBalance","circulatingBalance","bowPriceUsd","times","StyledTotalValueLockedCard","TotalValueLockedCard","prices","useGetApiPrices","oneDayVolume","useOneDayVolume","totalLockedBow","useBowInfo","commonPairs","allPairCombinations","farms","quoteToken","allPairs","pairs","Object","memo","curr","liquidityToken","wcorePrice","pair","e","Number","token0Price","toFixed","includes","useFarmTvl","tvl","pairTVL","sum","xbowTVL","bow","toLocaleString","maximumFractionDigits","fontWeight","oneDayVolumeUSD","height","StyledBanner","StyledMobileBanner","WelcomeContainer","xl","nav","ImageContainer","ButtonContainer","BannerContainer","StyledContent","BannerArcher","alt","head","head2","text","mobileSrc","left","href","variant","fontFamily","scale","mr","Hero","Cards","BaseLayout","Background","CopyRight","Home","white","Page","minHeight","isHome","FarmStakingCard"],"mappings":"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","file":"static/js/32.afeb7b25.chunk.js","sourcesContent":["import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useBlockNumber } from '../application/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      // @ts-ignore\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n        const data = result?.data && result?.data !== '0x' ? result.data : null\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId],\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.error('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            }\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\r\n  }, [fragment, contract, results, latestBlockNumber])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\r\n  }, [fragment, results, contractInterface, latestBlockNumber])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const latestBlockNumber = useBlockNumber()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\r\n  }, [result, contract, fragment, latestBlockNumber])\r\n}\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from 'archerswap-sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  // eslint-disable-next-line no-nested-ternary\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import { TokenAmount, Pair, Currency } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { useActiveWeb3React } from '../hooks'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import { useEffect, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getBowContract, getErc721Contract, getFactoryContract } from 'utils/contractHelpers'\r\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport const useETHBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useWcoreBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.allowance(account, targetAddress).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && targetAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\r\n\r\n  return allowance\r\n}\r\n\r\nexport const useApprove = () => {\r\n  const [approvePending, setApprovePending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n\r\n  const handleApprove = useCallback(\r\n    async (targetAddress: string, contractAddress: string) => {\r\n      try {\r\n        setApprovePending(true)\r\n        const contract = getBep20Contract(contractAddress, web3)\r\n        const tx = await contract.methods\r\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\r\n          .send({ from: account })\r\n        setApprovePending(false)\r\n        return tx\r\n      } catch (e) {\r\n        setApprovePending(false)\r\n        return false\r\n      }\r\n    },\r\n    [web3, account],\r\n  )\r\n\r\n  return { onApprove: handleApprove, approvePending }\r\n}\r\n\r\nexport const useTokenSymbol = (tokenAddress: string) => {\r\n  const [symbol, setSymbol] = useState('')\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.symbol().call()\r\n      setSymbol(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return symbol\r\n}\r\n\r\nexport const useTokenDecimal = (tokenAddress: string) => {\r\n  const [decimal, setDecimal] = useState(0)\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.decimals().call()\r\n      setDecimal(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return decimal\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useNFTBalance = (tokenAddress: string) => {\r\n  const [ownedTokensIds, setOwnedTokensIds] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      setIsLoading(true)\r\n      const contract = getErc721Contract(tokenAddress, web3)\r\n      const tokenIds = await contract.methods.tokensOfOwner(account).call()\r\n      const tokensData = tokenIds.map(async (tokenId) => {\r\n        const uri = await contract.methods.tokenURI(tokenId).call()\r\n        const data = await fetch(uri)\r\n        const metadata = await data.json()\r\n        return { tokenId, ...metadata }\r\n      })\r\n      Promise.all(tokensData).then((values) => setOwnedTokensIds(values))\r\n      setIsLoading(false)\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return { isLoading, ownedTokensIds }\r\n}\r\n\r\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = getWeb3NoAccountFromChain(chainId)\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && chainId) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const bowContract = getBowContract()\r\n      const supply = await bowContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useCirculatingBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const bowContract = getBowContract()\r\n      const [tRes, res0, res1, res2] = await Promise.all([\r\n        bowContract.methods.totalSupply().call(),\r\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\r\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\r\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\r\n      ])\r\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\r\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const usePairsLength = () => {\r\n  const [pairsLength, setPairsLength] = useState(0)\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchPairsLength = async () => {\r\n      const contract = getFactoryContract(web3)\r\n      const res = await contract.methods.allPairsLength().call()\r\n      setPairsLength(res)\r\n    }\r\n\r\n    fetchPairsLength()\r\n  }, [web3, slowRefresh])\r\n\r\n  return pairsLength\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport interface FarmWithBalance {\r\n  pid: number\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const farmPids = farmsConfig.map((farm) => farm.pid)\r\n      const allPids = [...farmPids /* 19, 1, 2, 15 */]\r\n      const calls = allPids.map((pid) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingCake',\r\n        params: [pid, account],\r\n      }))\r\n\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n      const results = allPids.map((pid, index) => ({ pid, balance: new BigNumber(rawResults[index]) }))\r\n\r\n      setFarmsWithBalances(results)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '22px',\r\n  lineHeight = '1',\r\n  prefix = '',\r\n  bold = true,\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n  const { isDark } = useTheme()\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  const BowText = styled.div`\r\n    .BowStyle {\r\n      font-family: 'DoppioOne';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-size: 22px;\r\n      line-height: 28px;\r\n      padding-top: 2px;\r\n    }\r\n  `\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <BowText>\r\n      <Text\r\n        bold={bold}\r\n        fontSize={fontSize}\r\n        style={{ lineHeight }}\r\n        color={isDark ? '#A9A29D' : '#BABABA'}\r\n        className=\"BowStyle\"\r\n      >\r\n        {prefix}\r\n        {countUp}\r\n      </Text>\r\n    </BowText>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport CardValue, { CardValueProps } from './CardValue'\r\n\r\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\r\n  return (\r\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\r\n  )\r\n}\r\n\r\nexport default CardBusdValue\r\n","import React from 'react'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport { usePriceBowUsd } from 'state/hooks'\r\nimport useTheme from 'hooks/useTheme'\r\nimport styled from 'styled-components'\r\nimport CardValue from './CardValue'\r\nimport CardBusdValue from './CardBusdValue'\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 24px;\r\n  font-family: 'DoppioOne';\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 22px;\r\n  line-height: 28px;\r\n}\r\n`\r\nconst BlockValue = styled.div`\r\n  .block-text {\r\n    font-family: 'DoppioOne';\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    padding-top: 2px;\r\n  }\r\n`\r\n\r\nconst CakeHarvestBalance = () => {\r\n  const { t } = useTranslation()\r\n  const { isDark } = useTheme()\r\n  const { account } = useWeb3React()\r\n  const allPending = useFarmsWithBalance()\r\n  const earningsSum = allPending.reduce((accum, pending) => {\r\n    return accum + new BigNumber(pending.balance).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(usePriceBowUsd()).toNumber()\r\n\r\n  if (!account) {\r\n    return (\r\n      <BlockValue>\r\n        <Text fontSize=\"22px\" color={isDark ? '#A9A29D' : '#BABABA'} className=\"block-text\">\r\n          {t('0.000')}\r\n        </Text>\r\n      </BlockValue>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Block>\r\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\r\n      <CardBusdValue value={earningsBusd} />\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default CakeHarvestBalance\r\n","import React from 'react'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBowAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { usePriceBowUsd } from 'state/hooks'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport CardValue from './CardValue'\r\nimport CardBusdValue from './CardBusdValue'\r\n\r\nconst CakeWalletBalance = () => {\r\n  const { t } = useTranslation()\r\n  const { isDark } = useTheme()\r\n  const bowBalance = useTokenBalance(getBowAddress())\r\n  const busdBalance = new BigNumber(getBalanceNumber(bowBalance)).multipliedBy(usePriceBowUsd()).toNumber()\r\n  const { account } = useWeb3React()\r\n\r\n  const BlockValue = styled.div`\r\n    .block-text {\r\n      font-family: 'DoppioOne';\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      line-height: 28px;\r\n      padding-top: 2px;\r\n    }\r\n  `\r\n\r\n  if (!account) {\r\n    return (\r\n      <BlockValue>\r\n        <Text fontSize=\"22px\" color={isDark ? '#A9A29D' : '#BABABA'} className=\"block-text\">\r\n          {t('0.000')}\r\n        </Text>\r\n      </BlockValue>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CardValue value={getBalanceNumber(bowBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\r\n      <CardBusdValue value={busdBalance} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CakeWalletBalance\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Button, Flex, Text } from 'archerswap-uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useAllHarvest } from 'hooks/useHarvest'\r\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\r\nimport useTheme from 'hooks/useTheme'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport CakeHarvestBalance from './CakeHarvestBalance'\r\nimport CakeWalletBalance from './CakeWalletBalance'\r\n\r\nconst StyledFarmStakingCard = styled(Card)<any>`\r\n  background: ${({ isDark }) => (isDark ? 'linear-gradient(256.11deg, #1F1F1F 1.11%, #000000 95.93%)' : '#fff')};\r\n  box-shadow: ${({ isDark }) =>\r\n    isDark ? '0px 3.5px 10px rgba(10, 14, 22, 0.1)' : '0px 3.5px 10px rgba(10, 14, 22, 0.1)'};\r\n  border-radius: 0px;\r\n  border: ${({ isDark }) => (isDark ? '1px solid #29292D' : '0px solid')};\r\n`\r\nconst StyledUnlockButton = styled(UnlockButton)`\r\n  color: #000000;\r\n  width: 100%;\r\n  margin-top: 20px;\r\n`\r\n\r\nconst LeftBlock = styled.div`\r\n  font-family: 'DMSans';\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 24px;\r\n`\r\n\r\nconst RightBlock = styled.div`\r\n  text-align: right;\r\n  font-family: 'DMSans';\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  line-height: 24px;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  border-radius: 3px;\r\n`\r\n\r\nconst Actions = styled.div``\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const farmsWithBalance = useFarmsWithBalance()\r\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\r\n  const { isDark } = useTheme()\r\n\r\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      await onReward()\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }, [onReward])\r\n\r\n  return (\r\n    <StyledFarmStakingCard isDark={isDark}>\r\n      <CardBody>\r\n        <Flex justifyContent=\"space-between\">\r\n          <LeftBlock>\r\n            <Text fontSize=\"16px\" color=\"title\">\r\n              {t('BOW to Harvest')}\r\n            </Text>\r\n            <CakeHarvestBalance />\r\n          </LeftBlock>\r\n\r\n          <RightBlock>\r\n            <Text fontSize=\"16px\" color=\"title\">\r\n              {t('BOW in Wallet')}\r\n            </Text>\r\n            <CakeWalletBalance />\r\n          </RightBlock>\r\n        </Flex>\r\n        <Actions>\r\n          {account ? (\r\n            <StyledButton\r\n              id=\"harvest-all\"\r\n              disabled={balancesWithValue.length <= 0 || pendingTx}\r\n              onClick={harvestAllFarms}\r\n              width=\"100%\"\r\n            >\r\n              {pendingTx\r\n                ? t('Collecting Bow')\r\n                : t(`Harvest all (%count%)`, {\r\n                    count: balancesWithValue.length,\r\n                  })}\r\n            </StyledButton>\r\n          ) : (\r\n            <StyledUnlockButton width=\"100%\" />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default FarmedStakingCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Text, Heading } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst StyledHeroCard = styled(Card)<any>`\r\n  background: ${({ isDark }) => (isDark ? 'linear-gradient(256.11deg, #1F1F1F 1.11%, #000000 95.93%)' : '#fff')};\r\n  box-shadow: ${({ isDark }) =>\r\n    isDark ? '0px 3.5px 10px rgba(10, 14, 22, 0.1)' : '0px 3.5px 10px rgba(10, 14, 22, 0.1)'};\r\n  border-radius: 0px;\r\n  border: ${({ isDark }) => (isDark ? '1px solid #29292D' : '0px solid')};\r\n  width: 100%;\r\n  .card {\r\n    & > div {\r\n      width: 65%;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      & > div {\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.xs} {\r\n      & > div {\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.md} {\r\n      & > div {\r\n        width: 65%;\r\n      }\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      & > div {\r\n        width: 65%;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst BowTitle = styled(Heading)`\r\n  font-size: 24px;\r\n  font-family: 'DMSans';\r\n  font-style: normal;\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n`\r\nconst BackgroundArcherSwap = styled.img`\r\n  position: absolute;\r\n  right: 0px;\r\n  top: 0px;\r\n  height: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    display: none;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: block;\r\n  }\r\n`\r\nconst ContentTxt = styled.div`\r\n  .content {\r\n    font-family: 'DMSans';\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n  }\r\n`\r\n\r\nconst HeroCard = ({ title, content }) => {\r\n  const { t } = useTranslation()\r\n  const { isDark } = useTheme()\r\n\r\n  return (\r\n    <StyledHeroCard isDark={isDark}>\r\n      <CardBody className=\"card\">\r\n        <BowTitle as=\"h1\" mb=\"12px\" color=\"title\" textAlign=\"left\">\r\n          {t(`${title}`)}\r\n        </BowTitle>\r\n        <ContentTxt>\r\n          <Text color={isDark ? '#A9A29D' : '#BABABA'} fontSize=\"20px\" className=\"content\">\r\n            {t(`${content}`)}\r\n          </Text>\r\n        </ContentTxt>\r\n      </CardBody>\r\n      {isDark ? (\r\n        <BackgroundArcherSwap src=\"images/bg_archerswap.png\" className=\"archer\" />\r\n      ) : (\r\n        <BackgroundArcherSwap src=\"images/bg_archerswap_light.png\" className=\"archer\" />\r\n      )}\r\n    </StyledHeroCard>\r\n  )\r\n}\r\n\r\nexport default HeroCard\r\n","import React from 'react'\r\nimport { Card, CardBody, Text, Flex } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useBurnedBalance, useCirculatingBalance } from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBowAddress } from 'utils/addressHelpers'\r\nimport { usePriceBowUsd } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport CardValue from './CardValue'\r\n\r\nconst StyledBowStats = styled(Card)<any>`\r\n  background: ${({ isDark }) => (isDark ? 'linear-gradient(256.11deg, #1F1F1F 1.11%, #000000 95.93%)' : '#fff')};\r\n  box-shadow: ${({ isDark }) =>\r\n    isDark ? '0px 3.5px 10px rgba(10, 14, 22, 0.1)' : '0px 3.5px 10px rgba(10, 14, 22, 0.1)'};\r\n  border-radius: 0px;\r\n  border: ${({ isDark }) => (isDark ? '1px solid #29292D' : '0px solid')};\r\n`\r\n\r\nconst LeftBlock = styled.div`\r\n  .heading {\r\n    font-family: 'DMSans';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 24px;\r\n  }\r\n  margin-bottom: 16px;\r\n`\r\nconst RightBlock = styled.div`\r\n  margin-bottom: 16px;\r\n  text-align: right;\r\n  .content {\r\n    font-family: 'DMSans';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 24px;\r\n  }\r\n`\r\n\r\nconst CakeStats = () => {\r\n  const { t } = useTranslation()\r\n  const burnedBalance = useBurnedBalance(getBowAddress())\r\n  const circulatingBalance = useCirculatingBalance()\r\n  const { isDark } = useTheme()\r\n  const bowPriceUsd = usePriceBowUsd()\r\n\r\n  return (\r\n    <StyledBowStats isDark={isDark}>\r\n      <CardBody>\r\n        <Flex justifyContent=\"space-between\">\r\n          <LeftBlock>\r\n            <Text fontSize=\"16px\" color=\"title\" className=\"heading\">\r\n              {t('BOW Price')}\r\n            </Text>\r\n            <CardValue\r\n              color={isDark ? '#A9A29D' : '#BABABA'}\r\n              fontSize=\"22px\"\r\n              prefix=\"$\"\r\n              decimals={3}\r\n              value={bowPriceUsd.toNumber()}\r\n            />\r\n          </LeftBlock>\r\n          <RightBlock>\r\n            <Text fontSize=\"16px\" color=\"title\">\r\n              {t('BOW Market Cap')}\r\n            </Text>\r\n            <CardValue\r\n              fontSize=\"22px\"\r\n              prefix=\"$\"\r\n              decimals={0}\r\n              color={isDark ? '#A9A29D' : '#BABABA'}\r\n              value={new BigNumber(circulatingBalance).div(1e18).times(bowPriceUsd).toNumber()}\r\n            />\r\n          </RightBlock>\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\">\r\n          <LeftBlock>\r\n            <Text fontSize=\"16px\" color=\"title\">\r\n              {t('BOW in Circulation')}\r\n            </Text>\r\n            <CardValue\r\n              color={isDark ? '#A9A29D' : '#BABABA'}\r\n              fontSize=\"22px\"\r\n              prefix=\"$\"\r\n              value={getBalanceNumber(circulatingBalance)}\r\n            />\r\n          </LeftBlock>\r\n\r\n          <RightBlock>\r\n            <Text fontSize=\"16px\" color=\"title\">\r\n              {t('BOW Burned')}\r\n            </Text>\r\n            <CardValue\r\n              color={isDark ? '#A9A29D' : '#BABABA'}\r\n              fontSize=\"22px\"\r\n              decimals={0}\r\n              value={getBalanceNumber(burnedBalance)}\r\n            />\r\n          </RightBlock>\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledBowStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n","import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Skeleton, Text, Flex } from 'archerswap-uikit'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\n// import { useGetStats, useTokensData } from 'hooks/api'\r\nimport { /* useFarms, */ useGetApiPrices, /* usePools, */ useOneDayVolume } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\n// import { useWeb3React } from '@web3-react/core'\r\nimport { usePairsLength } from 'hooks/useTokenBalance'\r\nimport useBowInfo from 'hooks/useBowInfo'\r\nimport useFarmTvl from 'hooks/useFarmTvl'\r\n\r\nconst StyledTotalValueLockedCard = styled(Card)<any>`\r\n  background: ${({ isDark }) => (isDark ? 'linear-gradient(256.11deg, #1F1F1F 1.11%, #000000 95.93%)' : '#fff')};\r\n  box-shadow: ${({ isDark }) =>\r\n    isDark ? '0px 3.5px 10px rgba(10, 14, 22, 0.1)' : '0px 3.5px 10px rgba(10, 14, 22, 0.1)'};\r\n  border-radius: 0px;\r\n  border: ${({ isDark }) => (isDark ? '1px solid #29292D' : '0px solid')};\r\n`\r\nconst Block = styled.div`\r\n  .BlockTradingHeader {\r\n    font-family: 'DoppioOne';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n  }\r\n  .BlockTradingContent {\r\n    font-family: 'DoppioOne';\r\n    font-style: normal;\r\n    font-weight: 400;\r\n  }\r\n`\r\n\r\nconst TotalValueLockedCard = () => {\r\n  const { t } = useTranslation()\r\n  // const data = useGetStats()\r\n  // const farms = useFarms()\r\n  const prices = useGetApiPrices()\r\n  // const { account } = useWeb3React()\r\n  // const pools = usePools(account)\r\n  const { isDark } = useTheme()\r\n  const oneDayVolume = useOneDayVolume()\r\n  const pairsLength = usePairsLength()\r\n  // const tokenslength = useTokensData()\r\n  const { totalLockedBow } = useBowInfo()\r\n  const commonPairs = useFarmTvl()\r\n\r\n  const tvl = useMemo(() => {\r\n    // // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    // const farmTVL = farms.reduce((accum, farm) => {\r\n    //   if (!farm.lpTotalInQuoteToken || !prices) {\r\n    //     return accum\r\n    //   }\r\n\r\n    //   const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\r\n    //   const liquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\r\n    //   return accum.plus(liquidity)\r\n    // }, new BigNumber(0))\r\n\r\n    // // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    // const poolTVL = pools.reduce((accum, pool) => {\r\n    //   if (!pool) {\r\n    //     return accum\r\n    //   }\r\n\r\n    //   const stakingTokenPriceUsd = prices[pool.stakingToken.symbol.toLowerCase()]\r\n    //   const liquidity = new BigNumber(pool.totalStaked)\r\n    //     .div(new BigNumber(10).pow(pool.stakingToken.decimals))\r\n    //     .times(stakingTokenPriceUsd)\r\n    //   return accum.plus(liquidity)\r\n    // }, new BigNumber(0))\r\n\r\n    const pairTVL = new BigNumber(\r\n      commonPairs.reduce((sum, [, curr]) => {\r\n        sum += curr\r\n        return sum\r\n      }, 0),\r\n    ).times(1.2)\r\n\r\n    const xbowTVL = totalLockedBow.times(prices.bow)\r\n\r\n    // const totalTVL = farmTVL.plus(poolTVL).plus(pairTVL).plus(xbowTVL)\r\n    const totalTVL = pairTVL.plus(xbowTVL)\r\n\r\n    return totalTVL.toNumber().toLocaleString('en-US', { maximumFractionDigits: 0 })\r\n  }, [prices, totalLockedBow, commonPairs])\r\n\r\n  return (\r\n    <StyledTotalValueLockedCard isDark={isDark}>\r\n      <CardBody>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Block>\r\n            <Text fontSize=\"16px\" color=\"title\" className=\"BlockTradingHeader\">\r\n              {t('24h Trading Volume')}\r\n              <br />\r\n            </Text>\r\n            {oneDayVolume ? (\r\n              <>\r\n                <Text\r\n                  fontSize=\"22px\"\r\n                  fontWeight={600}\r\n                  color={isDark ? '#A9A29D' : '#BABABA'}\r\n                  className=\"BlockTradingContent\"\r\n                >\r\n                  ${oneDayVolume.oneDayVolumeUSD.toLocaleString('en-US', { maximumFractionDigits: 3 })}\r\n                </Text>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={50} />\r\n              </>\r\n            )}\r\n          </Block>\r\n\r\n          <Block>\r\n            <Text fontSize=\"16px\" color=\"title\" textAlign=\"right\" className=\"BlockTradingHeader\">\r\n              {t('Coins')}\r\n            </Text>\r\n\r\n            <Text\r\n              fontSize=\"22px\"\r\n              fontWeight={600}\r\n              color={isDark ? '#A9A29D' : '#BABABA'}\r\n              textAlign=\"right\"\r\n              className=\"BlockTradingContent\"\r\n            >\r\n              {126}\r\n            </Text>\r\n          </Block>\r\n        </Flex>\r\n\r\n        <Flex justifyContent=\"space-between\">\r\n          <Block>\r\n            <Text fontSize=\"16px\" color=\"title\" className=\"BlockTradingHeader\">\r\n              {t('Total Valued Locked (TVL)')}\r\n              <br />\r\n            </Text>\r\n            {tvl ? (\r\n              <>\r\n                <Text\r\n                  fontSize=\"22px\"\r\n                  fontWeight={600}\r\n                  color={isDark ? '#A9A29D' : '#BABABA'}\r\n                  className=\"BlockTradingContent\"\r\n                >{`$${tvl}`}</Text>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Skeleton height={50} />\r\n              </>\r\n            )}\r\n          </Block>\r\n\r\n          <Block>\r\n            <Text fontSize=\"16px\" color=\"title\" textAlign=\"right\" className=\"BlockTradingHeader\">\r\n              {t('Pairs')}\r\n            </Text>\r\n            <Text\r\n              fontSize=\"22px\"\r\n              fontWeight={600}\r\n              color={isDark ? '#A9A29D' : '#BABABA'}\r\n              textAlign=\"right\"\r\n              className=\"BlockTradingContent\"\r\n            >\r\n              {pairsLength}\r\n            </Text>\r\n          </Block>\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledTotalValueLockedCard>\r\n  )\r\n}\r\n\r\nexport default TotalValueLockedCard\r\n","import { Pair, Token } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport farms from 'config/constants/farms'\r\nimport { PairState, usePairs } from '../data/Reserves'\r\n\r\nexport default function useFarmTvl(): [Pair, number][] {\r\n  const allPairCombinations: [Token, Token][] = farms.map((farm) => [\r\n    new Token(\r\n      1116,\r\n      farm.quoteToken.address[1116],\r\n      farm.quoteToken.decimals,\r\n      farm.quoteToken.symbol,\r\n      farm.quoteToken.symbol,\r\n    ),\r\n    new Token(1116, farm.token.address[1116], farm.token.decimals, farm.token.symbol, farm.token.symbol),\r\n  ])\r\n\r\n  const allPairs = usePairs(allPairCombinations)\r\n\r\n  // only pass along valid pairs, non-duplicated pairs\r\n  const pairs = useMemo(\r\n    () =>\r\n      Object.values(\r\n        allPairs\r\n          // filter out invalid pairs\r\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n          // filter out duplicated pairs\r\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\r\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\r\n            return memo\r\n          }, {}),\r\n      ),\r\n    [allPairs],\r\n  )\r\n\r\n  const wcorePrice = useMemo(() => {\r\n    const pair = pairs.filter((e) => e.token0.symbol === 'WCORE' && e.token1.symbol === 'USDT')[0]\r\n    if (pair) {\r\n      return Number(pair.token0Price.toFixed())\r\n    }\r\n\r\n    return 0\r\n  }, [pairs])\r\n\r\n  const calcPairReserveUsd = (pair: Pair | undefined) => {\r\n    if (!pair) {\r\n      return 0\r\n    }\r\n    if (['USDT', 'USDC'].includes(pair.token0.symbol)) {\r\n      return Number(pair.reserve0.toFixed()) * 2\r\n    }\r\n    if (['USDT', 'USDC'].includes(pair.token1.symbol)) {\r\n      return Number(pair.reserve1.toFixed()) * 2\r\n    }\r\n    if (pair.token0.symbol === 'WCORE') {\r\n      return Number(pair.reserve0.toFixed()) * 2 * wcorePrice\r\n    }\r\n    if (pair.token1.symbol === 'WCORE') {\r\n      return Number(pair.reserve1.toFixed()) * 2 * wcorePrice\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n  return pairs.map((e) => [e, calcPairReserveUsd(e)])\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button } from 'archerswap-uikit'\r\n\r\nconst StyledBanner = styled.img`\r\n  height: 100%;\r\n  display: none;\r\n  position: relative;\r\n  min-width: 140px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\nconst StyledMobileBanner = styled.img`\r\n  position: relative;\r\n  min-width: 140px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst WelcomeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .welcome-text {\r\n    font-family: 'DMSans';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 99%;\r\n    color: #000000;\r\n    font-size: 32px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.xs} {\r\n      font-size: 32px;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.md} {\r\n      font-size: 60px;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      font-size: 74px;\r\n    }\r\n  }\r\n  .trade-text {\r\n    font-family: 'DMSans';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 120%;\r\n    color: #000000;\r\n    font-size: 17px;\r\n    padding-top: 5px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.xs} {\r\n      font-size: 22px;\r\n      padding-top: 9px;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.md} {\r\n      font-size: 28px;\r\n      padding-top: 11px;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      font-size: 32px;\r\n      padding-top: 21.81px;\r\n    }\r\n  }\r\n  .bow-text {\r\n    font-family: 'DMSans';\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: 28px;\r\n    color: #000000;\r\n    font-size: 11px;\r\n    padding-top: 5px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.xs} {\r\n      font-size: 16px;\r\n      padding-top: 6px;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.md} {\r\n      font-size: 18px;\r\n      padding-top: 9px;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      font-size: 20px;\r\n      padding-top: 10px;\r\n    }\r\n  }\r\n  .button-lg {\r\n    display: none;\r\n    ${({ theme }) => theme.mediaQueries.xs} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.xl} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.nav} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.md} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      display: block;\r\n    }\r\n  }\r\n  .button-sm {\r\n    display: none;\r\n    ${({ theme }) => theme.mediaQueries.xs} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.xl} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.nav} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.md} {\r\n      display: block;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      display: none;\r\n    }\r\n  }\r\n  .button-xs {\r\n    display: block;\r\n    ${({ theme }) => theme.mediaQueries.xs} {\r\n      display: block;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.xl} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.nav} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      display: block;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.md} {\r\n      display: none;\r\n    }\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: end;\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 9px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    padding-top: 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 20px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 30px;\r\n  }\r\n`\r\n\r\nconst BannerContainer = styled.div<{ isDark: boolean }>`\r\n  width: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: ${(props) => (props.theme.isDark ? 'linear-gradient(86.46deg,#6C3A00 0%,#F78E15 101.73%)' : null)};\r\n  //min-height: 400px;\r\n`\r\n\r\nconst StyledContent = styled.div<{ left: string }>`\r\n  width: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 50px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 50px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    margin-left: 40px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-left: 30px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin-left: 0px;\r\n  }\r\n`\r\n\r\nconst BannerArcher = ({ src, alt, head, head2, title, text, mobileSrc, isDark, left = '' }) => {\r\n  return (\r\n    <BannerContainer isDark={isDark}>\r\n      <StyledContent left={left}>\r\n        <WelcomeContainer>\r\n          <Text className=\"welcome-text\">\r\n            {head}\r\n            <br />\r\n            {head2}\r\n          </Text>\r\n          <Text className=\"trade-text\">{title}</Text>\r\n          <Text className=\"bow-text\">{text}</Text>\r\n          <ButtonContainer>\r\n            <a href=\"/swap\" className=\"button-lg\">\r\n              <Button\r\n                variant=\"tradeprimary\"\r\n                style={{ width: '200px', fontFamily: 'DMSans', fontWeight: '400' }}\r\n                scale=\"md\"\r\n                mr=\"8px\"\r\n              >\r\n                Trade\r\n              </Button>\r\n            </a>\r\n            <a href=\"/farms\" className=\"button-lg\">\r\n              <Button variant=\"tradesecondary\" style={{ width: '200px', fontFamily: 'DMSans' }} scale=\"md\" mr=\"8px\">\r\n                Farms\r\n              </Button>\r\n            </a>\r\n            <a href=\"/swap\" className=\"button-sm\">\r\n              <Button\r\n                variant=\"tradeprimary\"\r\n                style={{ width: '108px', fontFamily: 'DMSans', fontWeight: 400 }}\r\n                scale=\"sm\"\r\n                mr=\"8px\"\r\n              >\r\n                Trade\r\n              </Button>\r\n            </a>\r\n            <a href=\"/farms\" className=\"button-sm\">\r\n              <Button variant=\"tradesecondary\" style={{ width: '108px', fontFamily: 'DMSans' }} scale=\"sm\" mr=\"8px\">\r\n                Farms\r\n              </Button>\r\n            </a>\r\n            <a href=\"/swap\" className=\"button-xs\">\r\n              <Button variant=\"tradeprimary\" style={{ fontFamily: 'DMSans', fontWeight: 400 }} scale=\"sm\" mr=\"8px\">\r\n                Trade\r\n              </Button>\r\n            </a>\r\n            <a href=\"/farms\" className=\"button-xs\">\r\n              <Button variant=\"tradesecondary\" style={{ fontFamily: 'DMSans' }} scale=\"sm\" mr=\"8px\">\r\n                Farms\r\n              </Button>\r\n            </a>\r\n          </ButtonContainer>\r\n        </WelcomeContainer>\r\n      </StyledContent>\r\n      <ImageContainer>\r\n        <StyledMobileBanner src={mobileSrc} alt={alt} />\r\n        <StyledBanner src={src} alt={alt} />\r\n      </ImageContainer>\r\n    </BannerContainer>\r\n  )\r\n}\r\n\r\nexport default BannerArcher\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, BaseLayout } from 'archerswap-uikit'\r\nimport Page from 'components/layout/Page'\r\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\r\nimport HeroCard from 'views/Home/components/HeroCard'\r\nimport CakeStats from 'views/Home/components/CakeStats'\r\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\r\nimport BannerArcher from 'components/BannerArcher'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport 'react-multi-carousel/lib/styles.css'\r\nimport useTheme from '../../hooks/useTheme'\r\n\r\nconst Hero = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  margin-bottom: 32px;\r\n  gap: 15px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    & > div {\r\n      grid-column: span 4;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 4;\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n`\r\nconst CopyRight = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { isDark } = useTheme()\r\n\r\n  return (\r\n    <Background>\r\n      <BannerArcher\r\n        src=\"/images/assets/banners/1token.png\"\r\n        mobileSrc=\"/images/assets/banners/1token_mobile.png\"\r\n        alt=\"home_banner\"\r\n        head={t('Welcome to')}\r\n        head2={t('ArcherSwap')}\r\n        title={t('Trade Mining, Farm & Pool')}\r\n        text={t('Open for BOW')}\r\n        isDark={isDark}\r\n        white\r\n      />\r\n      <Page style={{ minHeight: 'auto' }} isHome>\r\n        <div>\r\n          <Cards>\r\n            <FarmStakingCard />\r\n            <CakeStats />\r\n            <TotalValueLockedCard />\r\n          </Cards>\r\n          <Hero>\r\n            <HeroCard\r\n              title=\"ArcherSwap\"\r\n              content=\"ArcherSwap is a crypto world for users to trade, earn, and game. It is the premier choice for projects on Core Chain with features including AMM, NFT, and GameFi.\"\r\n            />\r\n          </Hero>\r\n          <CopyRight>\r\n            <Text color=\"copyright\">{`${t('©2023 ArcherSwap. All Rights Reserved')}`}</Text>\r\n          </CopyRight>\r\n        </div>\r\n      </Page>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"sourceRoot":""}