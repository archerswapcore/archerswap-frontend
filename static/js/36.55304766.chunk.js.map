{"version":3,"sources":["components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/Tooltip/Tooltip.tsx","../node_modules/react-countdown/dist/index.es.js","components/ExpandableSectionButton/index.ts","views/Farms/components/types.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useKyudoNFT.ts","views/Farms/components/FarmTable/TotalApr.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/BoostModal.tsx","views/Farms/components/FarmTable/BoostPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/components/Select/Select.tsx","views/Farms/Farms.tsx"],"names":["Wrapper","styled","div","theme","colors","textSubtle","ExpandableSectionButton","onClick","expanded","t","useTranslation","aria-label","role","color","bold","defaultProps","getLiquidityUrlPathParts","quoteTokenAdresses","tokenAddresses","firstPart","chainId","secondPart","TooltipContent","tooltip","background","text","zIndices","modal","Container","Tooltip","content","children","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","_isNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","_toConsumableArray","arr","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","minLen","n","slice","name","test","_unsupportedIterableToArray","_nonIterableSpread","len","arr2","zeroPad","undefined","strValue","String","match","prefix","suffix","strNo","paddedNo","map","join","concat","timeDeltaFormatOptionsDefaults","daysInHours","zeroPadTime","formatTimeDelta","timeDelta","options","days","hours","minutes","seconds","_Object$assign","assign","_Object$assign$zeroPa","zeroPadDays","zeroPadTimeLength","Math","min","formattedHours","Countdown","_React$Component","_super","_this","state","count","startCountdown","interval","window","setInterval","stopCountdown","onComplete","setState","prevState","clearInterval","addTime","cloneElement","Component","propTypes","number","element","func","Countdown$1","mounted","initialTimestamp","calcOffsetStartTimestamp","offsetStartTimestamp","autoStart","offsetTime","legacyMode","legacyCountdownRef","createRef","tick","calcTimeDelta","callback","completed","overtime","onTick","setTimeDeltaState","start","isStarted","prevOffsetStartTimestamp","onStart","controlled","clearTimer","intervalDelay","pause","isPaused","onPause","stop","isStopped","onStop","isStatus","isCompleted","handleOnComplete","date","status","onMount","prevProps","_this$props","now","precision","startTimestamp","_options$now","_options$precision","_options$offsetTime","getTime","timeLeft","clampedPrecision","max","total","round","parseFloat","toFixed","abs","floor","milliseconds","Number","current","_this2","completedCallback","newStatus","api","_this$props2","getApi","formatted","_this$props3","_children","createElement","ref","_this$props4","className","renderer","renderProps","getRenderProps","countdown","_renderProps$formatte","oneOfType","instanceOf","string","bool","ViewMode","StyledLinkExternal","LinkExternal","primary","DetailsSection","coreScanAddress","removed","totalValueFormated","lpLabel","addLiquidityUrl","justifyContent","mb","href","external","Flex","MultiplierTag","Tag","IconImage","mediaQueries","sm","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","px","alignItems","src","split","toLocaleLowerCase","alt","flexDirection","variant","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","currentTarget","handleSelectMax","title","ModalInput","onSelectMax","onChange","symbol","inputTitle","ModalActions","width","disabled","a","style","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","pid","onStake","useStake","onUnstake","useUnstake","rawStakedBalance","getBalanceNumber","displayBalance","toLocaleString","useModal","onPresentDeposit","onPresentWithdraw","mr","HarvestAction","earnings","account","useWeb3React","onReward","useHarvest","rawEarningsBalance","Action","StyledUnlockButton","UnlockButton","StyledButton","Button","CardActions","farm","requestedApproval","setRequestedApproval","useFarmFromSymbol","lpSymbol","lpAddresses","useFarmUser","allowance","lpAddress","getAddress","lpName","isApproved","isGreaterThan","isGreaterThanOrEqualTo","web3","useWeb3","lpContract","getBep20Contract","onApprove","useApprove","handleApprove","console","error","fontSize","pr","textTransform","mt","calculateBowEarnedPerThousandDollars","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","bowPrice","finalAmount","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","Text","ApyCalculatorModal","apy","farmApr","feeApr","oneThousandDollarsWorthOfCake","toNumber","bowEarnedPerThousand1D","bowEarnedPerThousand7D","bowEarnedPerThousand30D","bowEarnedPerThousand365D","ApyButton","onPresentApyModal","event","stopPropagation","scale","ml","FCard","card","Divider","borderColor","ExpandingWrapper","StyledText","textDisabled","FarmCard","showExpandableSection","setShowExpandableSection","communityFarms","includes","token","liquidity","maximumFractionDigits","earnLabel","dual","farmAPY","liquidityUrlPathParts","quoteToken","address","BASE_ADD_LIQUIDITY_URL","display","height","CardActionsContainer","process","pids","farms","AprWrapper","xs","TotalApr","apr","Apr","md","Farm","label","Amount","span","earned","Earned","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","MultiplierWrapper","Multiplier","displayMultipler","toLowerCase","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","Title","success","Subtle","ActionContent","Staked","userData","earningsBigNumber","BigNumber","usePriceBowUsd","earningsBusd","multipliedBy","useCountUp","end","duration","separator","decimals","countUp","update","updateValue","useRef","useEffect","asset","lpPrice","times","lg","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","replace","core","info","StakedAction","InputWrapper","StyledInput","Input","Warning","StyledModalActions","primaryDark","spacing","BoostModal","slot","id","setId","pending","setPending","contract","useMasterchef","handleDepositNFT","tokenId","slotIndex","methods","depositNFT","getKyudoNftAddress","send","tx","useDepositNFTCallback","masterChefContract","onDeposit","getSlots","gt","NFTContainer","NFTBox","StyledImg","img","BoostPanel","tokenIds","boost","useAuth","login","logout","onPresentConnectModal","useWalletModal","useKyudoNft","setApprovalForAll","getMasterChefAddress","useApproveCallback","approvePending","handleWithdrawNFT","withdrawNFT","useWithdrawNFTCallback","withdawPenidng","onBoost1","onBoost2","onBoost3","onBoxClick","slotNum","Label","ContentContainer","CellLayout","MobileColumnSchema","translationId","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","setActionPanelToggled","toggleActionPanel","isXs","tableSchema","columnNames","column","balance","setBalance","setIsApproved","fastRefresh","useRefresh","calls","params","multicall","nftAbi","data","fetchGlobalData","useNFTData","nftTokenIds","setNftTokenIds","boosts","setBoosts","push","masterchefAbi","_nftTokenIds","tempSlots","tempIds","ids","j","_boosts","useNftStakingData","keys","columnIndex","indexOf","React","handleRenderRow","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","useRouteMatch","url","isExact","activeIndex","as","Link","to","borderRadius","fontWeight","marginLeft","SearchInput","setToggled","inputEl","placeholder","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","DropDownHeader","shadows","inset","input","DropDownListContainer","dropdown","DropDownContainer","isOpen","css","inputSecondary","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","option","offsetWidth","offsetHeight","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Background","NotifyContainer","TimeTextWrapper","countDownRenderer","marginRight","Farms","path","pathname","useLocation","farmsLP","useFarms","query","setQuery","setViewMode","sortOption","setSortOption","prices","useGetApiPrices","timestamp","setTimestamp","dispatch","useDispatch","slowRefresh","fetchFarmUserDataAsync","stackedOnly","setStackedOnly","dailyVolumeUSD","setDailyVolumeUSD","axios","get","response","tickers","ticker","base","volume","converted_volume","usd","fetch","activeFarms","filter","inactiveFarms","stackedOnlyFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","lpTotalInQuoteToken","lpTokenBalanceMC","quoteTokenPriceUsd","totalLiquidity","getFarmApy","poolWeight","tokenPerSecond","volumeObj","quoteTokenAmount","lowercaseQuery","isActive","farmsStaked","rowData","orderBy","sortFarms","image","Banner","mobileSrc","Page","START_TIMESTAMP","size","checked","sort","b","marginTop","exact","renderContent"],"mappings":"uLAUMA,EAAUC,UAAOC,IAAV,sJAOD,qBAAGC,MAAkBC,OAAOC,cAIlCC,EAAkE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC1EC,EAAMC,cAAND,EACR,OACE,eAACT,EAAD,CAASW,aAAW,kCAAkCC,KAAK,SAASL,QAAS,kBAAMA,KAAnF,UACE,cAAC,KAAD,CAAMM,MAAM,aAAaC,MAAI,EAA7B,SACcL,EAAXD,EAAa,OAAY,aAE3BA,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAKtCF,EAAwBS,aAAe,CACrCP,UAAU,GAGGF,O,kCC5BAU,IAPkB,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,mBAAoBC,EAAqB,EAArBA,eAEhDC,EAAYF,EAAqBA,EAAmBG,MAAW,OAC/DC,EAAaH,EAAiBA,EAAeE,MAAW,OAC9D,MAAM,GAAN,OAAUD,EAAV,YAAuBE,K,uECCnBC,EAAiBrB,UAAOC,IAAV,mnBACJ,qBAAGC,MAAkBoB,QAAQC,cAGlC,qBAAGrB,MAAkBoB,QAAQE,QAK3B,qBAAGtB,MAAkBuB,SAASC,SAcd,qBAAGxB,MAAkBoB,QAAQC,cAQpDI,EAAY3B,UAAOC,IAAV,mHAGHoB,EAAkCA,GAc/BO,IATwC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACjE,OACE,eAACH,EAAD,WACGG,EACD,cAACT,EAAD,UAAiBQ,S,kCClDvB,mBAGA,SAASE,EAAgBC,EAAUC,GACjC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCAIxB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAIlD,SAASO,EAAad,EAAae,EAAYC,GAG7C,OAFID,GAAYb,EAAkBF,EAAYiB,UAAWF,GACrDC,GAAad,EAAkBF,EAAagB,GACzChB,EAGT,SAASkB,EAAUC,EAAUC,GAC3B,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAInB,UAAU,sDAGtBkB,EAASF,UAAYN,OAAOU,OAAOD,GAAcA,EAAWH,UAAW,CACrEK,YAAa,CACXC,MAAOJ,EACPT,UAAU,EACVD,cAAc,KAGdW,GAAYI,EAAgBL,EAAUC,GAG5C,SAASK,EAAgBC,GAIvB,OAHAD,EAAkBd,OAAOgB,eAAiBhB,OAAOiB,eAAiB,SAAyBF,GACzF,OAAOA,EAAEG,WAAalB,OAAOiB,eAAeF,KAEvBA,GAGzB,SAASF,EAAgBE,EAAGI,GAM1B,OALAN,EAAkBb,OAAOgB,gBAAkB,SAAyBD,EAAGI,GAErE,OADAJ,EAAEG,UAAYC,EACPJ,IAGcA,EAAGI,GAwB5B,SAASC,EAA2BC,EAAMC,GACxC,OAAIA,GAAyB,kBAATA,GAAqC,oBAATA,EATlD,SAAgCD,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIE,eAAe,6DAG3B,OAAOF,EAQAG,CAAuBH,GAHrBC,EAMX,SAASG,EAAaC,GACpB,IAAIC,EA9BN,WACE,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAK1B,UAAU2B,SAASX,KAAKM,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOE,GACP,OAAO,GAqBuBC,GAEhC,OAAO,WACL,IACIC,EADAC,EAAQvB,EAAgBY,GAG5B,GAAIC,EAA2B,CAC7B,IAAIW,EAAYxB,EAAgByB,MAAM5B,YAEtCyB,EAASR,QAAQC,UAAUQ,EAAOG,UAAWF,QAE7CF,EAASC,EAAMI,MAAMF,KAAMC,WAG7B,OAAOpB,EAA2BmB,KAAMH,IAI5C,SAASM,EAAmBC,GAC1B,OAGF,SAA4BA,GAC1B,GAAIC,MAAMC,QAAQF,GAAM,OAAOG,EAAkBH,GAJ1CI,CAAmBJ,IAO5B,SAA0BK,GACxB,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYlD,OAAOgD,GAAO,OAAOJ,MAAMO,KAAKH,GARtDI,CAAiBT,IAWrD,SAAqC5B,EAAGsC,GACtC,IAAKtC,EAAG,OACR,GAAiB,kBAANA,EAAgB,OAAO+B,EAAkB/B,EAAGsC,GACvD,IAAIC,EAAItD,OAAOM,UAAU2B,SAASX,KAAKP,GAAGwC,MAAM,GAAI,GAC1C,WAAND,GAAkBvC,EAAEJ,cAAa2C,EAAIvC,EAAEJ,YAAY6C,MACvD,GAAU,QAANF,GAAqB,QAANA,EAAa,OAAOV,MAAMO,KAAKpC,GAClD,GAAU,cAANuC,GAAqB,2CAA2CG,KAAKH,GAAI,OAAOR,EAAkB/B,EAAGsC,GAjB9CK,CAA4Bf,IA4BzF,WACE,MAAM,IAAIrD,UAAU,wIA7B2EqE,GAoBjG,SAASb,EAAkBH,EAAKiB,IACnB,MAAPA,GAAeA,EAAMjB,EAAIhD,UAAQiE,EAAMjB,EAAIhD,QAE/C,IAAK,IAAID,EAAI,EAAGmE,EAAO,IAAIjB,MAAMgB,GAAMlE,EAAIkE,EAAKlE,IAAKmE,EAAKnE,GAAKiD,EAAIjD,GAEnE,OAAOmE,EAOT,SAASC,EAAQlD,GACf,IAAIjB,EAAS6C,UAAU7C,OAAS,QAAsBoE,IAAjBvB,UAAU,GAAmBA,UAAU,GAAK,EAC7EwB,EAAWC,OAAOrD,GACtB,GAAe,IAAXjB,EAAc,OAAOqE,EACzB,IAAIE,EAAQF,EAASE,MAAM,qBACvBC,EAASD,EAAQA,EAAM,GAAK,GAC5BE,EAASF,EAAQA,EAAM,GAAK,GAC5BG,EAAQH,EAAQA,EAAM,GAAKF,EAC3BM,EAAWD,EAAM1E,QAAUA,EAAS0E,GAAS3B,EAAmBE,MAAMjD,IAAS4E,KAAI,WACrF,MAAO,OACNC,KAAK,IAAMH,GAAOd,OAAgB,EAAV5D,GAC3B,MAAO,GAAG8E,OAAON,GAAQM,OAAOH,GAAUG,OAAOL,GAEnD,IAAIM,EAAiC,CACnCC,aAAa,EACbC,YAAa,GAwCf,SAASC,EAAgBC,EAAWC,GAClC,IAAIC,EAAOF,EAAUE,KACjBC,EAAQH,EAAUG,MAClBC,EAAUJ,EAAUI,QACpBC,EAAUL,EAAUK,QAEpBC,EAAiBpF,OAAOqF,OAAOrF,OAAOqF,OAAO,GAAIX,GAAiCK,GAClFJ,EAAcS,EAAeT,YAC7BC,EAAcQ,EAAeR,YAC7BU,EAAwBF,EAAeG,YACvCA,OAAwC,IAA1BD,EAAmCV,EAAcU,EAE/DE,EAAoBC,KAAKC,IAAI,EAAGd,GAChCe,EAAiBhB,EAAcb,EAAQmB,EAAe,GAAPD,EAAWJ,GAAed,EAAQmB,EAAOO,GAC5F,MAAO,CACLR,KAAML,EAAc,GAAKb,EAAQkB,EAAMO,GACvCN,MAAOU,EACPT,QAASpB,EAAQoB,EAASM,GAC1BL,QAASrB,EAAQqB,EAASK,IAI9B,IAAII,EAAY,SAAUC,GACxBtF,EAAUqF,EAAWC,GAErB,IAAIC,EAASrE,EAAamE,GAE1B,SAASA,IACP,IAAIG,EAyCJ,OAvCA5G,EAAgBoD,KAAMqD,IAEtBG,EAAQD,EAAOrD,MAAMF,KAAMC,YACrBwD,MAAQ,CACZC,MAAOF,EAAMtG,MAAMwG,OAAS,GAG9BF,EAAMG,eAAiB,WACrBH,EAAMI,SAAWC,OAAOC,aAAY,WAGpB,IAFFN,EAAMC,MAAMC,MAAQ,GAG9BF,EAAMO,gBAENP,EAAMtG,MAAM8G,YAAcR,EAAMtG,MAAM8G,cAEtCR,EAAMS,UAAS,SAAUC,GACvB,MAAO,CACLR,MAAOQ,EAAUR,MAAQ,QAI9B,MAGLF,EAAMO,cAAgB,WACpBI,cAAcX,EAAMI,WAGtBJ,EAAMY,QAAU,SAAUxB,GACxBY,EAAMO,gBAENP,EAAMS,UAAS,SAAUC,GACvB,MAAO,CACLR,MAAOQ,EAAUR,MAAQd,KAE1BY,EAAMG,iBAGJH,EAsBT,OAnBA5F,EAAayF,EAAW,CAAC,CACvB1F,IAAK,oBACLU,MAAO,WACL2B,KAAK2D,mBAEN,CACDhG,IAAK,uBACLU,MAAO,WACL8F,cAAcnE,KAAK4D,YAEpB,CACDjG,IAAK,SACLU,MAAO,WACL,OAAO2B,KAAK9C,MAAMP,SAAW0H,uBAAarE,KAAK9C,MAAMP,SAAU,CAC7D+G,MAAO1D,KAAKyD,MAAMC,QACf,SAIFL,EArEO,CAsEdiB,aACFjB,EAAUkB,UAAY,CACpBb,MAAOc,SACP7H,SAAU8H,UACVT,WAAYU,QAGd,IAAIC,EAAc,SAAUrB,GAC1BtF,EAAU2G,EAAarB,GAEvB,IAAIC,EAASrE,EAAayF,GAE1B,SAASA,EAAYzH,GACnB,IAAIsG,EA8EJ,GA5EA5G,EAAgBoD,KAAM2E,IAEtBnB,EAAQD,EAAOxE,KAAKiB,KAAM9C,IACpB0H,SAAU,EAChBpB,EAAMqB,iBAAmBrB,EAAMsB,2BAC/BtB,EAAMuB,qBAAuBvB,EAAMtG,MAAM8H,UAAY,EAAIxB,EAAMqB,iBAC/DrB,EAAMyB,WAAa,EACnBzB,EAAM0B,YAAa,EACnB1B,EAAM2B,mBAAqBC,sBAE3B5B,EAAM6B,KAAO,WACX,IAAI9C,EAAYiB,EAAM8B,gBAElBC,EAAWhD,EAAUiD,YAAchC,EAAMtG,MAAMuI,cAAWjE,EAAYgC,EAAMtG,MAAMwI,OAEtFlC,EAAMmC,kBAAkBpD,OAAWf,EAAW+D,IAGhD/B,EAAMoC,MAAQ,WACZ,IAAIpC,EAAMqC,YAAV,CACA,IAAIC,EAA2BtC,EAAMuB,qBACrCvB,EAAMuB,qBAAuB,EAC7BvB,EAAMyB,YAAca,EAA2BtC,EAAMsB,2BAA6BgB,EAA2B,EAE7G,IAAIvD,EAAYiB,EAAM8B,gBAEtB9B,EAAMmC,kBAAkBpD,EAAW,UAAWiB,EAAMtG,MAAM6I,SAErDvC,EAAMtG,MAAM8I,YAAgBzD,EAAUiD,YAAahC,EAAMtG,MAAMuI,WAClEjC,EAAMyC,aAENzC,EAAMI,SAAWC,OAAOC,YAAYN,EAAM6B,KAAM7B,EAAMtG,MAAMgJ,kBAIhE1C,EAAM2C,MAAQ,WACR3C,EAAM4C,aAEV5C,EAAMyC,aAENzC,EAAMuB,qBAAuBvB,EAAMsB,2BAEnCtB,EAAMmC,kBAAkBnC,EAAMC,MAAMlB,UAAW,SAAUiB,EAAMtG,MAAMmJ,WAGvE7C,EAAM8C,KAAO,WACP9C,EAAM+C,cAEV/C,EAAMyC,aAENzC,EAAMuB,qBAAuBvB,EAAMsB,2BACnCtB,EAAMyB,WAAazB,EAAMuB,qBAAuBvB,EAAMqB,iBAEtDrB,EAAMmC,kBAAkBnC,EAAM8B,gBAAiB,UAAW9B,EAAMtG,MAAMsJ,UAGxEhD,EAAMqC,UAAY,WAChB,OAAOrC,EAAMiD,SAAS,YAGxBjD,EAAM4C,SAAW,WACf,OAAO5C,EAAMiD,SAAS,WAGxBjD,EAAM+C,UAAY,WAChB,OAAO/C,EAAMiD,SAAS,YAGxBjD,EAAMkD,YAAc,WAClB,OAAOlD,EAAMiD,SAAS,cAGxBjD,EAAMmD,iBAAmB,SAAUpE,GAC7BiB,EAAMtG,MAAM8G,YAAYR,EAAMtG,MAAM8G,WAAWzB,IAGjDrF,EAAM0J,KAAM,CACd,IAAIrE,EAAYiB,EAAM8B,gBAEtB9B,EAAMC,MAAQ,CACZlB,UAAWA,EACXsE,OAAQtE,EAAUiD,UAAY,YAAc,gBAG9ChC,EAAM0B,YAAa,EAGrB,OAAO1B,EAsLT,OAnLA5F,EAAa+G,EAAa,CAAC,CACzBhH,IAAK,oBACLU,MAAO,WACD2B,KAAKkF,aAITlF,KAAK4E,SAAU,EACX5E,KAAK9C,MAAM4J,SAAS9G,KAAK9C,MAAM4J,QAAQ9G,KAAKsF,iBAC5CtF,KAAK9C,MAAM8H,WAAWhF,KAAK4F,WAEhC,CACDjI,IAAK,qBACLU,MAAO,SAA4B0I,GAC7B/G,KAAKkF,YAILlF,KAAK9C,MAAM0J,OAASG,EAAUH,OAChC5G,KAAK6E,iBAAmB7E,KAAK8E,2BAC7B9E,KAAK+E,qBAAuB/E,KAAK6E,iBACjC7E,KAAKiF,WAAa,EAClBjF,KAAK2F,kBAAkB3F,KAAKsF,oBAG/B,CACD3H,IAAK,uBACLU,MAAO,WACD2B,KAAKkF,aAITlF,KAAK4E,SAAU,EACf5E,KAAKiG,gBAEN,CACDtI,IAAK,gBACLU,MAAO,WACL,IAAI2I,EAAchH,KAAK9C,MACnB0J,EAAOI,EAAYJ,KACnBK,EAAMD,EAAYC,IAClBC,EAAYF,EAAYE,UACxBlB,EAAagB,EAAYhB,WACzBP,EAAWuB,EAAYvB,SAC3B,OAvRN,SAAuBmB,GACrB,IASIO,EATA3E,EAAUvC,UAAU7C,OAAS,QAAsBoE,IAAjBvB,UAAU,GAAmBA,UAAU,GAAK,GAC9EmH,EAAe5E,EAAQyE,IACvBA,OAAuB,IAAjBG,EAA0B3H,KAAKwH,IAAMG,EAC3CC,EAAqB7E,EAAQ0E,UAC7BA,OAAmC,IAAvBG,EAAgC,EAAIA,EAChDrB,EAAaxD,EAAQwD,WACrBsB,EAAsB9E,EAAQyC,WAC9BA,OAAqC,IAAxBqC,EAAiC,EAAIA,EAClD7B,EAAWjD,EAAQiD,SAIrB0B,EADkB,kBAATP,EACQ,IAAInH,KAAKmH,GAAMW,UACvBX,aAAgBnH,KACRmH,EAAKW,UAELX,EAGdZ,IACHmB,GAAkBlC,GAGpB,IAAIuC,EAAWxB,EAAamB,EAAiBA,EAAiBF,IAC1DQ,EAAmBvE,KAAKC,IAAI,GAAID,KAAKwE,IAAI,EAAGR,IAC5CS,EAAQzE,KAAK0E,MAAqG,IAA/FC,aAAapC,EAAW+B,EAAWtE,KAAKwE,IAAI,EAAGF,IAAa,KAAMM,QAAQL,KAC7F7E,EAAUM,KAAK6E,IAAIJ,GAAS,IAChC,MAAO,CACLA,MAAOA,EACPlF,KAAMS,KAAK8E,MAAMpF,EAAU,OAC3BF,MAAOQ,KAAK8E,MAAMpF,EAAU,KAAO,IACnCD,QAASO,KAAK8E,MAAMpF,EAAU,GAAK,IACnCA,QAASM,KAAK8E,MAAMpF,EAAU,IAC9BqF,aAAcC,QAAQtF,EAAU,EAAI,KAAMkF,WAC1CtC,UAAWmC,GAAS,GAoPXrC,CAAcsB,EAAM,CACzBK,IAAKA,EACLC,UAAWA,EACXlB,WAAYA,EACZf,WAAYjF,KAAKiF,WACjBQ,SAAUA,MAGb,CACD9H,IAAK,2BACLU,MAAO,WACL,OAAOoB,KAAKwH,QAEb,CACDtJ,IAAK,UACLU,MAAO,SAAiBuE,GACtB5C,KAAKmF,mBAAmBgD,QAAQ/D,QAAQxB,KAEzC,CACDjF,IAAK,aACLU,MAAO,WACLwF,OAAOM,cAAcnE,KAAK4D,YAE3B,CACDjG,IAAK,WACLU,MAAO,SAAkBwI,GACvB,OAAO7G,KAAKyD,MAAMoD,SAAWA,IAE9B,CACDlJ,IAAK,oBACLU,MAAO,SAA2BkE,EAAWsE,EAAQtB,GACnD,IAAI6C,EAASpI,KAEb,GAAKA,KAAK4E,QAAV,CACA,IAAIyD,GAECrI,KAAKyD,MAAMlB,UAAUiD,WAAajD,EAAUiD,YAC1CxF,KAAK9C,MAAMuI,UAAUzF,KAAKiG,aAC/BoC,EAAoBrI,KAAK2G,kBAQ3B,OAAO3G,KAAKiE,UAAS,SAAUC,GAC7B,IAAIoE,EAAYzB,GAAU3C,EAAU2C,OAQpC,OANItE,EAAUiD,YAAc4C,EAAOlL,MAAMuI,SACvC6C,EAAY,YACFzB,GAAwB,cAAdyB,IACpBA,EAAY,WAGP,CACL/F,UAAWA,EACXsE,OAAQyB,MAhBC,WACP/C,GAAUA,EAAS6C,EAAO3E,MAAMlB,WAChC8F,GAAmBA,EAAkBD,EAAO3E,MAAMlB,iBAkBzD,CACD5E,IAAK,SACLU,MAAO,WACL,OAAO2B,KAAKuI,IAAMvI,KAAKuI,KAAO,CAC5B3C,MAAO5F,KAAK4F,MACZO,MAAOnG,KAAKmG,MACZG,KAAMtG,KAAKsG,KACXT,UAAW7F,KAAK6F,UAChBO,SAAUpG,KAAKoG,SACfG,UAAWvG,KAAKuG,UAChBG,YAAa1G,KAAK0G,eAGrB,CACD/I,IAAK,iBACLU,MAAO,WACL,IAAImK,EAAexI,KAAK9C,MACpBkF,EAAcoG,EAAapG,YAC3BC,EAAcmG,EAAanG,YAC3BW,EAAcwF,EAAaxF,YAC3BT,EAAYvC,KAAKyD,MAAMlB,UAC3B,OAAO9E,OAAOqF,OAAOrF,OAAOqF,OAAO,GAAIP,GAAY,CACjDgG,IAAKvI,KAAKyI,SACVvL,MAAO8C,KAAK9C,MACZwL,UAAWpG,EAAgBC,EAAW,CACpCH,YAAaA,EACbC,YAAaA,EACbW,YAAaA,QAIlB,CACDrF,IAAK,SACLU,MAAO,WACL,GAAI2B,KAAKkF,WAAY,CACnB,IAAIyD,EAAe3I,KAAK9C,MACpBwG,EAAQiF,EAAajF,MACrBkF,EAAYD,EAAahM,SACzBqH,EAAa2E,EAAa3E,WAC9B,OAAO6E,wBAAcxF,EAAW,CAC9ByF,IAAK9I,KAAKmF,mBACVzB,MAAOA,EACPM,WAAYA,GACX4E,GAGL,IAAIG,EAAe/I,KAAK9C,MACpB8L,EAAYD,EAAaC,UACzBvD,EAAWsD,EAAatD,SACxB9I,EAAWoM,EAAapM,SACxBsM,EAAWF,EAAaE,SACxBC,EAAclJ,KAAKmJ,iBAEvB,GAAIF,EACF,OAAOA,EAASC,GAGlB,GAAIvM,GAAYqD,KAAKyD,MAAMlB,UAAUiD,YAAcC,EACjD,OAAOpB,uBAAa1H,EAAU,CAC5ByM,UAAWF,IAIf,IAAIG,EAAwBH,EAAYR,UACpCjG,EAAO4G,EAAsB5G,KAC7BC,EAAQ2G,EAAsB3G,MAC9BC,EAAU0G,EAAsB1G,QAChCC,EAAUyG,EAAsBzG,QACpC,OAAOiG,wBAAc,OAAQ,CAC3BG,UAAWA,GACVE,EAAYvB,MAAQ,EAAI,IAAM,GAAIlF,EAAMA,EAAO,IAAM,GAAIC,EAAO,IAAKC,EAAS,IAAKC,OAInF+B,EArRS,CAsRhBL,aACFK,EAAYhJ,aAAe8B,OAAOqF,OAAOrF,OAAOqF,OAAO,GAAIX,GAAiC,CAC1F6D,YAAY,EACZE,cAAe,IACfgB,UAAW,EACXlC,WAAW,IAEbL,EAAYJ,UAAY,CACtBqC,KAAM0C,oBAAU,CAACC,qBAAW9J,MAAO+J,SAAQhF,WAC3CpC,YAAaqH,OACbpH,YAAamC,SACbxB,YAAawB,SACbwB,WAAYyD,OACZvD,cAAe1B,SACf0C,UAAW1C,SACXQ,UAAWyE,OACXhE,SAAUgE,OACVT,UAAWQ,SACX7M,SAAU8H,UACVwE,SAAUvE,OACVuC,IAAKvC,OACLoC,QAASpC,OACTqB,QAASrB,OACT2B,QAAS3B,OACT8B,OAAQ9B,OACRgB,OAAQhB,OACRV,WAAYU,QAGCC,O,kCCtlBf,mD,2MCsIY+E,G,+TCzHN9O,GAAUC,WAAOC,IAAV,sEAKP6O,GAAqB9O,mBAAO+O,KAAP/O,CAAH,qOAGb,qBAAGE,MAAkBC,OAAOqB,QAQ3B,qBAAGtB,MAAkBC,OAAO6O,WAkCzBC,GA9B0C,SAAC,GAMnD,IALLC,EAKI,EALJA,gBACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEQ9O,EAAMC,eAAND,EAER,OACE,gBAACT,GAAD,WACE,gBAAC,KAAD,CAAMwP,eAAe,gBAAgBC,GAAI,GAAzC,UACE,gBAAC,MAAD,CAAM5O,MAAM,aAAZ,UAA0BJ,EAAE,SAA5B,OACA,eAACsO,GAAD,CAAoBW,KAAMH,EAA1B,SAA4CD,QAE5CF,GACA,gBAAC,KAAD,CAAMI,eAAe,gBAAgBC,GAAI,GAAzC,UACE,gBAAC,MAAD,CAAM5O,MAAM,aAAZ,UAA0BJ,EAAE,mBAA5B,OACA,eAAC,MAAD,UAAO4O,OAGX,eAAC,KAAD,CAAMG,eAAe,aAArB,SACE,eAAC,KAAD,CAAMG,UAAQ,EAACD,KAAMP,EAAiBrO,MAAM,EAA5C,SACGL,EAAE,6B,UC3CPT,GAAUC,mBAAO2P,KAAP3P,CAAH,mEAMP4P,GAAgB5P,mBAAO6P,MAAP7P,CAAH,mGAMb8P,GAAY9P,WAAOC,IAAV,qfAWT,qBAAGC,MAAkB6P,aAAaC,MAalC,qBAAG9P,MAAkB6P,aAAaC,MAiCzBC,GAzBuC,SAAC,GAOhD,IANLZ,EAMI,EANJA,QACAa,EAKI,EALJA,WACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,UAGI,EADJC,YAEA,OACE,gBAAC,GAAD,CAASC,GAAI,GAAIf,eAAe,gBAAgBgB,WAAW,SAASf,GAAG,OAAvE,UACE,gBAACM,GAAD,WACE,sBAAK3B,UAAU,QAAQqC,IAAG,yBAAoBJ,EAAUK,MAAM,KAAK,GAAGC,oBAA5C,QAAuEC,IAAI,SACrG,sBAAKxC,UAAU,OAAOqC,IAAG,yBAAoBJ,EAAUK,MAAM,KAAK,GAAGC,oBAA5C,QAAuEC,IAAI,YAEtG,gBAAC,KAAD,CAAMC,cAAc,SAASL,WAAW,WAAxC,UACE,eAAC,KAAD,CAASf,GAAG,MAAZ,SAAmBH,EAAQoB,MAAM,KAAK,KACtC,gBAAC,KAAD,CAAMlB,eAAe,SAArB,UACGY,EAAkB,eAAC,KAAD,IAAmB,eAAC,KAAD,IACtC,eAACP,GAAD,CAAeiB,QAAQ,YAAvB,SAAoCX,c,uFCL/BY,GAtDmC,SAAC,GAAoE,IAAlEjE,EAAiE,EAAjEA,IAAKkE,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,UAAiD,IAAtCC,iBAAsC,MAA1B,GAA0B,EAAtB3B,EAAsB,EAAtBA,gBAC9F,EAAsB4B,oBAAS,IAA/B,oBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQ9Q,EAAMC,eAAND,EACF+Q,EAAcC,oBAAQ,WAC1B,OAAOC,aAAsB5E,KAC5B,CAACA,IAEE6E,EAAeC,wBACnB,SAAC7M,GACCsM,EAAOtM,EAAE8M,cAAcpO,SAEzB,CAAC4N,IAGGS,EAAkBF,wBAAY,WAClCP,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,gBAAC,KAAD,CAAOU,MAAOtR,EAAE,mBAAoBwQ,UAAWA,EAA/C,UACE,eAACe,GAAA,EAAD,CACEvO,MAAO2N,EACPa,YAAaH,EACbI,SAAUP,EACV7E,IAAK0E,EACLW,OAAQjB,EACR3B,gBAAiBA,EACjB6C,WAAY3R,EAAE,WAEhB,gBAAC4R,GAAA,EAAD,WACE,eAAC,KAAD,CAAQvB,QAAQ,YAAYvQ,QAAS0Q,EAAWqB,MAAM,OAAtD,SACG7R,EAAE,YAEL,eAAC,KAAD,CACE6R,MAAM,OACNC,SAAUjB,IAAcF,GAAe,MAARA,GAAe9D,OAAOkE,GAAelE,OAAO8D,GAC3E7Q,QAAO,wBAAE,uBAAAiS,EAAA,6DACPjB,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAHX,SAUexQ,EAAZ6Q,EAAc,uBAA4B,gBAG/C,eAAC,KAAD,CAAc5B,KAAMH,EAAiBkD,MAAO,CAAEC,UAAW,UAAzD,SACGjS,EAAE,eAAgB,CAAE0R,OAAQjB,UCCtByB,GAlDqC,SAAC,GAAmD,IAAjD3B,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWnE,EAA0B,EAA1BA,IAA0B,IAArBoE,iBAAqB,MAAT,GAAS,EACrG,EAAsBC,oBAAS,IAA/B,oBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQ9Q,EAAMC,eAAND,EACF+Q,EAAcC,oBAAQ,WAC1B,OAAOC,aAAsB5E,KAC5B,CAACA,IAEE6E,EAAeC,wBACnB,SAAC7M,GACCsM,EAAOtM,EAAE8M,cAAcpO,SAEzB,CAAC4N,IAGGS,EAAkBF,wBAAY,WAClCP,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,gBAAC,KAAD,CAAOU,MAAOtR,EAAE,qBAAsBwQ,UAAWA,EAAjD,UACE,eAACe,GAAA,EAAD,CACEC,YAAaH,EACbI,SAAUP,EACVlO,MAAO2N,EACPtE,IAAK0E,EACLW,OAAQjB,EACRkB,WAAY3R,EAAE,aAEhB,gBAAC4R,GAAA,EAAD,WACE,eAAC,KAAD,CAAQvB,QAAQ,YAAYvQ,QAAS0Q,EAAWqB,MAAM,OAAtD,SACG7R,EAAE,YAEL,eAAC,KAAD,CACE8R,SAAUjB,IAAcF,GAAe,MAARA,GAAe9D,OAAOkE,GAAelE,OAAO8D,GAC3E7Q,QAAO,wBAAE,uBAAAiS,EAAA,6DACPjB,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAMTqB,MAAM,OARR,SAUe7R,EAAZ6Q,EAAc,uBAA4B,oBCvC/CsB,GAAoB3S,WAAOC,IAAV,+EAmDR2S,GA5CqC,SAAC,GAM9C,IALLC,EAKI,EALJA,cACAC,EAII,EAJJA,aACA7B,EAGI,EAHJA,UACA8B,EAEI,EAFJA,IACAzD,EACI,EADJA,gBAEQ9O,EAAMC,eAAND,EACAwS,EAAYC,aAASF,GAArBC,QACAE,EAAcC,aAAWJ,GAAzBG,UAEFE,EAAmBC,aAAiBR,GACpCS,EAAiBF,EAAiBG,iBAExC,EAA2BC,cACzB,eAAC,GAAD,CAAc3G,IAAKiG,EAAc/B,UAAWiC,EAAS/B,UAAWA,EAAW3B,gBAAiBA,KADvFmE,EAAP,qBAGA,EAA4BD,cAC1B,eAAC,GAAD,CAAe3G,IAAKgG,EAAe9B,UAAWmC,EAAWjC,UAAWA,KAD/DyC,EAAP,qBAmBA,OACE,gBAAC,KAAD,CAAMnE,eAAe,gBAAgBgB,WAAW,SAAhD,UACE,eAAC,KAAD,CAAS3P,MAA4B,IAArBwS,EAAyB,eAAiB,OAA1D,SAAmEE,IAhBzC,IAArBF,EACL,eAAC,KAAD,CAAQ9S,QAASmT,EAAjB,SAAoCjT,EAAE,cAEtC,gBAACmS,GAAD,WACE,eAAC,KAAD,CAAY9B,QAAQ,WAAWvQ,QAASoT,EAAmBC,GAAG,MAA9D,SACE,eAAC,KAAD,CAAW/S,MAAM,UAAUyR,MAAM,WAEnC,eAAC,KAAD,CAAYxB,QAAQ,WAAWvQ,QAASmT,EAAxC,SACE,eAAC,KAAD,CAAS7S,MAAM,UAAUyR,MAAM,kB,UCjB1BuB,GA1BuC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUd,EAAU,EAAVA,IACzDe,EAAYC,0BAAZD,QACAtT,EAAMC,eAAND,EACR,EAAkC0Q,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQ0C,EAAaC,aAAWlB,GAAxBiB,SAEFE,EAAqBJ,EAAUT,aAAiBQ,GAAY,EAC5DP,EAAiBY,EAAmBX,iBAE1C,OACE,gBAAC,KAAD,CAAM/D,GAAG,MAAMD,eAAe,gBAAgBgB,WAAW,SAAzD,UACE,eAAC,KAAD,CAAS3P,MAA8B,IAAvBsT,EAA2B,eAAiB,OAA5D,SAAqEZ,IACrE,eAAC,KAAD,CACEhB,SAAiC,IAAvB4B,GAA4B7C,EACtC/Q,QAAO,wBAAE,uBAAAiS,EAAA,6DACPjB,GAAa,GADN,SAED0C,IAFC,OAGP1C,GAAa,GAHN,2CAFX,SAQG9Q,EAAE,iBClBL2T,GAASnU,WAAOC,IAAV,sDAGNmU,GAAqBpU,mBAAOqU,KAAPrU,CAAH,uFAKlBsU,GAAetU,mBAAOuU,KAAPvU,CAAH,gDA6EHwU,GAlEqC,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMX,EAA+B,EAA/BA,QAASxE,EAAsB,EAAtBA,gBAC5D9O,EAAMC,eAAND,EACR,EAAkD0Q,qBAAS,GAA3D,oBAAOwD,EAAP,KAA0BC,EAA1B,KACA,EAA6BC,aAAkBH,EAAKI,UAA5C9B,EAAR,EAAQA,IAAK+B,EAAb,EAAaA,YACb,EAA6DC,aAAYhC,GAAjEiC,EAAR,EAAQA,UAAWlC,EAAnB,EAAmBA,aAAcD,EAAjC,EAAiCA,cAAegB,EAAhD,EAAgDA,SAC1CoB,EAAYC,aAAWJ,GACvBK,EAASV,EAAKI,SACdO,EACJtB,GAAWkB,GAAaA,EAAUK,cAAc,IAAML,EAAUM,uBAAuBxC,GACnFyC,EAAOC,eAEPC,EAAaC,aAAiBT,EAAWM,GAEvCI,EAAcC,aAAWH,GAAzBE,UAEFE,EAAgBlE,uBAAW,wBAAC,uBAAAY,EAAA,sEAE9BoC,GAAqB,GAFS,SAGxBgB,IAHwB,OAI9BhB,GAAqB,GAJS,gDAM9BmB,QAAQC,MAAR,MAN8B,yDAQ/B,CAACJ,IAkBJ,OACE,gBAACxB,GAAD,WACE,gBAAC,KAAD,WACE,eAAC,MAAD,CAAMtT,MAAI,EAACD,MAAM,MAAMoV,SAAS,OAAOC,GAAG,MAA1C,iBAIA,eAAC,MAAD,CAAMpV,MAAI,EAACqV,cAAc,YAAYtV,MAAM,MAAMoV,SAAS,OAA1D,SACGxV,EAAE,eAGP,eAAC,GAAD,CAAeqT,SAAUA,EAAUd,IAAKA,IACxC,gBAAC,KAAD,WACE,eAAC,MAAD,CAAMlS,MAAI,EAACD,MAAM,MAAMoV,SAAS,OAAOC,GAAG,MAA1C,SACGd,IAEH,eAAC,MAAD,CAAMtU,MAAI,EAACqV,cAAc,YAAYtV,MAAM,MAAMoV,SAAS,OAA1D,SACGxV,EAAE,eAGLsT,EAnCGsB,EACL,eAAC,GAAD,CACEvC,cAAeA,EACfC,aAAcA,EACd7B,UAAWkE,EACXpC,IAAKA,EACLzD,gBAAiBA,IAGnB,eAACgF,GAAD,CAAc6B,GAAG,MAAM9D,MAAM,OAAOC,SAAUoC,EAAmBpU,QAASuV,EAA1E,SACGrV,EAAE,sBAyBO,eAAC4T,GAAD,CAAoB+B,GAAG,MAAM9D,MAAM,aC7FxC+D,GAAuC,SAAC,GAAyC,IAFxEzM,EAEiC0M,EAAsC,EAAtCA,aAI/CC,EAJqF,EAAxBC,QAIpC,IACzBC,EAAsBH,EAHJ,IAKlBI,EAAY,IAPyE,EAAfC,SAUtEC,EAAcF,EAAS,SAAI,EAAIH,EARb,QAQmEE,GAI3F,OAhBoB7M,EAeGgN,EAAcF,EAfNpO,KAAK0E,MAAe,IAATpD,GAAgB,KAmB/CiN,GAAc,SAAC,GAE1B,OAF+D,EAAnCC,aAAmC,EAArBC,eACW,KACnC7J,QAAQ,ICJtB8J,GAAO/W,WAAOC,IAAV,yJAOJ+W,GAAWhX,WAAOC,IAAV,uDAIRgX,GAAcjX,mBAAOkX,MAAPlX,CAAH,0EA6HFmX,GAxH+C,SAAC,GAQxD,IAPLnG,EAOI,EAPJA,UACA3B,EAMI,EANJA,QACAqH,EAKI,EALJA,SACAU,EAII,EAJJA,IACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,OACAhI,EACI,EADJA,gBAEQ9O,EAAMC,eAAND,EACF+W,EAAgC,IAAOb,EAASc,WAEhDC,EAAyBrB,GAAqC,CAAEC,aAAc,EAAGE,QAASa,EAAKV,aAC/FgB,EAAyBtB,GAAqC,CAAEC,aAAc,EAAGE,QAASa,EAAKV,aAC/FiB,EAA0BvB,GAAqC,CACnEC,aAAc,GACdE,QAASa,EACTV,aAEIkB,EAA2BxB,GAAqC,CACpEC,aAAc,IACdE,QAASa,EACTV,aAGF,OACE,gBAAC,KAAD,CAAO5E,MAAM,MAAMd,UAAWA,EAA9B,UACE,gBAAC+F,GAAD,WACE,eAACC,GAAD,UACE,eAAC,MAAD,CAAMhB,SAAS,OAAOnV,MAAI,EAACD,MAAM,aAAasV,cAAc,YAAY1G,GAAG,OAA3E,SACGhP,EAAE,iBAGP,eAACwW,GAAD,UACE,eAAC,MAAD,CAAMhB,SAAS,OAAOnV,MAAI,EAACD,MAAM,aAAasV,cAAc,YAAY1G,GAAG,OAA3E,SACGhP,EAAE,WAGP,eAACwW,GAAD,UACE,eAAC,MAAD,CAAMhB,SAAS,OAAOnV,MAAI,EAACD,MAAM,aAAa4O,GAAG,OAAjD,SACGhP,EAAE,qBAIP,eAACwW,GAAD,UACE,eAAC,MAAD,mBAEF,eAACA,GAAD,UACE,gBAAC,MAAD,WACGJ,GAAY,CAAEC,aAAcY,EAAwBX,eAAgBS,IADvE,SAIF,eAACP,GAAD,UACE,eAAC,MAAD,UAAOS,MAGT,eAACT,GAAD,UACE,eAAC,MAAD,mBAEF,eAACA,GAAD,UACE,gBAAC,MAAD,WACGJ,GAAY,CAAEC,aAAca,EAAwBZ,eAAgBS,IADvE,SAIF,eAACP,GAAD,UACE,eAAC,MAAD,UAAOU,MAGT,eAACV,GAAD,UACE,eAAC,MAAD,oBAEF,eAACA,GAAD,UACE,gBAAC,MAAD,WACGJ,GAAY,CAAEC,aAAcc,EAAyBb,eAAgBS,IADxE,SAIF,eAACP,GAAD,UACE,eAAC,MAAD,UAAOW,MAGT,eAACX,GAAD,UACE,eAAC,MAAD,0BAEF,eAACA,GAAD,UACE,gBAAC,MAAD,WACGJ,GAAY,CAAEC,aAAce,EAA0Bd,eAAgBS,IADzE,SAIF,eAACP,GAAD,UACE,eAAC,MAAD,UAAOY,SAGX,eAACX,GAAD,CAAajB,SAAS,OAAOpV,MAAM,aAAnC,SACGJ,EACC,sKAGJ,gBAAC,KAAD,CAAM+O,eAAe,gBAAgBC,GAAG,OAAxC,UACE,eAAC,MAAD,CAAMwG,SAAS,OAAOnV,MAAI,EAACD,MAAM,aAAjC,SACGJ,EAAE,cAEL,gBAAC,MAAD,CAAMwV,SAAS,OAAOpV,MAAM,aAA5B,UACGyW,GAAWA,EAAQpK,QAAQ,GAD9B,UAIF,gBAAC,KAAD,CAAMsC,eAAe,gBAAgBC,GAAG,OAAxC,UACE,eAAC,MAAD,CAAMwG,SAAS,OAAOnV,MAAI,EAACD,MAAM,aAAjC,SACGJ,EAAE,gBAEL,gBAAC,MAAD,CAAMwV,SAAS,OAAOpV,MAAM,aAA5B,UACG0W,GAAUA,EAAOrK,QAAQ,GAD5B,UAIF,eAAC,KAAD,CAAMsC,eAAe,SAArB,SACE,eAAC,KAAD,CAAcE,KAAMH,EAApB,SAAsC9O,EAAE,eAAgB,CAAE0R,OAAQ7C,YC7G3DwI,GAxB6B,SAAC,GAAkE,IAAhExI,EAA+D,EAA/DA,QAASqH,EAAsD,EAAtDA,SAAUU,EAA4C,EAA5CA,IAAKC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,OAAQhI,EAAsB,EAAtBA,gBACtF,EAA4BkE,cAC1B,eAAC,GAAD,CACEnE,QAASA,EACTqH,SAAUA,EACVU,IAAKA,EACLC,QAASA,EACTC,OAAQA,EACRhI,gBAAiBA,KAPdwI,EAAP,qBAgBA,OACE,eAAC,KAAD,CAAYxX,QANY,SAACyX,GACzBA,EAAMC,kBACNF,KAIwCjH,QAAQ,OAAOoH,MAAM,KAAKC,GAAG,MAArE,SACE,eAAC,KAAD,CAAe7F,MAAM,YCjBrB8F,GAAQnY,WAAOC,IAAV,wSAEK,SAACoC,GAAD,OAAWA,EAAMnC,MAAMkY,KAAK7W,cAWtC8W,GAAUrY,WAAOC,IAAV,6GACS,qBAAGC,MAAkBC,OAAOmY,eAM5CC,GAAmBvY,WAAOC,IAAV,kEACV,SAACoC,GAAD,OAAYA,EAAM9B,SAAW,OAAS,SAG5CiY,GAAaxY,mBAAOkX,MAAPlX,CAAH,oEACL,qBAAGE,MAAkBC,OAAOsY,gBA4FxBC,GAhF2B,SAAC,GAA0C,IAAxCjE,EAAuC,EAAvCA,KAAMtF,EAAiC,EAAjCA,QAASuH,EAAwB,EAAxBA,SAAU5C,EAAc,EAAdA,QAC5DtT,EAAMC,eAAND,EAER,EAA0D0Q,qBAAS,GAAnE,oBAAOyH,EAAP,KAA8BC,EAA9B,KAEMzI,EAAkB0I,KAAeC,SAASrE,EAAKsE,MAAM7G,QAGrD9B,EAAYqE,EAAKI,SAASpE,MAAM,KAAK,GAAGC,oBAExCtB,EAAqBqF,EAAKuE,UAAL,WACnBvE,EAAKuE,UAAUxB,WAAWjE,oBAAe5M,EAAW,CAAEsS,sBAAuB,KACjF,IAEE5J,EAAUoF,EAAKI,SACfqE,EAAYzE,EAAK0E,KAAO1E,EAAK0E,KAAKD,UAAY,QAE9CE,EAAU3E,EAAK2C,KAAO3C,EAAK2C,IAAI7D,eAAe,QAAS,CAAE0F,sBAAuB,IAEhFI,EAAwBtY,aAAyB,CACrDC,mBAAoByT,EAAK6E,WAAWC,QACpCtY,eAAgBwT,EAAKsE,MAAMQ,UAEvBjK,EAAe,UAAMkK,KAAN,YAAgCH,GAErD,OACE,gBAAClB,GAAD,WAEE,eAAC,GAAD,CACE9I,QAASA,EACTa,WAAYuE,EAAKvE,WACjBC,gBAAiBA,EACjBC,UAAWA,EACXC,YAAaoE,EAAKsE,MAAM7G,UAExB/C,GACA,gBAAC,KAAD,CAAMmB,GAAI,GAAIf,eAAe,gBAAgBgB,WAAW,SAAxD,UACE,gBAACiI,GAAD,WAAahY,EAAE,OAAf,OACA,eAAC,MAAD,CAAMK,MAAI,EAAC2R,MAAO,CAAEiH,QAAS,OAAQlJ,WAAY,UAAjD,SACGkE,EAAK2C,IACJ,uCACE,eAAC,GAAD,CACE/H,QAASA,EACTC,gBAAiBA,EACjBoH,SAAUA,EACVU,IAAK3C,EAAK2C,IACVC,QAAS5C,EAAK4C,QACdC,OAAQ7C,EAAK6C,SAEd8B,EATH,OAYA,eAAC,MAAD,CAAUM,OAAQ,GAAIrH,MAAO,UAKrC,gBAAC,KAAD,CAAM/B,GAAI,GAAIf,eAAe,gBAA7B,UACE,gBAACiJ,GAAD,WAAahY,EAAE,QAAf,OACA,eAAC,MAAD,CAAMK,MAAI,EAAV,SAAYqY,OAEd,eAACS,GAAD,CAAsBlF,KAAMA,EAAMX,QAASA,EAASxE,gBAAiBA,IACrE,eAAC+I,GAAD,IACA,eAAChY,GAAA,EAAD,CACEC,QAAS,kBAAMsY,GAA0BD,IACzCpY,SAAUoY,IAEZ,eAACJ,GAAD,CAAkBhY,SAAUoY,EAA5B,SACE,eAAC,GAAD,CACExJ,QAASA,EACTD,gBAAe,2CAAsCuF,EAAKK,YAAY8E,OACtExK,mBAAoBA,EACpBC,QAASA,EACTC,gBAAiBA,U,gDCpHrBuK,GAAOC,KAAM3S,KAAI,SAACsN,GAAD,OAAUA,EAAK1B,O,WCGhCpR,GAAY3B,WAAOC,IAAV,wKAQX,qBAAGC,MAAkB6P,aAAaC,MAOhC+J,GAAa/Z,WAAOC,IAAV,6HAGL,qBAAGC,MAAkBC,OAAOqB,QACnC,qBAAGtB,MAAkB6P,aAAaiK,MA0BvBC,GArB0C,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,IAAK7C,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAChE9W,EAAMC,eAAND,EAER,OACE,gBAACmB,GAAD,WACE,gBAACoY,GAAD,WAAaG,EAAb,OACA,eAACtY,GAAA,EAAD,CACEC,QACE,uCACE,0CAAUrB,EAAE,YAAZ,cAA6B6W,EAA7B,OACA,wBACA,0CAAU7W,EAAE,0BAAZ,cAA2C8W,EAA3C,UALN,SASE,eAAC,KAAD,CAAU1W,MAAM,qBC1ClBe,GAAY3B,WAAOC,IAAV,6MAGJ,qBAAGC,MAAkBC,OAAOqB,QAQvB,qBAAGtB,MAAkBC,OAAOC,cAMtC2Z,GAAa/Z,WAAOC,IAAV,sEAoBDka,GAfiB,SAAC,GAAa,IAAXD,EAAU,EAAVA,IACzB1Z,EAAMC,eAAND,EACR,OACE,eAAC,GAAD,UACG0Z,EACC,qCACE,gBAAC,GAAD,WAAaA,EAAb,SAGF,eAAC,GAAD,UAAa1Z,EAAE,mBC5BjBsP,GAAY9P,WAAOC,IAAV,2hBAGX,qBAAGC,MAAkB6P,aAAaqK,MAWhC,qBAAGla,MAAkB6P,aAAaC,MAalC,qBAAG9P,MAAkB6P,aAAaC,MAQlCrO,GAAY3B,WAAOC,IAAV,uIAKX,qBAAGC,MAAkB6P,aAAaC,MAoCvBqK,GA/BkC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOvH,EAAU,EAAVA,IACjDF,EAAkBkC,aAAYhC,GAA9BF,cACArS,EAAMC,eAAND,EACF4S,EAAmBC,aAAiBR,GAc1C,OACE,gBAAC,GAAD,WACE,gBAAC,GAAD,WACE,sBAAK1E,UAAU,QAAQqC,IAAG,yBAAoB8J,EAAM7J,MAAM,KAAK,GAAGC,oBAAxC,QAAmEC,IAAI,SACjG,sBAAKxC,UAAU,OAAOqC,IAAG,yBAAoB8J,EAAM7J,MAAM,KAAK,GAAGC,oBAAxC,QAAmEC,IAAI,YAElG,iCAjBEyC,EAEA,eAAC,MAAD,CAAMxS,MAAM,YAAYoV,SAAS,OAAOnV,MAAI,EAA5C,SACGL,EAAE,aAKF,KAWH,eAAC,MAAD,CAAMK,MAAI,EAAV,SAAYyZ,WC1EdC,GAASva,WAAOwa,KAAV,sFACD,gBAAGC,EAAH,EAAGA,OAAQva,EAAX,EAAWA,MAAX,OAAwBua,EAASva,EAAMC,OAAOqB,KAAOtB,EAAMC,OAAOsY,gBAY9DiC,GAPsC,SAAC,GAAkB,IAAhB7G,EAAe,EAAfA,SAC9CC,EAAYC,0BAAZD,QACFR,EAA8B,OAAbO,GAAqBC,EAAUD,EAASN,iBAAmB,IAElF,OAAO,eAACgH,GAAD,CAAQE,OAAQ5G,EAAhB,SAA2BP,KCV9B3R,GAAY3B,WAAOC,IAAV,4KAKJ,qBAAGC,MAAkBC,OAAO6O,WAEnC,qBAAG9O,MAAkB6P,aAAaC,MAKhC2K,GAAY3a,mBAAO4a,KAAP5a,CAAH,iEACA,qBAAG6a,QAAyB,iBAAmB,eAiB/CC,GAbyB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAEnCC,GADWC,gBAATC,KAEA1a,EAAMC,eAAND,EAER,OACE,gBAAC,GAAD,YACIwa,GAAYxa,EAAE,WAChB,eAACma,GAAD,CAAW/Z,MAAM,UAAUia,QAASE,QCvBpCI,GAAoBnb,WAAOC,IAAV,yHACZ,qBAAGC,MAAkBC,OAAOqB,QAInC,qBAAGtB,MAAkB6P,aAAaC,MAKhCrO,GAAY3B,WAAOC,IAAV,wKAQX,qBAAGC,MAAkB6P,aAAaC,MA8BvBoL,GAvB8C,SAAC,GAAoB,IAAlBlL,EAAiB,EAAjBA,WACxDmL,EAAmBnL,EAAaA,EAAWoL,cAAgB,IACzD9a,EAAMC,eAAND,EAER,OACE,gBAAC,GAAD,WACE,eAAC2a,GAAD,UAAoBE,IACpB,eAACzZ,GAAA,EAAD,CACEC,QACE,iCACGrB,EAAE,uEACH,wBACA,wBACCA,EAAE,yGANT,SAUE,eAAC,KAAD,CAAUI,MAAM,qBC1ClB2a,GAAmBvb,WAAOC,IAAV,oIAKlB,qBAAGC,MAAkB6P,aAAaC,MAKhCrO,GAAY3B,WAAOC,IAAV,wKAQX,qBAAGC,MAAkB6P,aAAaC,MAyBvBwL,GAlB4C,SAAC,GAAmB,IAAjBxC,EAAgB,EAAhBA,UACtDyC,EAAmBzC,EAAS,WAC1B3L,OAAO2L,GAAWzF,oBAAe5M,EAAW,CAAEsS,sBAAuB,KACzE,IACIzY,EAAMC,eAAND,EAER,OACE,gBAAC,GAAD,WACE,eAAC+a,GAAD,UACE,eAAC,MAAD,UAAOE,MAET,eAAC7Z,GAAA,EAAD,CAASC,QAASrB,EAAE,+DAApB,SACE,eAAC,KAAD,CAAUI,MAAM,qB,UC9CX8a,GAAkB1b,WAAOC,IAAV,yXAEN,qBAAGC,MAAkBC,OAAOmY,eAM9C,qBAAGpY,MAAkB6P,aAAaC,MAOlC,qBAAG9P,MAAkB6P,aAAa4L,MAQzBC,GAAe5b,WAAOC,IAAV,6FAMZ4b,GAAQ7b,WAAOwa,KAAV,4CACP,qBAAGta,MAAkBC,OAAO2b,WAG1BC,GAAS/b,WAAOwa,KAAV,4CACR,qBAAGta,MAAkBC,OAAOC,cAG1B4b,GAAgBhc,WAAOC,IAAV,0GAKbya,GAAS1a,WAAOC,IAAV,qFAGR,qBAAGC,MAAkBC,OAAOqB,QAG1Bya,GAASjc,WAAOC,IAAV,gEAER,qBAAGC,MAAkBC,OAAOC,cCkBxBwT,GAzDqD,SAAC,GAAuB,IAArBb,EAAoB,EAApBA,IAAKmJ,EAAe,EAAfA,SAClEpI,EAAYC,0BAAZD,QACFqI,EAAoBD,GAAYpI,EAAU,IAAIsI,KAAUF,EAASrI,UAAY,KAC7E6C,EAAW2F,eACbxI,EAAW,KACXyI,EAAe,EACfhJ,EAAiB,IAEjB6I,IACFtI,EAAWR,aAAiB8I,GAC5BG,EAAe,IAAIF,KAAUvI,GAAU0I,aAAa7F,GAAUc,WAC9DlE,EAAiBO,EAASN,kBAG5B,MAAkCrC,qBAAS,GAA3C,oBAAOG,EAAP,KAAkBC,EAAlB,KACQ0C,EAAaC,aAAWlB,GAAxBiB,SACAxT,EAAMC,eAAND,EAER,EAA4Bgc,sBAAW,CACrCzR,MAAO,EACP0R,IAAKH,EACLI,SAAU,EACVC,UAAW,IACXC,SAAU,IALJC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAOXC,EAAcC,kBAAOF,GAM3B,OAJAG,sBAAU,WACRF,EAAYzP,QAAQgP,KACnB,CAACA,EAAcS,IAGhB,gBAACrB,GAAD,WACE,eAACE,GAAD,UACE,eAACC,GAAD,UAAQrb,EAAE,iBAAkB,CAAE0c,MAAO,YAEvC,gBAAClB,GAAD,WACE,iCACE,eAAC,GAAD,UAAS1I,IACT,gBAAC,GAAD,eAAUuJ,EAAV,YAEF,eAAC,KAAD,CACEvK,UAAWuB,GAAYxC,IAAcyC,EACrCxT,QAAO,wBAAE,uBAAAiS,EAAA,6DACPjB,GAAa,GADN,SAED0C,IAFC,OAGP1C,GAAa,GAHN,2CAKT4G,GAAG,MAPL,SASG1X,EAAE,oBCjCPmS,GAAoB3S,WAAOC,IAAV,+CAoIRgc,GAhI8C,SAAC,GAOvD,IANLlJ,EAMI,EANJA,IACA8B,EAKI,EALJA,SACAC,EAII,EAJJA,YACAwE,EAGI,EAHJA,WACAP,EAEI,EAFJA,MACAoE,EACI,EADJA,QAEQ3c,EAAMC,eAAND,EACAsT,EAAYC,0BAAZD,QACR,EAAkD5C,qBAAS,GAA3D,oBAAOwD,EAAP,KAA0BC,EAA1B,KACA,EAAmDI,aAAYhC,GAAvDiC,EAAR,EAAQA,UAAWlC,EAAnB,EAAmBA,aAAcD,EAAjC,EAAiCA,cACzBG,EAAYC,aAASF,GAArBC,QACAE,EAAcC,aAAWJ,GAAzBG,UACFqC,EAAOC,eAEPJ,EACJtB,GAAWkB,GAAaA,EAAUK,cAAc,IAAML,EAAUM,uBAAuBxC,GAEnFmC,EAAYH,EAAY8E,MACxBP,EAAwBtY,aAAyB,CACrDC,mBAAoBsY,EAAWC,QAC/BtY,eAAgB8X,EAAMQ,UAElBjK,EAAe,UAAMkK,KAAN,YAAgCH,GAC/CjG,EAAmBC,aAAiBR,GACpCS,EAAiBF,EAAiBG,iBAExC,EAA2BC,cACzB,eAAC,GAAD,CAAc3G,IAAKiG,EAAc/B,UAAWiC,EAAS/B,UAAW4D,EAAUvF,gBAAiBA,KADtFmE,EAAP,qBAGA,EAA4BD,cAAS,eAAC,GAAD,CAAe3G,IAAKgG,EAAe9B,UAAWmC,EAAWjC,UAAW4D,KAAlGnB,EAAP,qBAEM+B,EAAaC,aAAiBT,EAAWM,GAE/C,EAA4BiH,sBAAW,CACrCzR,MAAO,EACP0R,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAASC,MAAMvK,GAAe5S,IAAI,MAAMuX,WAC7CkF,SAAU,EACVC,UAAW,IACXC,SAAU,IALJC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAQXC,EAAcC,kBAAOF,GAE3BG,sBAAU,WACRF,EAAYzP,QAAZ,OAAoB6P,QAApB,IAAoBA,OAApB,EAAoBA,EAASC,MAAMvK,GAAe5S,IAAI,MAAMuX,cAC3D,CAAC3E,EAAesK,EAASJ,IAE5B,IAAQpH,EAAcC,aAAWH,GAAzBE,UAEFE,EAAgBlE,uBAAW,wBAAC,uBAAAY,EAAA,sEAE9BoC,GAAqB,GAFS,SAGxBgB,IAHwB,OAI9BhB,GAAqB,GAJS,gDAM9BmB,QAAQC,MAAR,MAN8B,yDAQ/B,CAACJ,IAEJ,OAAK7B,EAaDsB,EACEhC,EAEA,gBAACsI,GAAD,WACE,gBAACE,GAAD,WACE,gBAACC,GAAD,WAAQhH,EAAR,OACA,eAACkH,GAAD,UAASvb,EAAE,eAEb,gBAACwb,GAAD,WACE,iCACE,eAAC,GAAD,UAAS1I,IACT,gBAAC,GAAD,eAAmBuJ,EAAnB,YAEF,gBAAC,GAAD,WACE,eAAC,KAAD,CAAYhM,QAAQ,YAAYvQ,QAASoT,EAAmBC,GAAG,MAA/D,SACE,eAAC,KAAD,CAAW/S,MAAM,UAAUyR,MAAM,WAEnC,eAAC,KAAD,CAAYxB,QAAQ,YAAYvQ,QAASmT,EAAzC,SACE,eAAC,KAAD,CAAS7S,MAAM,UAAUyR,MAAM,oBASzC,gBAACqJ,GAAD,WACE,eAACE,GAAD,UACE,gBAACG,GAAD,WAASvb,EAAE,iBAAkB,CAAE0R,OAAQ2C,IAAvC,SAEF,eAACmH,GAAD,UACE,eAAC,KAAD,CAAQ3J,MAAM,OAAO/R,QAASmT,EAAkB5C,QAAQ,UAAxD,SACGrQ,EAAE,mBAQX,gBAACkb,GAAD,WACE,eAACE,GAAD,UACE,eAACG,GAAD,UAASvb,EAAE,mBAEb,eAACwb,GAAD,UACE,eAAC,KAAD,CAAQ3J,MAAM,OAAOC,SAAUoC,EAAmBpU,QAASuV,EAAehF,QAAQ,UAAlF,SACGrQ,EAAE,iBA1DP,gBAACkb,GAAD,WACE,eAACE,GAAD,UACE,eAACG,GAAD,UAASvb,EAAE,qBAEb,eAACwb,GAAD,UACE,eAAC3H,GAAA,EAAD,CAAchC,MAAM,eC/ExB1Q,GAAY3B,WAAOC,IAAV,2MACC,qBAAGC,MAAkBC,OAAOoB,cAMxC,qBAAGrB,MAAkB6P,aAAasN,MAMhCvO,GAAqB9O,mBAAO+O,KAAP/O,CAAH,iGAEb,qBAAGE,MAAkBC,OAAOqB,QAG3B,qBAAGtB,MAAkBC,OAAO2b,WAIlCwB,GAAiBtd,WAAOC,IAAV,2KACT,qBAAGC,MAAkBC,OAAOqB,QAKnC,qBAAGtB,MAAkB6P,aAAaC,MAKhCuN,GAAgBvd,WAAOC,IAAV,mRAKf,qBAAGC,MAAkB6P,aAAaC,MAgBhC0L,GAAkB1b,WAAOC,IAAV,qLAIjB,qBAAGC,MAAkB6P,aAAaC,MAQhCwN,GAAgBxd,WAAOC,IAAV,kDAIbwd,GAAiBzd,WAAOC,IAAV,oFAGhB,qBAAGC,MAAkB6P,aAAasN,MAKhCK,GAAe1d,WAAOC,IAAV,8HAqEH0d,GA9DgD,SAAC,GAMzD,IALLC,EAKI,EALJA,QAGA1N,EAEI,EAFJA,WACA8I,EACI,EADJA,UAEMvE,EAAOmJ,EAELpd,EAAMC,eAAND,EACA8Y,EAA4B7E,EAA5B6E,WAAYP,EAAgBtE,EAAhBsE,MAAOI,EAAS1E,EAAT0E,KACrB9J,EAAUoF,EAAKI,UAAYJ,EAAKI,SAASgJ,QAAQ,SAAU,IAC3DxE,EAAwBtY,aAAyB,CACrDC,mBAAoBsY,EAAWC,QAC/BtY,eAAgB8X,EAAMQ,UAElBtE,EAAYR,EAAKK,YAAY8E,MAC7BkE,EAAI,2CAAuC7I,GAC3C8I,EAAI,+CAA2C9I,GAC/C9E,EAAkB0I,KAAeC,SAASC,EAAM7G,QAEtD,OACE,gBAAC,GAAD,WACE,gBAACsL,GAAD,WACE,eAACF,GAAD,UACE,eAAC,GAAD,CAAoB7N,KAAI,eAAU4J,GAAlC,SACG7Y,EAAE,eAAgB,CAAE0R,OAAQ7C,QAGjC,eAAC,GAAD,CAAoBI,KAAMqO,EAA1B,SAAiCtd,EAAE,mBACnC,eAAC,GAAD,CAAoBiP,KAAMsO,EAA1B,SAAiCvd,EAAE,mBACnC,gBAAC+c,GAAD,WACGpN,EAAkB,eAAC,KAAD,IAAmB,eAAC,KAAD,IACrCgJ,EAAO,eAAC,KAAD,IAAc,WAG1B,gBAACsE,GAAD,WASE,gBAACC,GAAD,WACE,eAAC,MAAD,UAAOld,EAAE,gBACT,eAAC,GAAD,gBAAgB0P,OAElB,gBAACwN,GAAD,WACE,eAAC,MAAD,UAAOld,EAAE,eACT,eAAC,GAAD,gBAAewY,UAGnB,gBAAC,GAAD,WACE,eAAC,GAAD,gBAAmBvE,IACnB,eAACuJ,GAAD,gBAAkBvJ,W,UCrJpBwJ,GAAeje,WAAOC,IAAV,+GAOZie,GAAcle,mBAAOme,KAAPne,CAAH,2OASb,qBAAGE,MAAkB6P,aAAaiK,MAIlC,qBAAG9Z,MAAkB6P,aAAaC,MAKhCoO,GAAUpe,mBAAOkX,MAAPlX,CAAH,qDAIPqe,GAAqBre,WAAOC,IAAV,oNAEF,SAACoC,GAAD,OAAWA,EAAMnC,MAAMC,OAAOme,eAGvC,SAACjc,GAAD,OAAWA,EAAMnC,MAAMqe,QAAQ,MAgD7BC,GAzC+B,SAAC,GAA8B,IAA5BxN,EAA2B,EAA3BA,UAAW+B,EAAgB,EAAhBA,IAAK0L,EAAW,EAAXA,KAC/D,EAAoBvN,oBAAS,IAA7B,oBAAOwN,EAAP,KAAWC,EAAX,KACQne,EAAMC,eAAND,EAER,EZ0EmC,WACnC,MAA8B0Q,qBAAS,GAAvC,oBAAO0N,EAAP,KAAgBC,EAAhB,KACQ/K,EAAYC,0BAAZD,QACFgL,EAAWC,eAoBjB,MAAO,CAAEC,iBAlBgBrN,uBAAW,yCAClC,WAAOsN,EAASC,EAAWnM,GAA3B,gBAAAR,EAAA,sEAEIsM,GAAW,GAFf,SAGqBC,EAASK,QAAQC,WAAWC,eAAsBJ,EAASC,EAAWnM,GAAKuM,KAAK,CAC/FvZ,KAAM+N,IAJZ,cAGUyL,EAHV,OAMIV,GAAW,GANf,kBAOWU,GAPX,uCASIzJ,QAAQC,MAAM,6BAAd,MACA8I,GAAW,GAVf,mBAWW,GAXX,yDADkC,0DAelC,CAAC/K,EAASgL,IAGeF,WYjGsBY,GAAzCR,EAAR,EAAQA,iBAA2B3N,EAAnC,EAA0BuN,QAClB/L,EAAkBkC,aAAYhC,GAA9BF,cAEAiB,EAAYC,0BAAZD,QACF2L,EAAqBV,eAErBW,EAAS,yCAAG,uBAAAnN,EAAA,sEACIkN,EAAmBN,QAAQQ,SAAS7L,EAASf,GAAK7O,OADtD,UAIQ,+CAJR,OAINua,EAAO,GAJD,uBAKdzN,IALc,0CAQVgO,EAAiBN,EAAID,EAAM1L,GARjB,OAShB/B,IATgB,2CAAH,qDAYf,OACE,gBAAC,KAAD,CAAOc,MAAOtR,EAAE,kBAAmBwQ,UAAWA,EAA9C,UACG6B,EAAc+M,GAAG,IAAM,eAACxB,GAAD,UAAU5d,EAAE,4DACpC,gBAACyd,GAAD,WACE,eAAC,MAAD,UAAOzd,EAAE,YACT,eAAC0d,GAAD,CAAa1a,MAAOkb,EAAIzM,SAAU,SAACnN,GAAD,OAAO6Z,EAAM7Z,EAAE1C,OAAOoB,aAE1D,gBAAC6a,GAAD,WACE,eAAC,KAAD,CAAQxN,QAAQ,YAAYvQ,QAAS0Q,EAAWqB,MAAM,OAAtD,SACG7R,EAAE,YAEL,eAAC,KAAD,CAAQ6R,MAAM,OAAOC,SAAUjB,IAAcqN,GAAM7L,EAAc+M,GAAG,GAAItf,QAASof,EAAjF,SACelf,EAAZ6Q,EAAc,uBAA4B,oBChF/C1P,GAAY3B,WAAOC,IAAV,wPACC,qBAAGC,MAAkBC,OAAOoB,cAOxC,qBAAGrB,MAAkB6P,aAAasN,MAOhCG,GAAgBxd,WAAOC,IAAV,8QAcb4f,GAAe7f,WAAOC,IAAV,mQAaZ6f,GAAS9f,mBAAOuU,KAAPvU,CAAH,oNAYN+f,GAAY/f,WAAOggB,IAAV,wFAuFAC,GA/D8C,SAAC,GAA0C,IAAxClN,EAAuC,EAAvCA,IAAKqC,EAAkC,EAAlCA,WAAY8K,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACjF3f,EAAMC,eAAND,EAEFwa,GADWC,gBAATC,KAGApH,EAAYC,0BAAZD,QACR,EAA0BsM,eAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,cAAeH,EAAOC,GAAhDC,sBAER,EbjDgC,WAChC,MAA8BrP,qBAAS,GAAvC,oBAAO0N,EAAP,KAAgBC,EAAhB,KACQ/K,EAAYC,0BAAZD,QACFgL,EAAW2B,eAiBjB,MAAO,CAAE5K,cAfalE,uBAAW,wBAAC,6BAAAY,EAAA,sEAE9BsM,GAAW,GAFmB,SAGbC,EAASK,QAAQuB,kBAAkBC,gBAAwB,GAAMrB,KAAK,CACrFvZ,KAAM+N,IAJsB,cAGxByL,EAHwB,OAM9BV,GAAW,GANmB,kBAOvBU,GAPuB,uCAS9BzJ,QAAQC,MAAM,6BAAd,MACA8I,GAAW,GAVmB,mBAWvB,GAXuB,yDAa/B,CAAC/K,EAASgL,IAEWF,Wa6B2BgC,GAA3C/K,EAAR,EAAQA,cAAwBgL,EAAhC,EAAuBjC,QACvB,Eb8DoC,WACpC,MAA8B1N,qBAAS,GAAvC,oBAAO0N,EAAP,KAAgBC,EAAhB,KACQ/K,EAAYC,0BAAZD,QACFgL,EAAWC,eAoBjB,MAAO,CAAE+B,kBAlBiBnP,uBAAW,yCACnC,WAAOuN,EAAWnM,GAAlB,gBAAAR,EAAA,sEAEIsM,GAAW,GAFf,SAGqBC,EAASK,QAAQ4B,YAAY7B,EAAWnM,GAAKuM,KAAK,CACjEvZ,KAAM+N,IAJZ,cAGUyL,EAHV,OAMIV,GAAW,GANf,kBAOWU,GAPX,uCASIzJ,QAAQC,MAAM,8BAAd,MACA8I,GAAW,GAVf,mBAWW,GAXX,yDADmC,wDAenC,CAAC/K,EAASgL,IAGgBF,WarF2BoC,GAA/CF,EAAR,EAAQA,kBAA4BG,EAApC,EAA2BrC,QAE3B,EAAmBpL,cAAS,eAAC,GAAD,CAAYT,IAAKA,EAAK0L,KAAM,KAAjDyC,EAAP,qBACA,EAAmB1N,cAAS,eAAC,GAAD,CAAYT,IAAKA,EAAK0L,KAAM,KAAjD0C,EAAP,qBACA,EAAmB3N,cAAS,eAAC,GAAD,CAAYT,IAAKA,EAAK0L,KAAM,KAAjD2C,EAAP,qBAEMC,EAAU,yCAAG,WAAOC,GAAP,UAAA/O,EAAA,yDACZuB,EADY,uBAEfyM,IAFe,6BAKZnL,EALY,gCAMTS,IANS,4CASbqK,EAASoB,EAAU,GATN,kCAUTR,EAAkBQ,EAASvO,GAVlB,0CAcD,IAAZuO,EACFJ,IACqB,IAAZI,EACTH,IACqB,IAAZG,GACTF,IAnBe,4CAAH,sDAuBhB,OACE,gBAAC,GAAD,WACE,gBAAC,GAAD,YACIpG,GAAY,gBAAC,MAAD,WAAOxa,EAAE,qCAAT,mBACd,eAAC,MAAD,UAAOA,EAAE,mBACT,gBAAC,MAAD,WAAO2f,EAAP,UAEF,eAACN,GAAD,UACG,CAAC,EAAG,EAAG,GAAG1Y,KAAI,SAACrC,GAAD,OACb,eAACgb,GAAD,CAAgBxN,SAAUuO,GAAkBI,EAAgB3gB,QAAS,kBAAM+gB,EAAWvc,IAAtF,SACGob,GAAYA,EAASpb,EAAI,GACxB,eAAClD,GAAA,EAAD,CAASC,QAAO,oBAAeqe,EAASpb,EAAI,IAA5C,SACE,eAACib,GAAD,CAAWvP,KAlEXkO,EAkEuBrR,OAAO6S,EAASpb,EAAI,IAjErD4Z,GAAM,IACF,GAAN,OALY,2FAKZ,YAAqBA,EAArB,QAGI,GAAN,OAPe,2FAOf,YAAsBA,EAAtB,SA6D+D/N,IAAI,OAGvD,4CANS7L,GA/DR,IAAC4Z,WCtEV6C,GAAQvhB,WAAOC,IAAV,uFAEA,qBAAGC,MAAkBC,OAAOC,cAIjCohB,GAAmBxhB,WAAOC,IAAV,8FAmBPwhB,GAT+B,SAAC,GAA8B,IAAD,IAA3BnH,aAA2B,MAAnB,GAAmB,EAAfxY,EAAe,EAAfA,SAC3D,OACE,iCACGwY,GAAS,eAACiH,GAAD,UAAQjH,IAClB,eAACkH,GAAD,UAAmB1f,Q1BOZ4f,GAAwC,CACnD,CACEhD,GAAI,EACJtY,KAAM,OACNub,cAAe,IACfC,UAAU,EACVtH,MAAO,IAET,CACEoE,GAAI,EACJtY,KAAM,SACNub,cAAe,KACfC,UAAU,EACVtH,MAAO,UAET,CACEoE,GAAI,EACJtY,KAAM,MACNub,cAAe,IACfC,UAAU,EACVtH,MAAO,OAgBT,CACEoE,GAAI,EACJtY,KAAM,UACNub,cAAe,IACfC,UAAU,EACVtH,MAAO,KAIEuH,GAAyC,CACpD,CACEnD,GAAI,EACJtY,KAAM,OACNub,cAAe,IACfC,UAAU,EACVtH,MAAO,IAET,CACEoE,GAAI,EACJtY,KAAM,SACNub,cAAe,KACfC,UAAU,EACVtH,MAAO,UAET,CACEoE,GAAI,EACJtY,KAAM,MACNub,cAAe,IACfC,UAAU,EACVtH,MAAO,OAgBT,CACEoE,GAAI,EACJtY,KAAM,YACNub,cAAe,IACfC,UAAU,EACVtH,MAAO,aAET,CACEoE,GAAI,EACJtY,KAAM,aACNub,cAAe,IACfC,UAAU,EACVtH,MAAO,cAET,CACEoE,GAAI,EACJtY,KAAM,UACNub,cAAe,IACfC,UAAU,EACVtH,MAAO,M,SAICzL,K,cAAAA,E,aAAAA,Q,K2BxGZ,I,2EAAMiT,GAAQ,CACZzK,QAAS8C,GACT7C,OAAQ6C,GACR1F,KAAM4F,GACNI,OAAQC,GACRkD,QAAS9C,GACT5K,WAAYkL,GACZpC,UAAWwC,IAGPuG,GAAY/hB,WAAOC,IAAV,gLAOX,qBAAGC,MAAkB6P,aAAa4L,MAKhCqG,GAAWhiB,WAAOiiB,GAAV,oFAEe,qBAAG/hB,MAAkBC,OAAOmY,eAGnD4J,GAAmBliB,WAAOmiB,GAAV,6DAIhBC,GAAgBpiB,WAAOmiB,GAAV,8EAKbE,GAAiBriB,WAAOmiB,GAAV,qDAoJLG,GAhJgC,SAACjgB,GAC9C,IAAQub,EAAkBvb,EAAlBub,QAASnJ,EAASpS,EAAToS,KACjB,EAAoDvD,qBAAS,GAA7D,oBAAO6J,EAAP,KAA2BwH,EAA3B,KACQ/hB,EAAMC,eAAND,EAEFgiB,EAAoB,WACxBD,GAAuBxH,IAGzB,EAAuBE,gBAAfC,EAAR,EAAQA,KAAMuH,EAAd,EAAcA,KAGRC,GADYxH,EACawG,GAAqBG,GAC9Cc,EAAcD,EAAYvb,KAAI,SAACyb,GAAD,OAAYA,EAAOxc,QAE/CgP,EfzEgB,WACxB,MAA8BlE,oBAAS,GAAvC,oBAAO2R,EAAP,KAAgBC,EAAhB,KACA,EAAoC5R,qBAAS,GAA7C,oBAAOkE,EAAP,KAAmB2N,EAAnB,KAEQC,EAAgBC,eAAhBD,YACAlP,EAAYC,0BAAZD,QAyBR,OAvBAmJ,sBAAU,YACa,yCAAG,+BAAA1K,EAAA,mEAEhBuB,EAFgB,wBAGZoP,EAAQ,CACZ,CAAE3J,QAAS8F,eAAsBjZ,KAAM,YAAa+c,OAAQ,CAACrP,IAC7D,CAAEyF,QAAS8F,eAAsBjZ,KAAM,mBAAoB+c,OAAQ,CAACrP,EAAS6M,kBAL7D,SAOCyC,aAAUC,GAAQH,GAPnB,OAOZI,EAPY,OAQlBR,EAAWQ,EAAK,GAAG,GAAGze,YACtBke,EAAcO,EAAK,GAAG,IATJ,wBAWlBR,EAAW,GACXC,GAAc,GAZI,0DAepBjN,QAAQC,MAAM,8BAAd,MAfoB,0DAAH,oDAmBrBwN,KACC,CAACP,EAAalP,IAEV,CACL+O,UACAzN,ceyCqBoO,GAAfpO,WACR,Eff+B,WAC/B,MAAsClE,oBAAS,IAA/C,oBAAOuS,EAAP,KAAoBC,EAApB,KACA,EAA4BxS,oBAAS,IAArC,oBAAOyS,EAAP,KAAeC,EAAf,KAEQZ,EAAgBC,eAAhBD,YACAlP,EAAYC,0BAAZD,QAoDR,OAlDAmJ,sBAAU,YACa,yCAAG,qDAAA1K,EAAA,mEAEhBuB,EAFgB,iBAIlB,IADMoP,EAAQ,GACL5gB,EAAI,EAAGA,EAAIuX,GAAKtX,OAAQD,IAC/B4gB,EAAMW,KAAK,CAAEtK,QAASoH,eAAwBva,KAAM,WAAY+c,OAAQ,CAACrP,EAAS+F,GAAKvX,MAEzF,IAASA,EAAI,EAAGA,EAAIuX,GAAKtX,OAAQD,IAC/B4gB,EAAMW,KAAK,CAAEtK,QAASoH,eAAwBva,KAAM,cAAe+c,OAAQ,CAACrP,EAAS+F,GAAKvX,MAE5F,IAASA,EAAI,EAAGA,EAAIuX,GAAKtX,OAAQD,IAC/B4gB,EAAMW,KAAK,CAAEtK,QAASoH,eAAwBva,KAAM,WAAY+c,OAAQ,CAACrP,EAAS+F,GAAKvX,MAXvE,gBAcC8gB,aAAUU,GAAeZ,GAd1B,OAiBlB,IAHMI,EAdY,OAgBZS,EAAe,GACZzhB,EAAI,EAAGA,EAAIuX,GAAKtX,OAAQD,IAAK,CAIpC,IAHM0hB,EAAYV,EAAKhhB,GACjB2hB,EAAUX,EAAKzJ,GAAKtX,OAASD,GAC7B4hB,EAAM,GACHC,EAAI,EAAGA,EAAI,EAAGA,IACA,+CAAjBH,EAAUG,GACZD,EAAIL,KAAKI,EAAQE,GAAGtf,YAEpBqf,EAAIL,UAAKld,GAGbod,EAAalK,GAAKvX,IAAM4hB,EAK1B,IAHAR,EAAeK,GAETK,EAAU,GACP9hB,EAAI,EAAGA,EAAIuX,GAAKtX,OAAQD,IAC/B8hB,EAAQvK,GAAKvX,IAAMghB,EAAK,EAAIzJ,GAAKtX,OAASD,GAAG,GAAGuC,WAElD+e,EAAUQ,GApCQ,wBAsClBV,EAAe,IACfE,EAAU,IAvCQ,0DA0CpB9N,QAAQC,MAAM,+BAAd,MA1CoB,0DAAH,oDA8CrBwN,KACC,CAACP,EAAalP,IAEV,CACL2P,cACAE,Ue5C8BU,GAAxBZ,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,OA4GrB,OACE,uCA3GsB,WAAO,IAAD,IAC5B,OAAKlB,EAmEH,gBAACT,GAAD,CAAU1hB,QAASkiB,EAAnB,UACE,gCACE,8BACE,eAACH,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,gBAAUhgB,EAAMoS,aAItB,sBAAIjC,MAAO,CAAEiH,QAAS,OAAQlK,eAAgB,gBAA9C,UACE,eAAC2S,GAAD,UACE,eAAC,GAAD,CAAY5H,MAAO9Z,EAAE,UAArB,SACE,eAAC,GAAD,gBAAY6B,EAAMoY,aAGtB,eAAC2H,GAAD,UACE,eAAC,GAAD,CAAY9H,MAAO9Z,EAAE,YAArB,SACE,eAAC,GAAD,CAAK0Z,IAAG,OAAE7X,QAAF,IAAEA,GAAF,UAAEA,EAAO6X,WAAT,aAAE,EAAY7C,cAG1B,eAAC+K,GAAD,UACE,eAAC,GAAD,CAAY9H,MAAO9Z,EAAE,cAArB,SACE,eAAC,GAAD,CAAK0Z,IAAG,OAAE7X,QAAF,IAAEA,GAAF,UAAEA,EAAO6X,WAAT,aAAE,EAAY5C,mBAK9B,8BACE,eAACyK,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAShH,mBAAoBA,aA/FnC,eAACiH,GAAD,CAAU1hB,QAASkiB,EAAnB,SACG5f,OAAO0hB,KAAKjiB,GAAO8E,KAAI,SAACrE,GACvB,IAAMyhB,EAAc5B,EAAY6B,QAAQ1hB,GACxC,IAAqB,IAAjByhB,EACF,OAAO,KAGT,OAAQzhB,GACN,IAAK,UACH,OACE,8BACE,eAACif,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAShH,mBAAoBA,SAH1BjY,GAQb,IAAK,MACH,OACE,8BACE,eAACif,GAAD,UACE,eAAC,GAAD,CAAYzH,MAAO9Z,EAAE,oBAArB,SACE,eAAC,GAAD,CAAU0Z,IAAK7X,EAAM6X,IAAIA,IAAK7C,QAAShV,EAAM6X,IAAI7C,QAASC,OAAQjV,EAAM6X,IAAI5C,cAHzExU,GAQb,IAAK,UACH,OACE,8BACE,eAACif,GAAD,UACE,eAAC,GAAD,CAAYzH,MAAO9Z,EAAE,YAArB,SACE,eAAC,GAAD,CAAK0Z,IAAK7X,EAAMgV,eAHbvU,GAQb,IAAK,SACH,OACE,8BACE,eAACif,GAAD,UACE,eAAC,GAAD,CAAYzH,MAAO9Z,EAAE,cAArB,SACE,eAAC,GAAD,CAAK0Z,IAAK7X,EAAMiV,cAHbxU,GAQb,QACE,OACE,8BACE,eAACif,GAAD,UACE,eAAC,GAAD,CAAYzH,MAAO9Z,EAAEkiB,EAAY6B,GAAajK,OAA9C,SACGmK,KAAMzW,cAAc8T,GAAMhf,GAAMT,EAAMS,SAHpCA,SAuDpB4hB,GACA3J,GAAsB6C,GACrB,8BACE,sBAAI+G,QAAS,EAAb,UACE,eAAC,GAAD,gBAAiBtiB,IACjB,eAAC,GAAD,CACE0Q,IAAK0B,EAAK1B,IACVmN,SAAUuD,EAAYhP,EAAK1B,KAC3BoN,MAAOwD,EAAOlP,EAAK1B,KACnBqC,WAAYA,aChMpBzT,GAAY3B,WAAOC,IAAV,gIACH,qBAAGC,MAAkBkY,KAAKwM,cAEtB,qBAAG1kB,MAAkBkY,KAAK7W,cAKpCsjB,GAAe7kB,WAAOC,IAAV,0GAQZ6kB,GAAc9kB,WAAO+kB,MAAV,qKASXC,GAAYhlB,WAAOilB,MAAV,sHASTC,GAAiBllB,WAAOC,IAAV,sDAIdklB,GAAwBnlB,WAAOC,IAAV,0HA2CZmlB,GApC0B,SAAC/iB,GACxC,IAAMgjB,EAAiBrI,kBAAuB,MACtCxc,EAAMC,eAAND,EACA8iB,EAAkBjhB,EAAlBihB,KAAMgC,EAAYjjB,EAAZijB,QAENC,EAASC,cAASF,EAAShC,EAAM,CAAE1B,UAAU,EAAM6D,WAAY,SAA/DF,KAQR,OACE,eAAC,GAAD,UACE,gBAACL,GAAD,WACE,eAACL,GAAD,CAAc5W,IAAKoX,EAAnB,SACE,eAACP,GAAD,UACE,eAACE,GAAD,UACGO,EAAKpe,KAAI,SAACue,GACT,OAAO,yBAAC,GAAD,6BAASA,EAAIC,UAAb,IAAuB7iB,IAAG,oBAAe4iB,EAAIhH,gBAK5D,eAACyG,GAAD,UACE,gBAAC,KAAD,CAAQtU,QAAQ,OAAOvQ,QAnBX,WAClB+kB,EAAe/X,QAAQsY,eAAe,CACpCC,SAAU,YAiBN,UACGrlB,EAAE,UACH,eAAC,KAAD,CAAeI,MAAM,uB,oBC1DlBklB,GAtBQ,WACrB,MAAyBC,eAAjBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,QACLzlB,EAAMC,eAAND,EAER,OACE,eAAC,GAAD,UACE,gBAAC,KAAD,CAAY0lB,YAAaD,EAAU,EAAI,EAAGhO,MAAM,KAAKpH,QAAQ,UAA7D,UACE,eAAC,KAAD,CAAgBsV,GAAIC,KAAMC,GAAE,UAAKL,GAAOxT,MAAO,CAAE8T,aAAc,OAAQjU,MAAO,QAASkU,WAAY,KAAnG,SACG/lB,EAAE,UAEL,eAAC,KAAD,CACE2lB,GAAIC,KACJC,GAAE,UAAKL,EAAL,YACFxT,MAAO,CAAE8T,aAAc,OAAQjU,MAAO,QAASmU,WAAY,EAAGD,WAAY,KAH5E,SAKG/lB,EAAE,oBASPT,GAAUC,WAAOC,IAAV,8MAUT,qBAAGC,MAAkB6P,aAAaC,MCnChCkO,GAAcle,mBAAOme,KAAPne,CAAH,uIAGN,qBAAGE,MAAkBC,OAAOC,cAMjC6d,GAAeje,WAAOC,IAAV,4GAEd,qBAAGC,MAAkB6P,aAAaC,MAMhCrO,GAAY3B,WAAOC,IAAV,6BA2BAwmB,GApBsB,SAAC,GAAyB,IAAvBjjB,EAAsB,EAAtBA,MAAOyO,EAAe,EAAfA,SAC7C,EAA8Bf,qBAAS,GAAvC,oBAAO2J,EAAP,KAAgB6L,EAAhB,KACMC,EAAU3J,kBAAO,MACfxc,EAAMC,eAAND,EAER,OACE,eAAC,GAAD,CAAWqa,QAASA,EAApB,SACE,eAAC,GAAD,UACE,eAAC,GAAD,CACE5M,IAAK0Y,EACLnjB,MAAOA,EACPyO,SAAUA,EACV2U,YAAapmB,EAAE,gBACfqmB,OAAQ,kBAAMH,GAAW,WChC7B/kB,GAAY3B,WAAOC,IAAV,0FAGX,qBAAGC,MAAkB6P,aAAaC,MAwBvB8W,GAnB8C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClEC,EAAe,SAACC,GAChBH,IAAaG,GACfF,EAASE,IAIb,OACE,gBAAC,GAAD,WACE,eAAC,KAAD,CAAYrW,QAAQ,OAAOoH,MAAM,KAAK3X,QAAS,kBAAM2mB,EAAapY,GAASsY,OAA3E,SACE,eAAC,KAAD,CAAcvmB,MAAOmmB,IAAalY,GAASsY,KAAO,UAAY,mBAEhE,eAAC,KAAD,CAAYtW,QAAQ,OAAOoH,MAAM,KAAK3X,QAAS,kBAAM2mB,EAAapY,GAASuY,QAA3E,SACE,eAAC,KAAD,CAAcxmB,MAAOmmB,IAAalY,GAASuY,MAAQ,UAAY,uBC3BjEC,GAAiBrnB,WAAOC,IAAV,iSAOJ,qBAAGC,MAAkBonB,QAAQC,SACvB,qBAAGrnB,MAAkBC,OAAOmY,eAElC,qBAAGpY,MAAkBC,OAAOqnB,SAItCC,GAAwBznB,WAAOC,IAAV,2SAKX,qBAAGC,MAAkBC,OAAOoB,cAC/B,qBAAGrB,MAAkBuB,SAASimB,YAMvC,qBAAGxnB,MAAkB6P,aAAaC,MAKhC2X,GAAoB3nB,WAAOC,IAAV,yUAEZ,qBAAGoS,SAEE,qBAAGnS,MAAkBC,OAAOqnB,SAKxC,qBAAGtnB,MAAkB6P,aAAaC,MAIlC,SAAC3N,GAAD,OACAA,EAAMulB,QACNC,eADA,kYAEIR,IAC2B,qBAAGnnB,MAAkBC,OAAO2nB,kBACzC,qBAAG5nB,MAAkBoB,QAAQymB,YAI3CN,IAIoB,qBAAGvnB,MAAkBC,OAAO2nB,kBAGlC,qBAAG5nB,MAAkBoB,QAAQymB,gBAY7CC,GAAehoB,WAAOioB,GAAV,wGAIL,qBAAG/nB,MAAkBuB,SAASimB,YAGrCQ,GAAWloB,WAAOmoB,GAAV,kHAII,qBAAGjoB,MAAkBC,OAAO2nB,kBA8D/BM,GAhDsC,SAAC,GAA2B,IAAzBzgB,EAAwB,EAAxBA,QAASsK,EAAe,EAAfA,SACzDoW,EAAerL,kBAAO,MACtBsL,EAActL,kBAAO,MAC3B,EAA4B9L,qBAAS,GAArC,oBAAO0W,EAAP,KAAeW,EAAf,KACA,EAA4CrX,oBAASvJ,EAAQ,IAA7D,oBAAO6gB,EAAP,KAAuBC,EAAvB,KACA,EAA0CvX,oBAAS,CAAEmB,MAAO,EAAGqH,OAAQ,IAAvE,oBAAOgP,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,kBAAML,GAAWX,IAE5BiB,EAAkB,SAACC,GAAD,OAAyB,WAC/CL,EAAkBK,GAClBP,GAAU,GAENtW,GACFA,EAAS6W,KAWb,OAPA7L,sBAAU,WACR0L,EAAiB,CACftW,MAAOiW,EAAYhb,QAAQyb,YAC3BrP,OAAQ4O,EAAYhb,QAAQ0b,iBAE7B,IAGD,gBAACrB,GAAD,2BAAmBC,OAAQA,EAAQ3Z,IAAKoa,GAAkBK,GAA1D,cAC2B,IAAxBA,EAAcrW,OACb,eAACgV,GAAD,CAAgB/mB,QAASsoB,EAAzB,SACE,eAAC,MAAD,CAAMhoB,MAAM,aAAZ,SAA0B4nB,EAAelO,UAG7C,eAAC,KAAD,CAAmB1Z,MAAM,OAAON,QAASsoB,IACzC,eAACnB,GAAD,UACE,eAACO,GAAD,CAAc/Z,IAAKqa,EAAnB,SACG3gB,EAAQR,KAAI,SAAC2hB,GAAD,OACXA,EAAOxO,QAAUkO,EAAelO,MAC9B,eAAC4N,GAAD,CAAU5nB,QAASuoB,EAAgBC,GAAnC,SACE,eAAC,MAAD,CAAMloB,MAAM,aAAZ,SAA0BkoB,EAAOxO,SADcwO,EAAOxO,OAGtD,iBC9GV2O,GAAmBjpB,WAAOC,IAAV,yQASlB,qBAAGC,MAAkB6P,aAAaC,MAOhCkZ,GAAgBlpB,WAAOC,IAAV,qIAKfiX,OAKEiS,GAAenpB,WAAOC,IAAV,oEACZiX,OAKAkS,GAAkBppB,WAAOC,IAAV,iKAMjB,qBAAGC,MAAkB6P,aAAaC,MAMhCqZ,GAAerpB,WAAOC,IAAV,sSAWd,qBAAGC,MAAkB6P,aAAaC,MAUhCsZ,GAAatpB,WAAOC,IAAV,wLAMVspB,GAAkBvpB,WAAOC,IAAV,gNAYfupB,GAAkBxpB,WAAOC,IAAV,4GAIV,qBAAGC,MAAkBC,OAAOqB,QAQjCioB,GAAoB,SAAC,GAAuC,IAArC7hB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACjD,OACE,gBAACyhB,GAAD,WACE,uBAAKhX,MAAO,CAAEiH,QAAS,OAAQ7I,cAAe,MAAO8Y,YAAa,OAAlE,UACE,oBAAGlX,MAAO,CAAEkX,YAAa,OAAzB,SAAmC9hB,IACnC,yCAEF,uBAAK4K,MAAO,CAAEiH,QAAS,OAAQ7I,cAAe,MAAO8Y,YAAa,OAAlE,UACE,oBAAGlX,MAAO,CAAEkX,YAAa,OAAzB,SAAmC7hB,IACnC,0CAEF,uBAAK2K,MAAO,CAAEiH,QAAS,OAAQ7I,cAAe,MAAO8Y,YAAa,OAAlE,UACE,oBAAGlX,MAAO,CAAEkX,YAAa,OAAzB,SAAmC5hB,IACnC,yCAEF,uBAAK0K,MAAO,CAAEiH,QAAS,OAAQ7I,cAAe,MAAO8Y,YAAa,OAAlE,UACE,oBAAGlX,MAAO,CAAEkX,YAAa,OAAzB,SAAmC3hB,IACnC,gDAqUO4hB,GA/TS,WACtB,IAAQC,EAAS7D,eAAT6D,KACAC,EAAaC,eAAbD,SACArpB,EAAMC,eAAND,EACFupB,EAAUC,eACVtT,EAAW2F,eACjB,EAA0BnL,oBAAS,IAAnC,oBAAO+Y,EAAP,KAAcC,EAAd,KACA,EAAgChZ,oBAASrC,GAASuY,OAAlD,oBAAOL,EAAP,KAAiBoD,EAAjB,KACQrW,EAAYC,0BAAZD,QACR,EAAoC5C,oBAAS1Q,EAAE,QAA/C,oBAAO4pB,EAAP,KAAmBC,EAAnB,KACMC,EAASC,eACf,EAAkCrZ,oBAAS,GAA3C,oBAAOsZ,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,eACjB,EAAqC1H,eAA7BD,EAAR,EAAQA,YAAa4H,EAArB,EAAqBA,YACrB3N,sBAAU,WACJnJ,GACF4W,EAASG,aAAuB/W,MAEjC,CAACA,EAAS4W,EAAU1H,IAEvB/F,sBAAU,WACRwN,EAAapiB,KAAK8E,OAAM,IAAIvI,MAAO8H,UAAY,QAC9C,CAACsW,IAEJ,MAAsC9R,qBAAS,GAA/C,oBAAO4Z,EAAP,KAAoBC,EAApB,KAEA,EAA4C7Z,oBAAS,IAArD,oBAAO8Z,EAAP,KAAuBC,EAAvB,KAEAhO,sBAAU,YAEG,yCAAG,6BAAA1K,EAAA,sEACW2Y,KAAMC,IAFP,yDACV,QACNC,EADM,SAEIA,EAASpf,QACvBif,EACEG,EAAS9H,KAAK+H,QAAQlkB,KAAI,SAACmkB,GAAD,MAAkB,CAC1CC,KAAMD,EAAOC,KACbnpB,OAAQkpB,EAAOlpB,OACfopB,OAAQF,EAAOG,iBAAiBC,SAP1B,2CAAH,qDAaXC,KACC,CAACf,IAEJ,IAAMgB,EAAc7B,EAAQ8B,QAAO,SAACpX,GAAD,MAA8B,OAApBA,EAAKvE,cAC5C4b,EAAgB/B,EAAQ8B,QAAO,SAACpX,GAAD,MAA8B,OAApBA,EAAKvE,cAE9C6b,EAAmBH,EAAYC,QACnC,SAACpX,GAAD,OAAUA,EAAKyH,UAAY,IAAIE,KAAU3H,EAAKyH,SAASrJ,eAAewC,cAAc,MAyBhF2W,EAAYra,wBAChB,SAACsa,GACC,IAAIC,EAA+CD,EAAe9kB,KAAI,SAACsN,GACrE,IAAKA,EAAK0X,sBAAwB7B,IAAW7V,EAAK2X,iBAChD,OAAO3X,EAGT,IAAM4X,EAAqB/B,EAAO7V,EAAK6E,WAAWpH,OAAOoJ,eACnDgR,EAAiB,IAAIlQ,KAAU3H,EAAK0X,qBAAqB/O,MAAMiP,GAC/DlP,EAAUmP,EAAersB,IAAIwU,EAAK2X,kBAClC/U,EAAUkV,aAAW9X,EAAK+X,WAAY9V,EAAU4V,EAAgB7X,EAAKgY,gBACrEC,EAAY1B,EAAea,QAC/B,SAAC/mB,GAAD,OACGA,EAAEymB,KAAKjQ,gBAAkB7G,EAAKsE,MAAMQ,QAAQ,MAAM+B,eACjDxW,EAAE1C,OAAOkZ,gBAAkB7G,EAAK6E,WAAWC,QAAQ,MAAM+B,eAC1DxW,EAAEymB,KAAKjQ,gBAAkB7G,EAAK6E,WAAWC,QAAQ,MAAM+B,eACtDxW,EAAE1C,OAAOkZ,gBAAkB7G,EAAKsE,MAAMQ,QAAQ,MAAM+B,iBACxD,GACEhE,EAAS,EAUb,OATIoV,GAAaL,GAAsBA,EAAmBzM,GAAG,KAC3DtI,EACGjK,OAAOqf,EAAUlB,QAChBne,OAAO,IAAI+O,KAAU3H,EAAKkY,kBAAkBvP,MAAM,GAAGA,MAAMiP,GAAoBxnB,YACjF,IACA,IACA,MAGG,6BAAK4P,GAAZ,IAAkB2C,IAAKC,EAAUC,EAAQA,SAAQD,UAAS2B,UAAWsT,EAAgBnP,eAGvF,GAAI8M,EAAO,CACT,IAAM2C,EAAiB3C,EAAM3O,cAC7B4Q,EAAwBA,EAAsBL,QAAO,SAACpX,GACpD,QAAIA,EAAKI,SAASyG,cAAcxC,SAAS8T,MAO7C,OAAOV,IAET,CAACxV,EAAU4T,EAAQL,EAAOe,IAOtB6B,GAAYhD,EAAS/Q,SAAS,WAChCgU,EAAc,GASZC,GAFND,EA/EkB,SAAChT,GACjB,OAAQsQ,GACN,IAAK,UACH,OAAO4C,mBAAQlT,EAAO,UAAW,QACnC,IAAK,SACH,OAAOkT,mBAAQlT,EAAO,SAAU,QAClC,IAAK,aACH,OAAOkT,mBACLlT,GACA,SAACrF,GAAD,OAAgCA,EAAKvE,WAAa7C,OAAOoH,EAAKvE,WAAW/J,MAAM,GAAI,IAAM,IACzF,QAEJ,IAAK,SACH,OAAO6mB,mBAAQlT,GAAO,SAACrF,GAAD,OAAgCA,EAAKyH,SAAWzH,EAAKyH,SAASrI,SAAW,IAAI,QACrG,IAAK,YACH,OAAOmZ,mBAAQlT,GAAO,SAACrF,GAAD,OAA+BpH,OAAOoH,EAAKuE,aAAY,QAC/E,QACE,OAAOc,GA8DCmT,CALZH,EAA4Bd,EAD1Ba,EACY/B,EAAwBiB,EAA8BH,EAE5CE,KAKE3kB,KAAI,SAACsN,GAC/B,IAAMpF,EAAUoF,EAAKI,UAAYJ,EAAKI,SAASpE,MAAM,KAAK,GAAGoN,QAAQ,SAAU,IA8B/E,MA5BsB,CACpBxG,SACG5C,EAAK4C,SAA4B,IAAjB5C,EAAK4C,UAAkB5C,EAAK4C,QAAQ9D,eAAe,QAAS,CAAE0F,sBAAuB,IACxG3B,QAAS7C,EAAK6C,QAA0B,IAAhB7C,EAAK6C,SAAiB7C,EAAK6C,OAAO/D,eAAe,QAAS,CAAE0F,sBAAuB,IAC3GiB,IAAK,CACH7C,QACE5C,EAAK4C,SAA4B,IAAjB5C,EAAK4C,QAAgB5C,EAAK4C,QAAQ9D,eAAe,QAAS,CAAE0F,sBAAuB,IAAO,GAC5G3B,QAAS7C,EAAK6C,QAA0B,IAAhB7C,EAAK6C,SAAiB7C,EAAK6C,OAAO/D,eAAe,QAAS,CAAE0F,sBAAuB,IAC3GiB,KAAMzF,EAAK4C,QAAU5C,EAAK6C,QAAQ/D,eAAe,QAAS,CAAE0F,sBAAuB,KAErFxE,KAAM,CACJyY,MAAOzY,EAAKI,SAASpE,MAAM,KAAK,GAAGC,oBACnC4J,MAAOjL,EACP0D,IAAK0B,EAAK1B,KAEZ0H,OAAQ,CACN5G,SAAUY,EAAKyH,SAAW7I,aAAiB,IAAI+I,KAAU3H,EAAKyH,SAASrI,WAAa,KACpFd,IAAK0B,EAAK1B,KAEZiG,UAAW,CACTA,UAAWvE,EAAKuE,WAElB9I,WAAY,CACVA,WAAYuE,EAAKvE,YAEnB0N,QAASnJ,MAsEb,OACE,uCACE,eAAC0Y,GAAA,EAAD,CACE3c,IAAI,yCACJ4c,UAAU,gDACVzc,IAAI,cACJmB,MAAOtR,EAAE,SACTgB,KAAI,UAAKhB,EAAE,+BAAP,OAGN,eAAC8oB,GAAD,UACE,gBAAC+D,GAAA,EAAD,WACiB,IAAd7C,GAAmBA,GAAa8C,MAC/B,gBAAC/D,GAAD,WACE,eAAC,KAAD,CAASpD,GAAG,KAAKoH,KAAK,KAAK3sB,MAAM,UAAjC,SACGJ,EAAE,2BAEL,+BACE,eAAC,KAAD,CAAWuL,KAAM,IAAInH,KAAK,mCAAoCwJ,SAAUqb,UAQ9E,gBAACR,GAAD,WACE,gBAACI,GAAD,WACE,eAAC,GAAD,CAAYtC,SAAUA,EAAUC,SAAU,SAACE,GAAD,OAAoBiD,EAAYjD,MAC1E,eAAC,GAAD,IACA,gBAACgC,GAAD,WACE,eAAC,MAAD,CAAQsE,QAAS1C,EAAa7Y,SAAU,kBAAM8Y,GAAgBD,IAAc7S,MAAM,OAClF,gBAAC,MAAD,CAAMrX,MAAM,aAAZ,cAA2BJ,EAAE,wBAGjC,gBAAC4oB,GAAD,WACE,gBAACD,GAAD,WACE,eAAC,MAAD,CAAMvoB,MAAM,aAAasV,cAAc,YAAvC,SACG1V,EAAE,aAEL,eAAC,GAAD,CACEmH,QAAS,CACP,CACE2S,MAAO9Z,EAAE,OACTgD,MAAO,OAET,CACE8W,MAAO9Z,EAAE,YACTgD,MAAO,WAET,CACE8W,MAAO9Z,EAAE,cACTgD,MAAO,UAET,CACE8W,MAAO9Z,EAAE,cACTgD,MAAO,cAET,CACE8W,MAAO9Z,EAAE,UACTgD,MAAO,UAET,CACE8W,MAAO9Z,EAAE,aACTgD,MAAO,cAGXyO,SAvEe,SAAC6W,GAC9BuB,EAAcvB,EAAOtlB,aAyEX,gBAAC2lB,GAAD,CAAc3W,MAAO,CAAEgU,WAAY,IAAnC,UACE,eAAC,MAAD,CAAM5lB,MAAM,aAAasV,cAAc,YAAvC,SACG1V,EAAE,YAEL,eAAC,GAAD,CAAayR,SA1LD,SAAC8F,GACzBmS,EAASnS,EAAM3V,OAAOoB,QAyLgCA,MAAOymB,aA1IzC,WACpB,GAAIlD,IAAalY,GAASuY,OAAS2F,EAAQxqB,OAAQ,CACjD,IAEM+iB,EAFezD,GAEQ1a,KAAI,SAACyb,GAAD,MAAa,CAC5ClE,GAAIkE,EAAOlE,GACXtY,KAAMwc,EAAOxc,KACbkU,MAAOsI,EAAOtI,MACdmT,KAAM,SAAClb,EAAsBmb,GAC3B,OAAQ9K,EAAOxc,MACb,IAAK,OACH,OAAOsnB,EAAEhP,GAAKnM,EAAEmM,GAClB,IAAK,UACH,OAAInM,EAAEoT,SAAStO,SAAWqW,EAAE/H,SAAStO,QAC5BhK,OAAOkF,EAAEoT,SAAStO,SAAWhK,OAAOqgB,EAAE/H,SAAStO,SAGjD,EACT,IAAK,SACH,OAAI9E,EAAEoT,SAASrO,QAAUoW,EAAE/H,SAASrO,OAC3BjK,OAAOkF,EAAEoT,SAASrO,QAAUjK,OAAOqgB,EAAE/H,SAASrO,QAGhD,EACT,IAAK,MACH,OAAI/E,EAAEoT,SAASzL,KAAOwT,EAAE/H,SAASzL,IACxB7M,OAAOkF,EAAEoT,SAASzL,KAAO7M,OAAOqgB,EAAE/H,SAASzL,KAG7C,EACT,IAAK,SACH,OAAO3H,EAAEoT,SAASlL,OAAO5G,SAAW6Z,EAAE/H,SAASlL,OAAO5G,SACxD,QACE,OAAO,IAGb+N,SAAUgB,EAAOhB,aAGnB,OAAO,eAAC,GAAD,CAAO0B,KAAMyJ,EAASzH,QAASA,IAGxC,OACE,sBAAK9S,MAAO,CAAEmb,UAAW,IAAzB,SACE,gBAAChe,GAAA,EAAD,WACE,eAAC,KAAD,CAAOie,OAAK,EAAChE,KAAI,UAAKA,GAAtB,SACGkD,EAAY3lB,KAAI,SAACsN,GAAD,OACf,eAAC,GAAD,CAAyBA,KAAMA,EAAMiC,SAAUA,EAAU5C,QAASA,EAAS3E,SAAS,GAArEsF,EAAK1B,UAGxB,eAAC,KAAD,CAAO6a,OAAK,EAAChE,KAAI,UAAKA,EAAL,YAAjB,SACGkD,EAAY3lB,KAAI,SAACsN,GAAD,OACf,eAAC,GAAD,CAAyBA,KAAMA,EAAMiC,SAAUA,EAAU5C,QAASA,EAAS3E,SAAO,GAAnEsF,EAAK1B,eA0FvB8a","file":"static/js/36.55304766.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"textSubtle\" bold>\r\n        {expanded ? t('Hide') : t('Details')}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenAdresses ? quoteTokenAdresses[chainId] : 'CORE'\r\n  const secondPart = tokenAddresses ? tokenAddresses[chainId] : 'CORE'\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface TooltipProps {\r\n  content: React.ReactNode\r\n}\r\n\r\nconst TooltipContent = styled.div`\r\n  background: ${({ theme }) => theme.tooltip.background};\r\n  padding: 16px;\r\n  border-radius: 16px;\r\n  color: ${({ theme }) => theme.tooltip.text};\r\n  width: max-content;\r\n  display: none;\r\n  padding: 16px;\r\n  max-height: 500px;\r\n  z-index: ${({ theme }) => theme.zIndices.modal};\r\n  position: absolute;\r\n  bottom: calc(100% + 16px);\r\n  transform: translate(34px, 0);\r\n  right: 0;\r\n  max-width: 250px;\r\n\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid ${({ theme }) => theme.tooltip.background};\r\n    bottom: 0;\r\n    position: absolute;\r\n    transform: translate(-34px, 9px);\r\n    right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  &:hover ${TooltipContent}, &:focus-within ${TooltipContent} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({ content, children }) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n      <TooltipContent>{content}</TooltipContent>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Tooltip\r\n","import { cloneElement, Component, createRef, createElement } from 'react';\nimport { number, element, func, oneOfType, instanceOf, string, bool } from 'prop-types';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction zeroPad(value) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var strValue = String(value);\n  if (length === 0) return strValue;\n  var match = strValue.match(/(.*?)([0-9]+)(.*)/);\n  var prefix = match ? match[1] : '';\n  var suffix = match ? match[3] : '';\n  var strNo = match ? match[2] : strValue;\n  var paddedNo = strNo.length >= length ? strNo : (_toConsumableArray(Array(length)).map(function () {\n    return '0';\n  }).join('') + strNo).slice(length * -1);\n  return \"\".concat(prefix).concat(paddedNo).concat(suffix);\n}\nvar timeDeltaFormatOptionsDefaults = {\n  daysInHours: false,\n  zeroPadTime: 2\n};\nfunction calcTimeDelta(date) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$now = options.now,\n      now = _options$now === void 0 ? Date.now : _options$now,\n      _options$precision = options.precision,\n      precision = _options$precision === void 0 ? 0 : _options$precision,\n      controlled = options.controlled,\n      _options$offsetTime = options.offsetTime,\n      offsetTime = _options$offsetTime === void 0 ? 0 : _options$offsetTime,\n      overtime = options.overtime;\n  var startTimestamp;\n\n  if (typeof date === 'string') {\n    startTimestamp = new Date(date).getTime();\n  } else if (date instanceof Date) {\n    startTimestamp = date.getTime();\n  } else {\n    startTimestamp = date;\n  }\n\n  if (!controlled) {\n    startTimestamp += offsetTime;\n  }\n\n  var timeLeft = controlled ? startTimestamp : startTimestamp - now();\n  var clampedPrecision = Math.min(20, Math.max(0, precision));\n  var total = Math.round(parseFloat(((overtime ? timeLeft : Math.max(0, timeLeft)) / 1000).toFixed(clampedPrecision)) * 1000);\n  var seconds = Math.abs(total) / 1000;\n  return {\n    total: total,\n    days: Math.floor(seconds / (3600 * 24)),\n    hours: Math.floor(seconds / 3600 % 24),\n    minutes: Math.floor(seconds / 60 % 60),\n    seconds: Math.floor(seconds % 60),\n    milliseconds: Number((seconds % 1 * 1000).toFixed()),\n    completed: total <= 0\n  };\n}\nfunction formatTimeDelta(timeDelta, options) {\n  var days = timeDelta.days,\n      hours = timeDelta.hours,\n      minutes = timeDelta.minutes,\n      seconds = timeDelta.seconds;\n\n  var _Object$assign = Object.assign(Object.assign({}, timeDeltaFormatOptionsDefaults), options),\n      daysInHours = _Object$assign.daysInHours,\n      zeroPadTime = _Object$assign.zeroPadTime,\n      _Object$assign$zeroPa = _Object$assign.zeroPadDays,\n      zeroPadDays = _Object$assign$zeroPa === void 0 ? zeroPadTime : _Object$assign$zeroPa;\n\n  var zeroPadTimeLength = Math.min(2, zeroPadTime);\n  var formattedHours = daysInHours ? zeroPad(hours + days * 24, zeroPadTime) : zeroPad(hours, zeroPadTimeLength);\n  return {\n    days: daysInHours ? '' : zeroPad(days, zeroPadDays),\n    hours: formattedHours,\n    minutes: zeroPad(minutes, zeroPadTimeLength),\n    seconds: zeroPad(seconds, zeroPadTimeLength)\n  };\n}\n\nvar Countdown = function (_React$Component) {\n  _inherits(Countdown, _React$Component);\n\n  var _super = _createSuper(Countdown);\n\n  function Countdown() {\n    var _this;\n\n    _classCallCheck(this, Countdown);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      count: _this.props.count || 3\n    };\n\n    _this.startCountdown = function () {\n      _this.interval = window.setInterval(function () {\n        var count = _this.state.count - 1;\n\n        if (count === 0) {\n          _this.stopCountdown();\n\n          _this.props.onComplete && _this.props.onComplete();\n        } else {\n          _this.setState(function (prevState) {\n            return {\n              count: prevState.count - 1\n            };\n          });\n        }\n      }, 1000);\n    };\n\n    _this.stopCountdown = function () {\n      clearInterval(_this.interval);\n    };\n\n    _this.addTime = function (seconds) {\n      _this.stopCountdown();\n\n      _this.setState(function (prevState) {\n        return {\n          count: prevState.count + seconds\n        };\n      }, _this.startCountdown);\n    };\n\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startCountdown();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children ? cloneElement(this.props.children, {\n        count: this.state.count\n      }) : null;\n    }\n  }]);\n\n  return Countdown;\n}(Component);\nCountdown.propTypes = {\n  count: number,\n  children: element,\n  onComplete: func\n};\n\nvar Countdown$1 = function (_React$Component) {\n  _inherits(Countdown$1, _React$Component);\n\n  var _super = _createSuper(Countdown$1);\n\n  function Countdown$1(props) {\n    var _this;\n\n    _classCallCheck(this, Countdown$1);\n\n    _this = _super.call(this, props);\n    _this.mounted = false;\n    _this.initialTimestamp = _this.calcOffsetStartTimestamp();\n    _this.offsetStartTimestamp = _this.props.autoStart ? 0 : _this.initialTimestamp;\n    _this.offsetTime = 0;\n    _this.legacyMode = false;\n    _this.legacyCountdownRef = createRef();\n\n    _this.tick = function () {\n      var timeDelta = _this.calcTimeDelta();\n\n      var callback = timeDelta.completed && !_this.props.overtime ? undefined : _this.props.onTick;\n\n      _this.setTimeDeltaState(timeDelta, undefined, callback);\n    };\n\n    _this.start = function () {\n      if (_this.isStarted()) return;\n      var prevOffsetStartTimestamp = _this.offsetStartTimestamp;\n      _this.offsetStartTimestamp = 0;\n      _this.offsetTime += prevOffsetStartTimestamp ? _this.calcOffsetStartTimestamp() - prevOffsetStartTimestamp : 0;\n\n      var timeDelta = _this.calcTimeDelta();\n\n      _this.setTimeDeltaState(timeDelta, \"STARTED\", _this.props.onStart);\n\n      if (!_this.props.controlled && (!timeDelta.completed || _this.props.overtime)) {\n        _this.clearTimer();\n\n        _this.interval = window.setInterval(_this.tick, _this.props.intervalDelay);\n      }\n    };\n\n    _this.pause = function () {\n      if (_this.isPaused()) return;\n\n      _this.clearTimer();\n\n      _this.offsetStartTimestamp = _this.calcOffsetStartTimestamp();\n\n      _this.setTimeDeltaState(_this.state.timeDelta, \"PAUSED\", _this.props.onPause);\n    };\n\n    _this.stop = function () {\n      if (_this.isStopped()) return;\n\n      _this.clearTimer();\n\n      _this.offsetStartTimestamp = _this.calcOffsetStartTimestamp();\n      _this.offsetTime = _this.offsetStartTimestamp - _this.initialTimestamp;\n\n      _this.setTimeDeltaState(_this.calcTimeDelta(), \"STOPPED\", _this.props.onStop);\n    };\n\n    _this.isStarted = function () {\n      return _this.isStatus(\"STARTED\");\n    };\n\n    _this.isPaused = function () {\n      return _this.isStatus(\"PAUSED\");\n    };\n\n    _this.isStopped = function () {\n      return _this.isStatus(\"STOPPED\");\n    };\n\n    _this.isCompleted = function () {\n      return _this.isStatus(\"COMPLETED\");\n    };\n\n    _this.handleOnComplete = function (timeDelta) {\n      if (_this.props.onComplete) _this.props.onComplete(timeDelta);\n    };\n\n    if (props.date) {\n      var timeDelta = _this.calcTimeDelta();\n\n      _this.state = {\n        timeDelta: timeDelta,\n        status: timeDelta.completed ? \"COMPLETED\" : \"STOPPED\"\n      };\n    } else {\n      _this.legacyMode = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(Countdown$1, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.legacyMode) {\n        return;\n      }\n\n      this.mounted = true;\n      if (this.props.onMount) this.props.onMount(this.calcTimeDelta());\n      if (this.props.autoStart) this.start();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.legacyMode) {\n        return;\n      }\n\n      if (this.props.date !== prevProps.date) {\n        this.initialTimestamp = this.calcOffsetStartTimestamp();\n        this.offsetStartTimestamp = this.initialTimestamp;\n        this.offsetTime = 0;\n        this.setTimeDeltaState(this.calcTimeDelta());\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.legacyMode) {\n        return;\n      }\n\n      this.mounted = false;\n      this.clearTimer();\n    }\n  }, {\n    key: \"calcTimeDelta\",\n    value: function calcTimeDelta$1() {\n      var _this$props = this.props,\n          date = _this$props.date,\n          now = _this$props.now,\n          precision = _this$props.precision,\n          controlled = _this$props.controlled,\n          overtime = _this$props.overtime;\n      return calcTimeDelta(date, {\n        now: now,\n        precision: precision,\n        controlled: controlled,\n        offsetTime: this.offsetTime,\n        overtime: overtime\n      });\n    }\n  }, {\n    key: \"calcOffsetStartTimestamp\",\n    value: function calcOffsetStartTimestamp() {\n      return Date.now();\n    }\n  }, {\n    key: \"addTime\",\n    value: function addTime(seconds) {\n      this.legacyCountdownRef.current.addTime(seconds);\n    }\n  }, {\n    key: \"clearTimer\",\n    value: function clearTimer() {\n      window.clearInterval(this.interval);\n    }\n  }, {\n    key: \"isStatus\",\n    value: function isStatus(status) {\n      return this.state.status === status;\n    }\n  }, {\n    key: \"setTimeDeltaState\",\n    value: function setTimeDeltaState(timeDelta, status, callback) {\n      var _this2 = this;\n\n      if (!this.mounted) return;\n      var completedCallback;\n\n      if (!this.state.timeDelta.completed && timeDelta.completed) {\n        if (!this.props.overtime) this.clearTimer();\n        completedCallback = this.handleOnComplete;\n      }\n\n      var onDone = function onDone() {\n        if (callback) callback(_this2.state.timeDelta);\n        if (completedCallback) completedCallback(_this2.state.timeDelta);\n      };\n\n      return this.setState(function (prevState) {\n        var newStatus = status || prevState.status;\n\n        if (timeDelta.completed && !_this2.props.overtime) {\n          newStatus = \"COMPLETED\";\n        } else if (!status && newStatus === \"COMPLETED\") {\n          newStatus = \"STOPPED\";\n        }\n\n        return {\n          timeDelta: timeDelta,\n          status: newStatus\n        };\n      }, onDone);\n    }\n  }, {\n    key: \"getApi\",\n    value: function getApi() {\n      return this.api = this.api || {\n        start: this.start,\n        pause: this.pause,\n        stop: this.stop,\n        isStarted: this.isStarted,\n        isPaused: this.isPaused,\n        isStopped: this.isStopped,\n        isCompleted: this.isCompleted\n      };\n    }\n  }, {\n    key: \"getRenderProps\",\n    value: function getRenderProps() {\n      var _this$props2 = this.props,\n          daysInHours = _this$props2.daysInHours,\n          zeroPadTime = _this$props2.zeroPadTime,\n          zeroPadDays = _this$props2.zeroPadDays;\n      var timeDelta = this.state.timeDelta;\n      return Object.assign(Object.assign({}, timeDelta), {\n        api: this.getApi(),\n        props: this.props,\n        formatted: formatTimeDelta(timeDelta, {\n          daysInHours: daysInHours,\n          zeroPadTime: zeroPadTime,\n          zeroPadDays: zeroPadDays\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.legacyMode) {\n        var _this$props3 = this.props,\n            count = _this$props3.count,\n            _children = _this$props3.children,\n            onComplete = _this$props3.onComplete;\n        return createElement(Countdown, {\n          ref: this.legacyCountdownRef,\n          count: count,\n          onComplete: onComplete\n        }, _children);\n      }\n\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          overtime = _this$props4.overtime,\n          children = _this$props4.children,\n          renderer = _this$props4.renderer;\n      var renderProps = this.getRenderProps();\n\n      if (renderer) {\n        return renderer(renderProps);\n      }\n\n      if (children && this.state.timeDelta.completed && !overtime) {\n        return cloneElement(children, {\n          countdown: renderProps\n        });\n      }\n\n      var _renderProps$formatte = renderProps.formatted,\n          days = _renderProps$formatte.days,\n          hours = _renderProps$formatte.hours,\n          minutes = _renderProps$formatte.minutes,\n          seconds = _renderProps$formatte.seconds;\n      return createElement(\"span\", {\n        className: className\n      }, renderProps.total < 0 ? '-' : '', days, days ? ':' : '', hours, \":\", minutes, \":\", seconds);\n    }\n  }]);\n\n  return Countdown$1;\n}(Component);\nCountdown$1.defaultProps = Object.assign(Object.assign({}, timeDeltaFormatOptionsDefaults), {\n  controlled: false,\n  intervalDelay: 1000,\n  precision: 0,\n  autoStart: true\n});\nCountdown$1.propTypes = {\n  date: oneOfType([instanceOf(Date), string, number]),\n  daysInHours: bool,\n  zeroPadTime: number,\n  zeroPadDays: number,\n  controlled: bool,\n  intervalDelay: number,\n  precision: number,\n  autoStart: bool,\n  overtime: bool,\n  className: string,\n  children: element,\n  renderer: func,\n  now: func,\n  onMount: func,\n  onStart: func,\n  onPause: func,\n  onStop: func,\n  onTick: func,\n  onComplete: func\n};\n\nexport default Countdown$1;\nexport { calcTimeDelta, formatTimeDelta, zeroPad };\n","export { default } from './ExpandableSectionButton'\r\n","export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  translationId: number\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APY: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    translationId: 1072,\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    translationId: 736,\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  // {\r\n  //   id: 3,\r\n  //   name: 'farmApr',\r\n  //   translationId: 736,\r\n  //   sortable: true,\r\n  //   label: 'Farm APR',\r\n  // },\r\n  // {\r\n  //   id: 4,\r\n  //   name: 'feeApr',\r\n  //   translationId: 736,\r\n  //   sortable: true,\r\n  //   label: 'LP Fee APR',\r\n  // },\r\n  {\r\n    id: 7,\r\n    name: 'details',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    translationId: 1072,\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    translationId: 736,\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  // {\r\n  //   id: 3,\r\n  //   name: 'farmApr',\r\n  //   translationId: 736,\r\n  //   sortable: true,\r\n  //   label: 'Farm APR',\r\n  // },\r\n  // {\r\n  //   id: 4,\r\n  //   name: 'feeApr',\r\n  //   translationId: 736,\r\n  //   sortable: true,\r\n  //   label: 'LP Fee APR',\r\n  // },\r\n  {\r\n    id: 5,\r\n    name: 'liquidity',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'multiplier',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'details',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Link, LinkExternal } from 'archerswap-uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  coreScanAddress?: string\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 16px;\r\n  padding: 0 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  coreScanAddress,\r\n  removed,\r\n  totalValueFormated,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\" mb={10}>\r\n        <Text color=\"textSubtle\">{t('Stake')}:</Text>\r\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\r\n      </Flex>\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" mb={16}>\r\n          <Text color=\"textSubtle\">{t('Total Liquidity')}:</Text>\r\n          <Text>{totalValueFormated}</Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"flex-start\">\r\n        <Link external href={coreScanAddress} bold={false}>\r\n          {t('View on Core Scan')}\r\n        </Link>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading } from 'archerswap-uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n  color: #199e46;\r\n  background-color: #e8fdf0;\r\n`\r\n\r\nconst IconImage = styled.div`\r\n  display: flex;\r\n  margin-right: 5px;\r\n  .first {\r\n    position: relative;\r\n    display: block;\r\n    border-radius: 50%;\r\n    z-index: 2;\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n  }\r\n  .last {\r\n    z-index: 3;\r\n    display: block;\r\n    margin-left: -10px;\r\n    border-radius: 50%;\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      width: 40px;\r\n      height: 40px;\r\n      margin-left: -20px;\r\n    }\r\n  }\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  tokenSymbol,\r\n}) => {\r\n  return (\r\n    <Wrapper px={24} justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <IconImage>\r\n        <img className=\"first\" src={`/images/tokens/${farmImage.split('-')[0].toLocaleLowerCase()}.png`} alt=\"icon\" />\r\n        <img className=\"last\" src={`/images/tokens/${farmImage.split('-')[1].toLocaleLowerCase()}.png`} alt=\"icon\" />\r\n      </IconImage>\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal, LinkExternal } from 'archerswap-uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={t('Stake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || !val || val === '0' || Number(fullBalance) < Number(val)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\r\n        {t('Get %symbol%', { symbol: tokenName })}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from 'archerswap-uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx || !val || val === '0' || Number(fullBalance) < Number(val)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button onClick={onPresentDeposit}>{t('Stake LP')}</Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <Button\r\n        disabled={rawEarningsBalance === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onReward()\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { Button, Flex, Text } from 'archerswap-uikit'\r\nimport { FarmWithStakedValue } from 'state/types'\r\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding: 16px 24px 0;\r\n`\r\nconst StyledUnlockButton = styled(UnlockButton)`\r\n  color: #ffffff;\r\n  width: 100%;\r\n  border-radius: 7px;\r\n`\r\nconst StyledButton = styled(Button)`\r\n  color: #ffffff;\r\n`\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  provider?: ProviderType\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const lpName = farm.lpSymbol\r\n  const isApproved =\r\n    account && allowance && allowance.isGreaterThan(0) && allowance.isGreaterThanOrEqualTo(tokenBalance)\r\n  const web3 = useWeb3()\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <StyledButton mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n        {t('Approve Contract')}\r\n      </StyledButton>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold color=\"bow\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          BOW\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"bow\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} />\r\n      <Flex>\r\n        <Text bold color=\"bow\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"bow\" fontSize=\"12px\">\r\n          {t('Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <StyledUnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateBowEarnedPerThousandDollars = ({ numberOfDays, farmApy, bowPrice }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / bowPrice\r\n\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n\r\n  // To get the bow earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { calculateBowEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  bowPrice?: BigNumber\r\n  apy?: number\r\n  farmApr?: number\r\n  feeApr?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  max-width: 320px;\r\n  margin-bottom: 28px;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  bowPrice,\r\n  apy,\r\n  farmApr,\r\n  feeApr,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const oneThousandDollarsWorthOfCake = 1000 / bowPrice.toNumber()\r\n\r\n  const bowEarnedPerThousand1D = calculateBowEarnedPerThousandDollars({ numberOfDays: 1, farmApy: apy, bowPrice })\r\n  const bowEarnedPerThousand7D = calculateBowEarnedPerThousandDollars({ numberOfDays: 7, farmApy: apy, bowPrice })\r\n  const bowEarnedPerThousand30D = calculateBowEarnedPerThousandDollars({\r\n    numberOfDays: 30,\r\n    farmApy: apy,\r\n    bowPrice,\r\n  })\r\n  const bowEarnedPerThousand365D = calculateBowEarnedPerThousandDollars({\r\n    numberOfDays: 365,\r\n    farmApy: apy,\r\n    bowPrice,\r\n  })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {t('Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {t('ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" mb=\"20px\">\r\n            {t('BOW per $1000')}\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>1d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: bowEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{bowEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>7d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: bowEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{bowEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>30d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: bowEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{bowEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem>\r\n          <Text>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: bowEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{bowEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"12px\" color=\"textSubtle\">\r\n        {t(\r\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"space-between\" mb=\"10px\">\r\n        <Text fontSize=\"14px\" bold color=\"textSubtle\">\r\n          {t('Farm APR')}\r\n        </Text>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {farmApr && farmApr.toFixed(2)}%\r\n        </Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\" mb=\"10px\">\r\n        <Text fontSize=\"14px\" bold color=\"textSubtle\">\r\n          {t('LP Fee APR')}\r\n        </Text>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {feeApr && feeApr.toFixed(2)}%\r\n        </Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from 'archerswap-uikit'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  bowPrice?: BigNumber\r\n  apy?: number\r\n  farmApr?: number\r\n  feeApr?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, bowPrice, apy, farmApr, feeApr, addLiquidityUrl }) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      lpLabel={lpLabel}\r\n      bowPrice={bowPrice}\r\n      apy={apy}\r\n      farmApr={farmApr}\r\n      feeApr={feeApr}\r\n      addLiquidityUrl={addLiquidityUrl}\r\n    />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Skeleton } from 'archerswap-uikit'\r\nimport { communityFarms } from 'config/constants'\r\nimport { FarmWithStakedValue } from 'state/types'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border-radius: 16px;\r\n  box-shadow: 0px 3.5px 10px rgba(10, 14, 22, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px 0;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 24px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\nconst StyledText = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.textDisabled};\r\n  margin-bottom: 12px;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  bowPrice?: BigNumber\r\n  provider?: ProviderType\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, bowPrice, account }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  const isCommunityFarm = communityFarms.includes(farm.token.symbol)\r\n  // We assume the token name is coin pair + lp e.g. BOW-CORE LP, LINK-CORE LP,\r\n  // NAR-BOW LP. The images should be bow-core.svg, link-core.svg, nar-bow.svg\r\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n\r\n  const totalValueFormated = farm.liquidity\r\n    ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const lpLabel = farm.lpSymbol\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'BOW  '\r\n\r\n  const farmAPY = farm.apy && farm.apy.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAdresses: farm.quoteToken.address,\r\n    tokenAddresses: farm.token.address,\r\n  })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  return (\r\n    <FCard>\r\n      {/* {farm.lpSymbol.includes('BOW') && <StyledCardAccent />} */}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={isCommunityFarm}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.token.symbol}\r\n      />\r\n      {!removed && (\r\n        <Flex px={24} justifyContent=\"space-between\" alignItems=\"center\">\r\n          <StyledText>{t('APR')}:</StyledText>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  addLiquidityUrl={addLiquidityUrl}\r\n                  bowPrice={bowPrice}\r\n                  apy={farm.apy}\r\n                  farmApr={farm.farmApr}\r\n                  feeApr={farm.feeApr}\r\n                />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex px={24} justifyContent=\"space-between\">\r\n        <StyledText>{t('Earn')}:</StyledText>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          coreScanAddress={`https://scan.coredao.org/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import { useEffect, useState, useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getKyudoNftAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport multicall from 'utils/multicall'\r\nimport nftAbi from 'config/abi/NFT.json'\r\nimport masterchefAbi from 'config/abi/masterchef.json'\r\nimport farms from 'config/constants/farms'\r\nimport { useKyudoNft, useMasterchef } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst pids = farms.map((farm) => farm.pid)\r\n\r\nexport const useNFTData = () => {\r\n  const [balance, setBalance] = useState(0)\r\n  const [isApproved, setIsApproved] = useState(false)\r\n\r\n  const { fastRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const fetchGlobalData = async () => {\r\n      try {\r\n        if (account) {\r\n          const calls = [\r\n            { address: getKyudoNftAddress(), name: 'balanceOf', params: [account] },\r\n            { address: getKyudoNftAddress(), name: 'isApprovedForAll', params: [account, getMasterChefAddress()] },\r\n          ]\r\n          const data = await multicall(nftAbi, calls)\r\n          setBalance(data[0][0].toString())\r\n          setIsApproved(data[1][0])\r\n        } else {\r\n          setBalance(0)\r\n          setIsApproved(false)\r\n        }\r\n      } catch (e) {\r\n        console.error('Fetching nft data had error', e)\r\n      }\r\n    }\r\n\r\n    fetchGlobalData()\r\n  }, [fastRefresh, account])\r\n\r\n  return {\r\n    balance,\r\n    isApproved,\r\n  }\r\n}\r\n\r\nexport const useApproveCallback = () => {\r\n  const [pending, setPending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const contract = useKyudoNft()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setPending(true)\r\n      const tx = await contract.methods.setApprovalForAll(getMasterChefAddress(), true).send({\r\n        from: account,\r\n      })\r\n      setPending(false)\r\n      return tx\r\n    } catch (e) {\r\n      console.error('NFT approve had error :>> ', e)\r\n      setPending(false)\r\n      return false\r\n    }\r\n  }, [account, contract])\r\n\r\n  return { handleApprove, pending }\r\n}\r\n\r\nexport const useNftStakingData = () => {\r\n  const [nftTokenIds, setNftTokenIds] = useState({})\r\n  const [boosts, setBoosts] = useState({})\r\n\r\n  const { fastRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const fetchGlobalData = async () => {\r\n      try {\r\n        if (account) {\r\n          const calls = []\r\n          for (let i = 0; i < pids.length; i++) {\r\n            calls.push({ address: getMasterChefAddress(), name: 'getSlots', params: [account, pids[i]] })\r\n          }\r\n          for (let i = 0; i < pids.length; i++) {\r\n            calls.push({ address: getMasterChefAddress(), name: 'getTokenIds', params: [account, pids[i]] })\r\n          }\r\n          for (let i = 0; i < pids.length; i++) {\r\n            calls.push({ address: getMasterChefAddress(), name: 'getBoost', params: [account, pids[i]] })\r\n          }\r\n\r\n          const data = await multicall(masterchefAbi, calls)\r\n\r\n          const _nftTokenIds = {}\r\n          for (let i = 0; i < pids.length; i++) {\r\n            const tempSlots = data[i]\r\n            const tempIds = data[pids.length + i]\r\n            const ids = []\r\n            for (let j = 0; j < 3; j++) {\r\n              if (tempSlots[j] !== '0x0000000000000000000000000000000000000000') {\r\n                ids.push(tempIds[j].toString())\r\n              } else {\r\n                ids.push(undefined)\r\n              }\r\n            }\r\n            _nftTokenIds[pids[i]] = ids\r\n          }\r\n          setNftTokenIds(_nftTokenIds)\r\n\r\n          const _boosts = {}\r\n          for (let i = 0; i < pids.length; i++) {\r\n            _boosts[pids[i]] = data[2 * pids.length + i][0].toString()\r\n          }\r\n          setBoosts(_boosts)\r\n        } else {\r\n          setNftTokenIds({})\r\n          setBoosts({})\r\n        }\r\n      } catch (e) {\r\n        console.error('Fetching chef data had error', e)\r\n      }\r\n    }\r\n\r\n    fetchGlobalData()\r\n  }, [fastRefresh, account])\r\n\r\n  return {\r\n    nftTokenIds,\r\n    boosts,\r\n  }\r\n}\r\n\r\nexport const useDepositNFTCallback = () => {\r\n  const [pending, setPending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const contract = useMasterchef()\r\n\r\n  const handleDepositNFT = useCallback(\r\n    async (tokenId, slotIndex, pid) => {\r\n      try {\r\n        setPending(true)\r\n        const tx = await contract.methods.depositNFT(getKyudoNftAddress(), tokenId, slotIndex, pid).send({\r\n          from: account,\r\n        })\r\n        setPending(false)\r\n        return tx\r\n      } catch (e) {\r\n        console.error('Deposit NFT had error :>> ', e)\r\n        setPending(false)\r\n        return false\r\n      }\r\n    },\r\n    [account, contract],\r\n  )\r\n\r\n  return { handleDepositNFT, pending }\r\n}\r\n\r\nexport const useWithdrawNFTCallback = () => {\r\n  const [pending, setPending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const contract = useMasterchef()\r\n\r\n  const handleWithdrawNFT = useCallback(\r\n    async (slotIndex, pid) => {\r\n      try {\r\n        setPending(true)\r\n        const tx = await contract.methods.withdrawNFT(slotIndex, pid).send({\r\n          from: account,\r\n        })\r\n        setPending(false)\r\n        return tx\r\n      } catch (e) {\r\n        console.error('Withdraw NFT had error :>> ', e)\r\n        setPending(false)\r\n        return false\r\n      }\r\n    },\r\n    [account, contract],\r\n  )\r\n\r\n  return { handleWithdrawNFT, pending }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport Tooltip from '../Tooltip/Tooltip'\r\n\r\nexport interface TotalAprProps {\r\n  apr: number\r\n  farmApr: number\r\n  feeApr: number\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    margin-left: 14px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    svg {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst AprWrapper = styled.div`\r\n  min-width: 110px;\r\n  text-align: left;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst TotalApr: React.FunctionComponent<TotalAprProps> = ({ apr, farmApr, feeApr }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Container>\r\n      <AprWrapper>{apr}%</AprWrapper>\r\n      <Tooltip\r\n        content={\r\n          <>\r\n            <span>{`${t('Farm APR')}:  ${farmApr}%`}</span>\r\n            <br />\r\n            <span>{`${t('Earned Trading Fee APR')}:  ${feeApr}%`}</span>\r\n          </>\r\n        }\r\n      >\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </Tooltip>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TotalApr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface AprProps {\r\n  apr?: number\r\n  farmApr?: number\r\n  feeApr?: number\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  button {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    svg {\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textSubtle};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AprWrapper = styled.div`\r\n  min-width: 60px;\r\n  text-align: left;\r\n`\r\n\r\nconst Apr: React.FC<AprProps> = ({ apr }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Container>\r\n      {apr ? (\r\n        <>\r\n          <AprWrapper>{apr}%</AprWrapper>\r\n        </>\r\n      ) : (\r\n        <AprWrapper>{t('Loading...')}</AprWrapper>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text } from 'archerswap-uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\n\r\nexport interface FarmProps {\r\n  label: string\r\n  pid: number\r\n  image: string\r\n}\r\n\r\nconst IconImage = styled.div`\r\n  display: flex;\r\n  margin-right: 15px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 5px;\r\n  }\r\n  .first {\r\n    position: relative;\r\n    display: block;\r\n    border-radius: 50%;\r\n    z-index: 2;\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      width: 30px;\r\n      height: 30px;\r\n    }\r\n  }\r\n  .last {\r\n    z-index: 3;\r\n    display: block;\r\n    margin-left: -7px;\r\n    border-radius: 50%;\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      width: 30px;\r\n      height: 30px;\r\n      margin-left: -12px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Farm: React.FunctionComponent<FarmProps> = ({ label, pid }) => {\r\n  const { stakedBalance } = useFarmUser(pid)\r\n  const { t } = useTranslation()\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n\r\n  const handleRenderFarming = (): JSX.Element => {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\r\n          {t('Farming')}\r\n        </Text>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconImage>\r\n        <img className=\"first\" src={`/images/tokens/${label.split('-')[0].toLocaleLowerCase()}.png`} alt=\"icon\" />\r\n        <img className=\"last\" src={`/images/tokens/${label.split('-')[1].toLocaleLowerCase()}.png`} alt=\"icon\" />\r\n      </IconImage>\r\n      <div>\r\n        {handleRenderFarming()}\r\n        <Text bold>{label}</Text>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nexport interface EarnedProps {\r\n  earnings: number\r\n  pid: number\r\n}\r\n\r\nconst Amount = styled.span<{ earned: number }>`\r\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Earned: React.FunctionComponent<EarnedProps> = ({ earnings }) => {\r\n  const { account } = useWeb3React()\r\n  const displayBalance = earnings !== null && account ? earnings.toLocaleString() : '?'\r\n\r\n  return <Amount earned={earnings}>{displayBalance}</Amount>\r\n}\r\n\r\nexport default Earned\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, useMatchBreakpoints } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface DetailsProps {\r\n  actionPanelToggled: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 8px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 0px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 20px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\r\n  const { isXl } = useMatchBreakpoints()\r\n  const isMobile = !isXl\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Container>\r\n      {!isMobile && t('Details')}\r\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport Tooltip from '../Tooltip/Tooltip'\r\n\r\nexport interface MultiplierProps {\r\n  multiplier: string\r\n}\r\n\r\nconst MultiplierWrapper = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  width: 36px;\r\n  text-align: right;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    text-align: left;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    margin-left: 14px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    svg {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\r\n  const displayMultipler = multiplier ? multiplier.toLowerCase() : '-'\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Container>\r\n      <MultiplierWrapper>{displayMultipler}</MultiplierWrapper>\r\n      <Tooltip\r\n        content={\r\n          <div>\r\n            {t('The multiplier represents the amount of BOW rewards each farm gets.')}\r\n            <br />\r\n            <br />\r\n            {t('For example, if a 1x farm was getting 1 BOW per block, a 2x farm would be getting 2 BOW per block.')}\r\n          </div>\r\n        }\r\n      >\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </Tooltip>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Multiplier\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport Tooltip from '../Tooltip/Tooltip'\r\n\r\nexport interface LiquidityProps {\r\n  liquidity: number\r\n}\r\n\r\nconst LiquidityWrapper = styled.div`\r\n  min-width: 110px;\r\n  font-weight: 600;\r\n  text-align: right;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    text-align: left;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    margin-left: 14px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    svg {\r\n      margin-left: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\r\n  const displayLiquidity = liquidity\r\n    ? `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Container>\r\n      <LiquidityWrapper>\r\n        <Text>{displayLiquidity}</Text>\r\n      </LiquidityWrapper>\r\n      <Tooltip content={t('Total value of the funds in this farm’s liquidity pool')}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </Tooltip>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Liquidity\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.borderColor};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 48px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Title = styled.span`\r\n  color: ${({ theme }) => theme.colors.success};\r\n`\r\n\r\nexport const Subtle = styled.span`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nexport const Earned = styled.div`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\nexport const Staked = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button } from 'archerswap-uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { FarmWithStakedValue } from 'state/types'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceBowUsd } from 'state/hooks'\r\nimport { useCountUp } from 'react-countup'\r\n\r\nimport { ActionContainer, ActionTitles, Title, ActionContent, Earned, Staked } from './styles'\r\n\r\nconst HarvestAction: React.FunctionComponent<FarmWithStakedValue> = ({ pid, userData }) => {\r\n  const { account } = useWeb3React()\r\n  const earningsBigNumber = userData && account ? new BigNumber(userData.earnings) : null\r\n  const bowPrice = usePriceBowUsd()\r\n  let earnings = null\r\n  let earningsBusd = 0\r\n  let displayBalance = '?'\r\n\r\n  if (earningsBigNumber) {\r\n    earnings = getBalanceNumber(earningsBigNumber)\r\n    earningsBusd = new BigNumber(earnings).multipliedBy(bowPrice).toNumber()\r\n    displayBalance = earnings.toLocaleString()\r\n  }\r\n\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { t } = useTranslation()\r\n\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: earningsBusd,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals: 3,\r\n  })\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(earningsBusd)\r\n  }, [earningsBusd, updateValue])\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Title>{t('%asset% Earned', { asset: 'BOW' })}</Title>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <div>\r\n          <Earned>{displayBalance}</Earned>\r\n          <Staked>~{countUp}USD</Staked>\r\n        </div>\r\n        <Button\r\n          disabled={!earnings || pendingTx || !account}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          ml=\"4px\"\r\n        >\r\n          {t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon } from 'archerswap-uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { FarmWithStakedValue } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useCountUp } from 'react-countup'\r\n\r\nimport DepositModal from '../../DepositModal'\r\nimport WithdrawModal from '../../WithdrawModal'\r\nimport {\r\n  ActionContainer,\r\n  ActionTitles,\r\n  ActionContent,\r\n  Earned,\r\n  Title,\r\n  Subtle,\r\n  Staked as StakedComponent,\r\n} from './styles'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst Staked: React.FunctionComponent<FarmWithStakedValue> = ({\r\n  pid,\r\n  lpSymbol,\r\n  lpAddresses,\r\n  quoteToken,\r\n  token,\r\n  lpPrice,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n  const web3 = useWeb3()\r\n\r\n  const isApproved =\r\n    account && allowance && allowance.isGreaterThan(0) && allowance.isGreaterThanOrEqualTo(tokenBalance)\r\n\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAdresses: quoteToken.address,\r\n    tokenAddresses: token.address,\r\n  })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n  const displayBalance = rawStakedBalance.toLocaleString()\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={lpSymbol} />)\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: lpPrice?.times(stakedBalance).div(1e18).toNumber(),\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals: 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(lpPrice?.times(stakedBalance).div(1e18).toNumber())\r\n  }, [stakedBalance, lpPrice, updateValue])\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{t('Start Farming')}</Subtle>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (isApproved) {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <ActionContainer>\r\n          <ActionTitles>\r\n            <Title>{lpSymbol} </Title>\r\n            <Subtle>{t('Staked')}</Subtle>\r\n          </ActionTitles>\r\n          <ActionContent>\r\n            <div>\r\n              <Earned>{displayBalance}</Earned>\r\n              <StakedComponent>~{countUp}USD</StakedComponent>\r\n            </div>\r\n            <IconButtonWrapper>\r\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n                <MinusIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit}>\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            </IconButtonWrapper>\r\n          </ActionContent>\r\n        </ActionContainer>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{t('Stake %symbol%', { symbol: lpSymbol })} </Subtle>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" onClick={onPresentDeposit} variant=\"primary\">\r\n            {t('Stake LP')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Subtle>{t('Enable Farm')}</Subtle>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"primary\">\r\n          {t('Enable')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LinkExternal, Text } from 'archerswap-uikit'\r\nimport { FarmWithStakedValue } from 'state/types'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { communityFarms } from 'config/constants'\r\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\r\n\r\nimport HarvestAction from './HarvestAction'\r\nimport StakedAction from './StakedAction'\r\n// import Apr from '../Apr'\r\nimport Multiplier, { MultiplierProps } from '../Multiplier'\r\nimport Liquidity, { LiquidityProps } from '../Liquidity'\r\n\r\nexport interface ActionPanelProps {\r\n  farmApr: number\r\n  feeApr: number\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\nconst Container = styled.div`\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column-reverse;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.success};\r\n  }\r\n`\r\n\r\nconst StakeContainer = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst TagsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  > div {\r\n    height: 24px;\r\n    padding: 0 6px;\r\n    font-size: 14px;\r\n    margin-right: 4px;\r\n\r\n    svg {\r\n      width: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  min-width: 200px;\r\n`\r\n\r\nconst ValueContainer = styled.div`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ValueWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 4px 0px;\r\n`\r\n\r\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\r\n  details,\r\n  // farmApr,\r\n  // feeApr,\r\n  multiplier,\r\n  liquidity,\r\n}) => {\r\n  const farm = details\r\n\r\n  const { t } = useTranslation()\r\n  const { quoteToken, token, dual } = farm\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.replace('ARCHER', '')\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAdresses: quoteToken.address,\r\n    tokenAddresses: token.address,\r\n  })\r\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const core = `https://scan.coredao.org/address/${lpAddress}`\r\n  const info = `https://info.archerswap.finance/pair/${lpAddress}`\r\n  const isCommunityFarm = communityFarms.includes(token.symbol)\r\n\r\n  return (\r\n    <Container>\r\n      <InfoContainer>\r\n        <StakeContainer>\r\n          <StyledLinkExternal href={`/add/${liquidityUrlPathParts}`}>\r\n            {t(`Get %symbol%`, { symbol: lpLabel })}\r\n          </StyledLinkExternal>\r\n        </StakeContainer>\r\n        <StyledLinkExternal href={core}>{t('View Contract')}</StyledLinkExternal>\r\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\r\n        <TagsContainer>\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          {dual ? <DualTag /> : null}\r\n        </TagsContainer>\r\n      </InfoContainer>\r\n      <ValueContainer>\r\n        {/* <ValueWrapper>\r\n          <Text>{t('Farm APR')}</Text>\r\n          <Apr apr={farmApr} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('LP Fee APR')}</Text>\r\n          <Apr apr={feeApr} />\r\n        </ValueWrapper> */}\r\n        <ValueWrapper>\r\n          <Text>{t('Multiplier')}</Text>\r\n          <Multiplier {...multiplier} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Liquidity')}</Text>\r\n          <Liquidity {...liquidity} />\r\n        </ValueWrapper>\r\n      </ValueContainer>\r\n      <ActionContainer>\r\n        <HarvestAction {...farm} />\r\n        <StakedAction {...farm} />\r\n      </ActionContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Modal, Input, Text } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useDepositNFTCallback } from 'hooks/useKyudoNFT'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\ninterface BoostModalProps {\r\n  onDismiss?: () => void\r\n  pid: number\r\n  slot: number\r\n}\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  flex-grow: 1;\r\n  margin: 0 12px;\r\n  margin-right: 0;\r\n  padding: 0 8px;\r\n\r\n  box-shadow: 0px 0px 0px 2px #eaaa08;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst Warning = styled(Text)`\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n  padding-bottom: 0;\r\n  > button:first-child {\r\n    margin-right: 20px;\r\n  }\r\n`\r\n\r\nconst BoostModal: React.FC<BoostModalProps> = ({ onDismiss, pid, slot }) => {\r\n  const [id, setId] = useState('')\r\n  const { t } = useTranslation()\r\n\r\n  const { handleDepositNFT, pending: pendingTx } = useDepositNFTCallback()\r\n  const { stakedBalance } = useFarmUser(pid)\r\n\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const onDeposit = async () => {\r\n    const slots = await masterChefContract.methods.getSlots(account, pid).call()\r\n    /* eslint-disable no-console */\r\n    // console.log('Slot: ', slots[slot - 1])\r\n    if (slots[slot - 1] !== '0x0000000000000000000000000000000000000000') {\r\n      onDismiss()\r\n      return\r\n    }\r\n    await handleDepositNFT(id, slot, pid)\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Stake Your NFT')} onDismiss={onDismiss}>\r\n      {stakedBalance.gt(0) && <Warning>{t('Please withdraw all LP tokens before staking your NFT.')}</Warning>}\r\n      <InputWrapper>\r\n        <Text>{t('NFT ID')}</Text>\r\n        <StyledInput value={id} onChange={(e) => setId(e.target.value)} />\r\n      </InputWrapper>\r\n      <StyledModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button width=\"100%\" disabled={pendingTx || !id || stakedBalance.gt(0)} onClick={onDeposit}>\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </StyledModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BoostModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useMatchBreakpoints, Button, useWalletModal, useModal, Text } from 'archerswap-uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useApproveCallback, useWithdrawNFTCallback } from 'hooks/useKyudoNFT'\r\nimport Tooltip from '../Tooltip/Tooltip'\r\nimport BoostModal from './BoostModal'\r\n\r\nconst Container = styled.div`\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column-reverse;\r\n  padding: 26px;\r\n  padding-top: 10px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n    padding-top: 5px;\r\n  }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 48%;\r\n  min-width: 200px;\r\n  @media (max-width: 768px) {\r\n    min-height: 75px;\r\n    width: 100%;\r\n    padding-top: 25px;\r\n  }\r\n`\r\n\r\nconst NFTContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n  flex-grow: 1;\r\n  @media (max-width: 768px) {\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n  }\r\n`\r\n\r\nconst NFTBox = styled(Button)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 22px;\r\n  border-radius: 15px;\r\n  width: 80px;\r\n  height: 80px;\r\n  padding: 0;\r\n  line-height: 0;\r\n`\r\n\r\nconst StyledImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 15px;\r\n`\r\n\r\nconst baseUrl = 'https://bafybeidcbdmm6pzmravo6mwygqdmxxoexbrmsoomln7ume3i75at26w6sq.ipfs.nftstorage.link'\r\nconst baseUrl1 = 'https://bafybeigcxihqs7vtrfdxzdy36qh4j26vk7yixq3csj5z7otjeerfrcnhoi.ipfs.nftstorage.link'\r\n\r\nconst getUrl = (id) => {\r\n  if (id <= 5000) {\r\n    return `${baseUrl}/${id}.png`\r\n  }\r\n\r\n  return `${baseUrl1}/${id}.png`\r\n}\r\n\r\ninterface BoostPanelProps {\r\n  pid: number\r\n  isApproved: boolean\r\n  tokenIds: undefined | number[] | undefined[]\r\n  boost: undefined | number\r\n}\r\n\r\nconst BoostPanel: React.FunctionComponent<BoostPanelProps> = ({ pid, isApproved, tokenIds, boost }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const isMobile = !isXl\r\n\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  const { handleApprove, pending: approvePending } = useApproveCallback()\r\n  const { handleWithdrawNFT, pending: withdawPenidng } = useWithdrawNFTCallback()\r\n\r\n  const [onBoost1] = useModal(<BoostModal pid={pid} slot={1} />)\r\n  const [onBoost2] = useModal(<BoostModal pid={pid} slot={2} />)\r\n  const [onBoost3] = useModal(<BoostModal pid={pid} slot={3} />)\r\n\r\n  const onBoxClick = async (slotNum) => {\r\n    if (!account) {\r\n      onPresentConnectModal()\r\n      return\r\n    }\r\n    if (!isApproved) {\r\n      await handleApprove()\r\n      return\r\n    }\r\n    if (tokenIds[slotNum - 1]) {\r\n      await handleWithdrawNFT(slotNum, pid)\r\n      return\r\n    }\r\n\r\n    if (slotNum === 1) {\r\n      onBoost1()\r\n    } else if (slotNum === 2) {\r\n      onBoost2()\r\n    } else if (slotNum === 3) {\r\n      onBoost3()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <InfoContainer>\r\n        {!isMobile && <Text>{t('Stake NFT to increase BOW Earning')} 🚀</Text>}\r\n        <Text>{t('CURRENT BOOST')}</Text>\r\n        <Text>{boost}%</Text>\r\n      </InfoContainer>\r\n      <NFTContainer>\r\n        {[1, 2, 3].map((e) => (\r\n          <NFTBox key={e} disabled={approvePending || withdawPenidng} onClick={() => onBoxClick(e)}>\r\n            {tokenIds && tokenIds[e - 1] ? (\r\n              <Tooltip content={`Token ID: ${tokenIds[e - 1]}`}>\r\n                <StyledImg src={getUrl(Number(tokenIds[e - 1]))} alt=\"\" />\r\n              </Tooltip>\r\n            ) : (\r\n              <>+</>\r\n            )}\r\n          </NFTBox>\r\n        ))}\r\n      </NFTContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default BoostPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Label = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  text-align: left;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  min-height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface CellLayoutProps {\r\n  label?: string\r\n}\r\n\r\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\r\n  return (\r\n    <div>\r\n      {label && <Label>{label}</Label>}\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CellLayout\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FarmWithStakedValue } from 'state/types'\r\nimport { useMatchBreakpoints } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useNFTData, useNftStakingData } from 'hooks/useKyudoNFT'\r\n\r\nimport TotalApr from './TotalApr'\r\nimport Apr from './Apr'\r\nimport Farm, { FarmProps } from './Farm'\r\nimport Earned, { EarnedProps } from './Earned'\r\nimport Details from './Details'\r\nimport Multiplier, { MultiplierProps } from './Multiplier'\r\nimport Liquidity, { LiquidityProps } from './Liquidity'\r\nimport ActionPanel from './Actions/ActionPanel'\r\nimport BoostPanel from './BoostPanel'\r\nimport CellLayout from './CellLayout'\r\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\r\n\r\nexport interface RowProps {\r\n  farm: FarmProps\r\n  earned: EarnedProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n  farmApr: number\r\n  feeApr: number\r\n  apr: any\r\n}\r\n\r\nconst cells = {\r\n  farmApr: Apr,\r\n  feeApr: Apr,\r\n  farm: Farm,\r\n  earned: Earned,\r\n  details: Details,\r\n  multiplier: Multiplier,\r\n  liquidity: Liquidity,\r\n}\r\n\r\nconst CellInner = styled.div`\r\n  padding: 24px 0px;\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding-right: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst StyledTr = styled.tr`\r\n  cursor: pointer;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\r\n`\r\n\r\nconst EarnedMobileCell = styled.td`\r\n  padding: 16px 0 24px 16px;\r\n`\r\n\r\nconst AprMobileCell = styled.td`\r\n  padding-top: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst FarmMobileCell = styled.td`\r\n  padding-top: 24px;\r\n`\r\n\r\nconst Row: React.FunctionComponent<RowProps> = (props) => {\r\n  const { details, farm } = props\r\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\r\n  const { t } = useTranslation()\r\n\r\n  const toggleActionPanel = () => {\r\n    setActionPanelToggled(!actionPanelToggled)\r\n  }\r\n\r\n  const { isXl, isXs } = useMatchBreakpoints()\r\n\r\n  const isMobile = !isXl\r\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\r\n  const columnNames = tableSchema.map((column) => column.name)\r\n\r\n  const { isApproved } = useNFTData()\r\n  const { nftTokenIds, boosts } = useNftStakingData()\r\n\r\n  const handleRenderRow = () => {\r\n    if (!isXs) {\r\n      return (\r\n        <StyledTr onClick={toggleActionPanel}>\r\n          {Object.keys(props).map((key) => {\r\n            const columnIndex = columnNames.indexOf(key)\r\n            if (columnIndex === -1) {\r\n              return null\r\n            }\r\n\r\n            switch (key) {\r\n              case 'details':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout>\r\n                        <Details actionPanelToggled={actionPanelToggled} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'apr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t('Total Earned APR')}>\r\n                        <TotalApr apr={props.apr.apr} farmApr={props.apr.farmApr} feeApr={props.apr.feeApr} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'farmApr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t('Farm APR')}>\r\n                        <Apr apr={props.farmApr} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'feeApr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t('LP Fee APR')}>\r\n                        <Apr apr={props.feeApr} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              default:\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\r\n                        {React.createElement(cells[key], props[key])}\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n            }\r\n          })}\r\n        </StyledTr>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <StyledTr onClick={toggleActionPanel}>\r\n        <td>\r\n          <tr>\r\n            <FarmMobileCell>\r\n              <CellLayout>\r\n                <Farm {...props.farm} />\r\n              </CellLayout>\r\n            </FarmMobileCell>\r\n          </tr>\r\n          <tr style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n            <EarnedMobileCell>\r\n              <CellLayout label={t('Earned')}>\r\n                <Earned {...props.earned} />\r\n              </CellLayout>\r\n            </EarnedMobileCell>\r\n            <AprMobileCell>\r\n              <CellLayout label={t('Farm APR')}>\r\n                <Apr apr={props?.apr?.farmApr} />\r\n              </CellLayout>\r\n            </AprMobileCell>\r\n            <AprMobileCell>\r\n              <CellLayout label={t('LP Fee APR')}>\r\n                <Apr apr={props?.apr?.feeApr} />\r\n              </CellLayout>\r\n            </AprMobileCell>\r\n          </tr>\r\n        </td>\r\n        <td>\r\n          <CellInner>\r\n            <CellLayout>\r\n              <Details actionPanelToggled={actionPanelToggled} />\r\n            </CellLayout>\r\n          </CellInner>\r\n        </td>\r\n      </StyledTr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {handleRenderRow()}\r\n      {actionPanelToggled && details && (\r\n        <tr>\r\n          <td colSpan={6}>\r\n            <ActionPanel {...props} />\r\n            <BoostPanel\r\n              pid={farm.pid}\r\n              tokenIds={nftTokenIds[farm.pid]}\r\n              boost={boosts[farm.pid]}\r\n              isApproved={isApproved}\r\n            />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, Button, ChevronUpIcon, ColumnType } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport Row, { RowProps } from './Row'\r\n\r\nexport interface ITableProps {\r\n  data: RowProps[]\r\n  columns: ColumnType<RowProps>[]\r\n  sortColumn?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  filter: ${({ theme }) => theme.card.dropShadow};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: 16px;\r\n  margin: 16px 0px;\r\n`\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow: visible;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n`\r\n\r\nconst TableBody = styled.tbody`\r\n  & tr {\r\n    td {\r\n      font-size: 16px;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`\r\n\r\nconst TableContainer = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst FarmTable: React.FC<ITableProps> = (props) => {\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const { t } = useTranslation()\r\n  const { data, columns } = props\r\n\r\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\r\n\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TableContainer>\r\n        <TableWrapper ref={tableWrapperEl}>\r\n          <StyledTable>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                return <Row {...row.original} key={`table-row-${row.id}`} />\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </TableWrapper>\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </TableContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FarmTable\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst FarmTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"primary\">\r\n        <ButtonMenuItem as={Link} to={`${url}`} style={{ borderRadius: '30px', width: '125px', fontWeight: 500 }}>\r\n          {t('Live')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem\r\n          as={Link}\r\n          to={`${url}/history`}\r\n          style={{ borderRadius: '30px', width: '125px', marginLeft: 0, fontWeight: 500 }}\r\n        >\r\n          {t('Finished')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n","import React, { useState, useRef } from 'react'\r\nimport { Input } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  ::placeholder {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 234px;\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  value: string\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const inputEl = useRef(null)\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          ref={inputEl}\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder={t('Search Farms')}\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from 'archerswap-uikit'\r\nimport { ViewMode } from '../types'\r\n\r\ninterface ToogleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToogleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from 'archerswap-uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOption, setSelectedOption] = useState(options[0])\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = () => setIsOpen(!isOpen)\r\n\r\n  const onOptionClicked = (option: OptionProps) => () => {\r\n    setSelectedOption(option)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(option)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <Text color=\"textSubtle\">{selectedOption.label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option) =>\r\n            option.label !== selectedOption.label ? (\r\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\r\n                <Text color=\"textSubtle\">{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport Countdown from 'react-countdown'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, RowType, Toggle, Text } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBowUsd, useGetApiPrices } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { Farm, FarmWithStakedValue } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getFarmApy } from 'utils/apy'\r\nimport { orderBy } from 'lodash'\r\nimport { START_TIMESTAMP } from 'config'\r\n\r\nimport FarmCard from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport Banner from '../../components/Banner'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport SearchInput from './components/SearchInput'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\nimport Select, { OptionProps } from './components/Select/Select'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Background = styled.div`\r\n  // width: 100%;\r\n  // background-image: url('/images/assets/bgf.svg');\r\n  // background-repeat: no-repeat;\r\n  // background-position: top 80px right;\r\n`\r\nconst NotifyContainer = styled.div`\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  & div {\r\n    margin-top: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst TimeTextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-size: 18px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\n// const StyledLinkExternal = styled(LinkExternal)`\r\n//   font-weight: 400;\r\n//   font-size: 22px;\r\n//   margin-left: 5px;\r\n// `\r\nconst countDownRenderer = ({ days, hours, minutes, seconds }) => {\r\n  return (\r\n    <TimeTextWrapper>\r\n      <div style={{ display: 'flex', flexDirection: 'row', marginRight: '5px' }}>\r\n        <p style={{ marginRight: '3px' }}>{days}</p>\r\n        <p>Days</p>\r\n      </div>\r\n      <div style={{ display: 'flex', flexDirection: 'row', marginRight: '5px' }}>\r\n        <p style={{ marginRight: '3px' }}>{hours}</p>\r\n        <p>Hours</p>\r\n      </div>\r\n      <div style={{ display: 'flex', flexDirection: 'row', marginRight: '5px' }}>\r\n        <p style={{ marginRight: '3px' }}>{minutes}</p>\r\n        <p>Mins</p>\r\n      </div>\r\n      <div style={{ display: 'flex', flexDirection: 'row', marginRight: '5px' }}>\r\n        <p style={{ marginRight: '3px' }}>{seconds}</p>\r\n        <p>Seconds</p>\r\n      </div>\r\n    </TimeTextWrapper>\r\n  )\r\n}\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { t } = useTranslation()\r\n  const farmsLP = useFarms()\r\n  const bowPrice = usePriceBowUsd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = useState(ViewMode.TABLE)\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState(t('hot'))\r\n  const prices = useGetApiPrices()\r\n  const [timestamp, setTimestamp] = useState(0)\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh, slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    setTimestamp(Math.floor(new Date().getTime() / 1000))\r\n  }, [fastRefresh])\r\n\r\n  const [stackedOnly, setStackedOnly] = useState(false)\r\n\r\n  const [dailyVolumeUSD, setDailyVolumeUSD] = useState([])\r\n\r\n  useEffect(() => {\r\n    const coingeckoApiUrl = 'https://api.coingecko.com/api/v3/exchanges/archerswap'\r\n    const fetch = async () => {\r\n      const response = await axios.get(coingeckoApiUrl)\r\n      if (response && response.status) {\r\n        setDailyVolumeUSD(\r\n          response.data.tickers.map((ticker: any) => ({\r\n            base: ticker.base,\r\n            target: ticker.target,\r\n            volume: ticker.converted_volume.usd,\r\n          })),\r\n        )\r\n      }\r\n    }\r\n\r\n    fetch()\r\n  }, [slowRefresh])\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.multiplier !== '0X')\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.multiplier === '0X')\r\n\r\n  const stackedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n  // const countdownllink = 'https://timestamp.online/countdown/1642525200'\r\n\r\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n    switch (sortOption) {\r\n      case 'farmApr':\r\n        return orderBy(farms, 'farmApr', 'desc')\r\n      case 'feeApr':\r\n        return orderBy(farms, 'feeApr', 'desc')\r\n      case 'multiplier':\r\n        return orderBy(\r\n          farms,\r\n          (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\r\n      case 'liquidity':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n      default:\r\n        return farms\r\n    }\r\n  }\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\r\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !prices || !farm.lpTokenBalanceMC) {\r\n          return farm\r\n        }\r\n\r\n        const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\r\n        const lpPrice = totalLiquidity.div(farm.lpTokenBalanceMC)\r\n        const farmApr = getFarmApy(farm.poolWeight, bowPrice, totalLiquidity, farm.tokenPerSecond)\r\n        const volumeObj = dailyVolumeUSD.filter(\r\n          (e) =>\r\n            (e.base.toLowerCase() === farm.token.address[1116].toLowerCase() &&\r\n              e.target.toLowerCase() === farm.quoteToken.address[1116].toLowerCase()) ||\r\n            (e.base.toLowerCase() === farm.quoteToken.address[1116].toLowerCase() &&\r\n              e.target.toLowerCase() === farm.token.address[1116].toLowerCase()),\r\n        )[0]\r\n        let feeApr = 0\r\n        if (volumeObj && quoteTokenPriceUsd && quoteTokenPriceUsd.gt(0)) {\r\n          feeApr =\r\n            (Number(volumeObj.volume) /\r\n              Number(new BigNumber(farm.quoteTokenAmount).times(2).times(quoteTokenPriceUsd).toString())) *\r\n            365 *\r\n            100 *\r\n            0.0005\r\n        }\r\n\r\n        return { ...farm, apy: farmApr + feeApr, feeApr, farmApr, liquidity: totalLiquidity, lpPrice }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = query.toLowerCase()\r\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\r\n          if (farm.lpSymbol.toLowerCase().includes(lowercaseQuery)) {\r\n            return true\r\n          }\r\n\r\n          return false\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPY\r\n    },\r\n    [bowPrice, prices, query, dailyVolumeUSD],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const isActive = !pathname.includes('history')\r\n  let farmsStaked = []\r\n  if (isActive) {\r\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms)\r\n  } else {\r\n    farmsStaked = farmsList(inactiveFarms)\r\n  }\r\n\r\n  farmsStaked = sortFarms(farmsStaked)\r\n\r\n  const rowData = farmsStaked.map((farm) => {\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].replace('ARCHER', '')\r\n\r\n    const row: RowProps = {\r\n      farmApr:\r\n        (farm.farmApr || farm.farmApr === 0) && farm.farmApr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n      feeApr: (farm.feeApr || farm.feeApr === 0) && farm.feeApr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n      apr: {\r\n        farmApr:\r\n          farm.farmApr || farm.farmApr === 0 ? farm.farmApr.toLocaleString('en-US', { maximumFractionDigits: 2 }) : '',\r\n        feeApr: (farm.feeApr || farm.feeApr === 0) && farm.feeApr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n        apr: (farm.farmApr + farm.feeApr).toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n      },\r\n      farm: {\r\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n      },\r\n      earned: {\r\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'farmApr':\r\n              if (a.original.farmApr && b.original.farmApr) {\r\n                return Number(a.original.farmApr) - Number(b.original.farmApr)\r\n              }\r\n\r\n              return 0\r\n            case 'feeApr':\r\n              if (a.original.feeApr && b.original.feeApr) {\r\n                return Number(a.original.feeApr) - Number(b.original.feeApr)\r\n              }\r\n\r\n              return 0\r\n            case 'apr':\r\n              if (a.original.apr && b.original.apr) {\r\n                return Number(a.original.apr) - Number(b.original.apr)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} />\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginTop: 16 }}>\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} bowPrice={bowPrice} account={account} removed={false} />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} bowPrice={bowPrice} account={account} removed />\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Banner\r\n        src=\"/images/assets/banners/farm_banner.png\"\r\n        mobileSrc=\"/images/assets/banners/mobile_farm_banner.png\"\r\n        alt=\"farm_banner\"\r\n        title={t('Farms')}\r\n        text={`${t('Stake LP tokens to earn BOW')}.`}\r\n      />\r\n\r\n      <Background>\r\n        <Page>\r\n          {timestamp !== 0 && timestamp <= START_TIMESTAMP && (\r\n            <NotifyContainer>\r\n              <Heading as=\"h2\" size=\"lg\" color=\"success\">\r\n                {t('BOW Farming Countdown')}\r\n              </Heading>\r\n              <div>\r\n                <Countdown date={new Date('Tue, 14 Mar 2023 15:30:00 +0000')} renderer={countDownRenderer} />\r\n              </div>\r\n              {/* <Flex alignItems=\"center\" mb=\"8px\">\r\n                <Text fontSize=\"20px\">{t(`The start farming timestamp is `)}</Text>\r\n                <StyledLinkExternal href={countdownllink}>{START_TIMESTAMP}</StyledLinkExternal>\r\n              </Flex> */}\r\n            </NotifyContainer>\r\n          )}\r\n          <ControlContainer>\r\n            <ViewControls>\r\n              <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n              <FarmTabButtons />\r\n              <ToggleWrapper>\r\n                <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} scale=\"sm\" />\r\n                <Text color=\"textSubtle\"> {t('Staked only')}</Text>\r\n              </ToggleWrapper>\r\n            </ViewControls>\r\n            <FilterContainer>\r\n              <LabelWrapper>\r\n                <Text color=\"textSubtle\" textTransform=\"uppercase\">\r\n                  {t('Sort by')}\r\n                </Text>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('Farm APR'),\r\n                      value: 'farmApr',\r\n                    },\r\n                    {\r\n                      label: t('LP Fee APR'),\r\n                      value: 'feeApr',\r\n                    },\r\n                    {\r\n                      label: t('Multiplier'),\r\n                      value: 'multiplier',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Liquidity'),\r\n                      value: 'liquidity',\r\n                    },\r\n                  ]}\r\n                  onChange={handleSortOptionChange}\r\n                />\r\n              </LabelWrapper>\r\n              <LabelWrapper style={{ marginLeft: 16 }}>\r\n                <Text color=\"textSubtle\" textTransform=\"uppercase\">\r\n                  {t('Search')}\r\n                </Text>\r\n                <SearchInput onChange={handleChangeQuery} value={query} />\r\n              </LabelWrapper>\r\n            </FilterContainer>\r\n          </ControlContainer>\r\n          {renderContent()}\r\n        </Page>\r\n      </Background>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"],"sourceRoot":""}