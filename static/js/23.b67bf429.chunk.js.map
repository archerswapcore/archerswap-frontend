{"version":3,"sources":["components/archer/CoinLogo.ts","components/CurrencyLogo/index.tsx","state/wallet/hooks.ts","components/Shared/Common.tsx","utils/wrappedCurrency.ts","components/Logo/index.tsx","components/Card/index.tsx","data/Reserves.ts","state/transactions/hooks.tsx","components/DoubleLogo/index.tsx","components/CardNav/index.tsx","utils/currencyId.ts","data/TotalSupply.ts","components/PositionCard/index.tsx","components/PageHeader/SlippageToleranceSetting.tsx","components/PageHeader/TransactionDeadlineSetting.tsx","components/PageHeader/ExpertModeSetting.tsx","components/PageHeader/SettingsModal.tsx","components/PageHeader/RecentTransactionsModal.tsx","components/PageHeader/index.tsx","../node_modules/react-feather/dist/icons/help-circle.js","views/Pool/index.tsx"],"names":["CoinLogo","styled","Logo","size","getTokenLogoURLForMetamask","symbol","StyledCoreLogo","img","StyledLogo","CurrencyLogo","currency","style","srcs","WrappedTokenInfo","tokenInfo","logoURI","undefined","ETHER","src","alt","useTokenBalancesWithLoadingIndicator","address","tokens","validatedTokens","useMemo","filter","t","isAddress","validatedTokenAddresses","map","vt","balances","useMultipleContractSingleData","ERC20_INTERFACE","anyLoading","some","callState","loading","length","reduce","memo","token","i","value","result","amount","JSBI","BigInt","toString","TokenAmount","useTokenBalances","useTokenBalance","account","tokenBalances","useCurrencyBalances","currencies","Token","ethBalance","uncheckedAddresses","multicallContract","useMulticallContract","addresses","a","sort","results","useSingleContractMultipleData","CurrencyAmount","ether","useETHBalances","useCurrencyBalance","useAllTokenBalances","useActiveWeb3React","allTokens","useAllTokens","Object","values","LinkStyledButton","button","disabled","theme","colors","textSubtle","primary","StyledInternalLink","Link","StyledLink","ExternalLink","target","href","rel","rest","handleClick","useCallback","event","ctrlKey","metaKey","preventDefault","onClick","rotate","keyframes","Spinner","wrappedCurrency","chainId","WETH","wrappedCurrencyAmount","currencyAmount","raw","unwrappedToken","equals","BAD_SRCS","useState","refresh","find","s","onError","Card","div","padding","border","LightCard","borderColor","background","GreyCard","tertiary","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencyA","currencyB","pairAddresses","tokenA","tokenB","Pair","getAddress","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","usePair","useTransactionAdder","dispatch","useDispatch","response","summary","approval","hash","Error","addTransaction","from","useAllTransactions","state","useSelector","transactions","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","tokenAddress","spender","allTransactions","keys","receipt","Wrapper","sizeraw","margin","text","HigherLogo","CoveredLogo","DoubleCurrencyLogo","currency0","currency1","marginLeft","StyledNav","TabContainer","TabItem","props","active","Bridge","Nav","activeIndex","React","activeTab","useTranslation","id","to","isMobile","currencyId","useTotalSupply","contract","useTokenContract","totalSupply","useSingleCallResult","FixedHeightRow","RowBetween","HoverCard","invertedContrast","darken","MinimalPositionCard","pair","showUnwrapped","showMore","setShowMore","userPoolBalance","liquidityToken","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","gap","textTransform","fontWeight","fontSize","color","toSignificant","ml","FullPositionCard","poolTokenPercentage","Percent","cursor","toFixed","marginTop","as","width","StyledSlippageToleranceSettings","Option","Options","mediaQueries","sm","Label","predefinedValues","label","SlippageToleranceSettings","useUserSlippageTolerance","userSlippageTolerance","setUserslippageTolerance","setValue","error","setError","useEffect","rawValue","Number","isNaN","QuestionHelper","mb","mr","predefinedValue","variant","alignItems","type","scale","step","min","placeholder","onChange","evt","inputValue","parseFloat","isWarning","mt","StyledTransactionDeadlineSetting","Field","Input","Text","TransactionDeadlineSetting","useUserDeadline","deadline","setDeadline","parseInt","ExpertModeSetting","useExpertModeManager","isExpertMode","toggleSetExpertMode","checked","defaultOnDismiss","SettingsModal","onDismiss","title","SlippageToleranceSetting","newTransactionsFirst","b","RecentTransactionsModal","sortedRecentTransactions","justifyContent","flexDirection","bold","sortedRecentTransaction","status","icon","Loader","getRowStatus","getSnowtraceLink","HistoryIcon","height","viewBox","d","fill","StyledPageHeader","Details","PageHeader","description","isShowSetting","children","useModal","onPresentSettings","onPresentRecentTransactions","_extends","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","HelpCircle","forwardRef","_ref","ref","_ref$color","_ref$size","createElement","xmlns","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","Pool","useContext","ThemeContext","TranslateString","useI18n","trackedTokenPairs","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","toV2LiquidityToken","liquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","greaterThan","v2Pairs","v2IsLoading","V2Pair","allV2PairsWithLiquidity","v2Pair","Boolean","isDark","useTheme","justify","textAlign"],"mappings":"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","file":"static/js/23.b67bf429.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport Logo from '../Logo'\r\n\r\nconst CoinLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default CoinLogo\r\n","import { Currency, ETHER } from 'archerswap-sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport Logo from '../Logo'\r\nimport CoinLogo from '../archer/CoinLogo'\r\n\r\nexport const getTokenLogoURLForMetamask = (symbol: string) => {\r\n  return `https://archerswap.finance/images/coins/${symbol}.png`\r\n}\r\n\r\nconst StyledCoreLogo = styled.img<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\r\n  border-radius: 24px;\r\n`\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const srcs: string[] = [currency instanceof WrappedTokenInfo ? currency.tokenInfo.logoURI : undefined]\r\n  if (currency === ETHER) {\r\n    return <StyledCoreLogo src=\"/images/coins/core.png\" size={size} style={style} />\r\n  }\r\n\r\n  return (currency as any)?.symbol ? (\r\n    <CoinLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n  ) : (\r\n    <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n  )\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport ERC20_INTERFACE from '../../constants/abis/erc20'\r\nimport { useAllTokens } from '../../hooks/Tokens'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport { isAddress } from '../../utils'\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\r\n\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent ETH balances.\r\n */\r\nexport function useETHBalances(\r\n  uncheckedAddresses?: (string | undefined)[],\r\n): {\r\n  [address: string]: CurrencyAmount | undefined\r\n} {\r\n  const multicallContract = useMulticallContract()\r\n\r\n  const addresses: string[] = useMemo(\r\n    () =>\r\n      uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a): a is string => a !== false)\r\n            .sort()\r\n        : [],\r\n    [uncheckedAddresses],\r\n  )\r\n\r\n  const results = useSingleContractMultipleData(\r\n    multicallContract,\r\n    'getEthBalance',\r\n    addresses.map((address) => [address]),\r\n  )\r\n\r\n  return useMemo(\r\n    () =>\r\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\r\n        const value = results?.[i]?.result?.[0]\r\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\r\n        return memo\r\n      }, {}),\r\n    [addresses, results],\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\r\n  const validatedTokens: Token[] = useMemo(\r\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\r\n    [tokens],\r\n  )\r\n\r\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\r\n\r\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\r\n\r\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\r\n\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        address && validatedTokens.length > 0\r\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\r\n              const value = balances?.[i]?.result?.[0]\r\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n              if (amount) {\r\n                memo[token.address] = new TokenAmount(token, amount)\r\n              }\r\n              return memo\r\n            }, {})\r\n          : {},\r\n      [address, validatedTokens, balances],\r\n    ),\r\n    anyLoading,\r\n  ]\r\n}\r\n\r\nexport function useTokenBalances(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\r\n}\r\n\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\r\n  const tokenBalances = useTokenBalances(account, [token])\r\n  if (!token) return undefined\r\n  return tokenBalances[token.address]\r\n}\r\n\r\nexport function useCurrencyBalances(\r\n  account?: string,\r\n  currencies?: (Currency | undefined)[],\r\n): (CurrencyAmount | undefined)[] {\r\n  const tokens = useMemo(() => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [], [\r\n    currencies,\r\n  ])\r\n\r\n  const tokenBalances = useTokenBalances(account, tokens)\r\n  const containsETH: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\r\n  const ethBalance = useETHBalances(containsETH ? [account] : [])\r\n\r\n  return useMemo(\r\n    () =>\r\n      currencies?.map((currency) => {\r\n        if (!account || !currency) return undefined\r\n        if (currency instanceof Token) return tokenBalances[currency.address]\r\n        if (currency === ETHER) return ethBalance[account]\r\n        return undefined\r\n      }) ?? [],\r\n    [account, currencies, ethBalance, tokenBalances],\r\n  )\r\n}\r\n\r\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  return useCurrencyBalances(account, [currency])[0]\r\n}\r\n\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  const { account } = useActiveWeb3React()\r\n  const allTokens = useAllTokens()\r\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\r\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\r\n  return balances ?? {}\r\n}\r\n","import React, { HTMLProps, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\n// A button that triggers some onClick result, but looks like a link.\r\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\r\n  border: none;\r\n  text-decoration: none;\r\n  background: none;\r\n\r\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\r\n  color: ${({ theme, disabled }) => (disabled ? theme.colors.textSubtle : theme.colors.primary)};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n// An internal link from the react-router-dom library that is correctly styled\r\nexport const StyledInternalLink = styled(Link)`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n/**\r\n * Outbound link that handles firing google analytics events\r\n */\r\nexport function ExternalLink({\r\n  target = '_blank',\r\n  href,\r\n  rel = 'noopener noreferrer',\r\n  ...rest\r\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n      if (!(target === '_blank' || event.ctrlKey || event.metaKey)) {\r\n        event.preventDefault()\r\n      }\r\n    },\r\n    [target],\r\n  )\r\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\r\n}\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nexport const Spinner = styled.img`\r\n  animation: 2s ${rotate} linear infinite;\r\n  width: 16px;\r\n  height: 16px;\r\n`\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from 'archerswap-sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  // eslint-disable-next-line no-nested-ternary\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import React, { useState } from 'react'\r\nimport { HelpCircle } from 'react-feather'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps {\r\n  alt?: string\r\n  style?: any\r\n  className?: string\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpCircle {...rest} />\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<any>`\r\n  width: 100%;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)<{ isDark: boolean }>`\r\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n`\r\n","import { TokenAmount, Pair, Currency } from 'archerswap-sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { useActiveWeb3React } from '../hooks'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import { TransactionResponse } from '@ethersproject/providers'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addTransaction } from './actions'\r\nimport { TransactionDetails } from './reducer'\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return\r\n      if (!chainId) return\r\n\r\n      const { hash } = response\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.')\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }))\r\n    },\r\n    [dispatch, chainId, account],\r\n  )\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  return chainId ? state[chainId] ?? {} : {}\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions()\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false\r\n\r\n  return !transactions[transactionHash].receipt\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions()\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash]\r\n        if (!tx) return false\r\n        if (tx.receipt) {\r\n          return false\r\n        }\r\n        const { approval } = tx\r\n        if (!approval) return false\r\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  )\r\n}\r\n","import { Currency } from 'archerswap-sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ sizeraw, margin }) => margin && `${(sizeraw / 3 + 8).toString()}px`};\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nconst HigherLogo = styled(CurrencyLogo)`\r\n  z-index: 2;\r\n`\r\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\r\n  position: absolute;\r\n  left: ${({ sizeraw }) => `${(sizeraw / 2).toString()}px`};\r\n`\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 16,\r\n  margin = false,\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper sizeraw={size} margin={margin}>\r\n      {currency0 && <HigherLogo currency={currency0} size={`${size.toString()}px`} />}\r\n      {currency1 && (\r\n        <CoveredLogo currency={currency1} size={`${size.toString()}px`} sizeraw={size} style={{ marginLeft: 8 }} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n// import { ButtonMenu, ButtonMenuItem } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nconst StyledNav = styled.div`\r\n  margin-bottom: 40px;\r\n`\r\nconst TabContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst TabItem = styled(Link)<{ active: boolean }>`\r\n  display: flex;\r\n  padding: 11px 35px;\r\n  // background: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.tertiary)};\r\n  background: ${(props) => props.theme.colors.tertiary};\r\n  border-radius: 32px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  // color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\r\n  color: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.textSubtle)};\r\n  z-index: ${(props) => (props.active ? '1' : '0')};\r\n  margin: 32px -18px;\r\n  cursor: pointer;\r\n\r\n  // &:hover {\r\n  //   color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\r\n  // }\r\n  @media (max-width: 768px) {\r\n    padding: 11px 35px;\r\n    margin: 40px -18px;\r\n    border-radius: 28px !important;\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst Bridge = styled.a<{ active: boolean }>`\r\n  display: flex;\r\n  padding: 11px 35px;\r\n  // background: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.tertiary)};\r\n  background: ${(props) => props.theme.colors.tertiary};\r\n  border-radius: 32px;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  // color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\r\n  color: ${(props) => (props.active ? '#EAAA08' : props.theme.colors.textSubtle)};\r\n  z-index: ${(props) => (props.active ? '1' : '0')};\r\n  margin: 32px -18px;\r\n  cursor: pointer;\r\n\r\n  // &:hover {\r\n  //   color: ${(props) => (props.active ? '#ffffff' : props.theme.colors.textSubtle)};\r\n  // }\r\n  @media (max-width: 768px) {\r\n    padding: 11px 35px;\r\n    margin: 40px -18px;\r\n    border-radius: 28px !important;\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nfunction Nav({ activeIndex = 0 }: { activeIndex?: number }) {\r\n  /* eslint-disable @typescript-eslint/no-unused-vars */\r\n  const [activeTab, setActiveTab] = React.useState(activeIndex)\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledNav>\r\n      <TabContainer>\r\n        <TabItem active={activeTab === 0} id=\"swap-nav-link\" to=\"/swap\">\r\n          {t('Swap')}\r\n        </TabItem>\r\n        <TabItem active={activeTab === 1} id=\"pool-nav-link\" to=\"/pool\">\r\n          {t('Liquidity')}\r\n        </TabItem>\r\n        <TabItem active={activeTab === 2} id=\"TabItem-nav-link\" to=\"/cross-swap\">\r\n          {isMobile ? t('Cross') : t('Cross Swap')}\r\n        </TabItem>\r\n        <Bridge active={activeTab === 3} id=\"bridge-nav-link\" href=\"https://bridge.coredao.org/bridge\" target=\"_blank\">\r\n          {t('Bridge')}\r\n        </Bridge>\r\n        {/* <ButtonMenuItem id=\"zapin-nav-link\" to=\"/zap\" as={Link} style={{ borderRadius: '30px' }}>\r\n          {TranslateString(92, 'Zap')}\r\n        </ButtonMenuItem> */}\r\n      </TabContainer>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import { Currency, ETHER, Token } from 'archerswap-sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'CORE'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from 'archerswap-sdk'\r\nimport { useTokenContract } from '../hooks/useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n","import React, { useState } from 'react'\r\nimport { JSBI, Pair, Percent } from 'archerswap-sdk'\r\nimport { Button, Card as UIKitCard, CardBody, Text } from 'archerswap-uikit'\r\nimport { darken } from 'polished'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useTotalSupply } from '../../data/TotalSupply'\r\n\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\r\nimport Card from '../Card'\r\nimport { AutoColumn } from '../Column'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\nimport DoubleCurrencyLogo from '../DoubleLogo'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { Dots } from '../swap/styleds'\r\n\r\nexport const FixedHeightRow = styled(RowBetween)`\r\n  height: 24px;\r\n`\r\n\r\nexport const HoverCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\r\n  :hover {\r\n    border: 1px solid ${({ theme }) => darken(0.06, theme.colors.invertedContrast)};\r\n  }\r\n`\r\n\r\ninterface PositionCardProps {\r\n  pair: Pair\r\n  // eslint-disable-next-line react/no-unused-prop-types\r\n  showUnwrapped?: boolean\r\n}\r\n\r\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <>\r\n      {userPoolBalance && (\r\n        <UIKitCard>\r\n          <CardBody>\r\n            <AutoColumn gap=\"12px\">\r\n              <FixedHeightRow>\r\n                <RowFixed>\r\n                  <Text style={{ textTransform: 'uppercase', fontWeight: 600 }} fontSize=\"14px\" color=\"textSubtle\">\r\n                    LP Tokens in your Wallet\r\n                  </Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n                  <Text fontSize=\"14px\">\r\n                    {currency0.symbol}/{currency1.symbol}\r\n                  </Text>\r\n                </RowFixed>\r\n                <RowFixed>\r\n                  <Text fontSize=\"14px\">{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <AutoColumn gap=\"4px\">\r\n                <FixedHeightRow>\r\n                  <Text fontSize=\"14px\">{currency0.symbol}:</Text>\r\n                  {token0Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\" fontSize=\"14px\">\r\n                        {token0Deposited?.toSignificant(6)}\r\n                      </Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text fontSize=\"14px\">{currency1.symbol}:</Text>\r\n                  {token1Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\" fontSize=\"14px\">\r\n                        {token1Deposited?.toSignificant(6)}\r\n                      </Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n              </AutoColumn>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </UIKitCard>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function FullPositionCard({ pair }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = unwrappedToken(pair.token0)\r\n  const currency1 = unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n  const { t } = useTranslation()\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <HoverCard>\r\n      <AutoColumn gap=\"12px\">\r\n        <FixedHeightRow onClick={() => setShowMore(!showMore)} style={{ cursor: 'pointer' }}>\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n            <Text>{!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}</Text>\r\n          </RowFixed>\r\n          <RowFixed>\r\n            {showMore ? (\r\n              <ChevronUp size=\"20\" style={{ marginLeft: '10px' }} />\r\n            ) : (\r\n              <ChevronDown size=\"20\" style={{ marginLeft: '10px' }} />\r\n            )}\r\n          </RowFixed>\r\n        </FixedHeightRow>\r\n        {showMore && (\r\n          <AutoColumn gap=\"8px\">\r\n            <FixedHeightRow>\r\n              <RowFixed>\r\n                <Text>Pooled {currency0.symbol}:</Text>\r\n              </RowFixed>\r\n              {token0Deposited ? (\r\n                <RowFixed>\r\n                  <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </FixedHeightRow>\r\n\r\n            <FixedHeightRow>\r\n              <RowFixed>\r\n                <Text>Pooled {currency1.symbol}:</Text>\r\n              </RowFixed>\r\n              {token1Deposited ? (\r\n                <RowFixed>\r\n                  <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\r\n                </RowFixed>\r\n              ) : (\r\n                '-'\r\n              )}\r\n            </FixedHeightRow>\r\n            <FixedHeightRow>\r\n              <Text>Your pool tokens:</Text>\r\n              <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n            </FixedHeightRow>\r\n            <FixedHeightRow>\r\n              <Text>Your pool share:</Text>\r\n              <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(2)}%` : '-'}</Text>\r\n            </FixedHeightRow>\r\n\r\n            <RowBetween marginTop=\"10px\">\r\n              <Button as={Link} to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`} style={{ width: '48%' }}>\r\n                {t('Add')}\r\n              </Button>\r\n              <Button\r\n                as={Link}\r\n                style={{ width: '48%' }}\r\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n              >\r\n                {t('Remove')}\r\n              </Button>\r\n            </RowBetween>\r\n          </AutoColumn>\r\n        )}\r\n      </AutoColumn>\r\n    </HoverCard>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Flex, Input, Text } from 'archerswap-uikit'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\nconst MAX_SLIPPAGE = 5000\r\nconst RISKY_SLIPPAGE_LOW = 50\r\nconst RISKY_SLIPPAGE_HIGH = 500\r\n\r\nconst StyledSlippageToleranceSettings = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Option = styled.div`\r\n  padding: 0 4px;\r\n`\r\n\r\nconst Options = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${Option}:first-child {\r\n    padding-left: 0;\r\n  }\r\n\r\n  ${Option}:last-child {\r\n    padding-right: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst Label = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst predefinedValues = [\r\n  { label: '0.1%', value: 0.1 },\r\n  { label: '0.5%', value: 0.5 },\r\n  { label: '1%', value: 1 },\r\n]\r\n\r\nconst SlippageToleranceSettings = () => {\r\n  const { t } = useTranslation()\r\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\r\n  const [value, setValue] = useState(userSlippageTolerance / 100)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(parseFloat(inputValue))\r\n  }\r\n\r\n  // Updates local storage if value is valid\r\n  useEffect(() => {\r\n    try {\r\n      const rawValue = value * 100\r\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\r\n        setUserslippageTolerance(rawValue)\r\n        setError(null)\r\n      } else {\r\n        setError(t('Enter a valid slippage percentage'))\r\n      }\r\n    } catch {\r\n      setError(t('Enter a valid slippage percentage'))\r\n    }\r\n  }, [value, setError, setUserslippageTolerance, t])\r\n\r\n  // Notify user if slippage is risky\r\n  useEffect(() => {\r\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\r\n      setError(t('Your transaction may fail'))\r\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\r\n      setError(t('Your transaction may be frontrun'))\r\n    }\r\n  }, [userSlippageTolerance, setError, t])\r\n\r\n  return (\r\n    <StyledSlippageToleranceSettings>\r\n      <Label>\r\n        <Text style={{ fontWeight: 600 }}>{t('Slippage tolerance')}</Text>\r\n        <QuestionHelper\r\n          text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\r\n        />\r\n      </Label>\r\n      <Options>\r\n        <Flex mb={['8px', 0]} mr={[0, '8px']}>\r\n          {predefinedValues.map(({ label, value: predefinedValue }) => {\r\n            const handleClick = () => setValue(predefinedValue)\r\n\r\n            return (\r\n              <Option key={predefinedValue}>\r\n                <Button variant={value === predefinedValue ? 'primary' : 'tertiary'} onClick={handleClick}>\r\n                  {label}\r\n                </Button>\r\n              </Option>\r\n            )\r\n          })}\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <Option>\r\n            <Input\r\n              type=\"number\"\r\n              scale=\"lg\"\r\n              step={0.1}\r\n              min={0.1}\r\n              placeholder=\"5%\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              isWarning={error !== null}\r\n            />\r\n          </Option>\r\n          <Option>\r\n            <Text fontSize=\"18px\">%</Text>\r\n          </Option>\r\n        </Flex>\r\n      </Options>\r\n      {error && (\r\n        <Text mt=\"8px\" color=\"failure\">\r\n          {error}\r\n        </Text>\r\n      )}\r\n    </StyledSlippageToleranceSettings>\r\n  )\r\n}\r\n\r\nexport default SlippageToleranceSettings\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Input, Text } from 'archerswap-uikit'\r\nimport { useUserDeadline } from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\nconst StyledTransactionDeadlineSetting = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst Field = styled.div`\r\n  align-items: center;\r\n  display: inline-flex;\r\n\r\n  & > ${Input} {\r\n    max-width: 100px;\r\n  }\r\n\r\n  & > ${Text} {\r\n    font-size: 14px;\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst TransactionDeadlineSetting = () => {\r\n  const { t } = useTranslation()\r\n  const [deadline, setDeadline] = useUserDeadline()\r\n  const [value, setValue] = useState(deadline / 60) // deadline in minutes\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(parseInt(inputValue, 10))\r\n  }\r\n\r\n  // Updates local storage if value is valid\r\n  useEffect(() => {\r\n    try {\r\n      const rawValue = value * 60\r\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\r\n        setDeadline(rawValue)\r\n        setError(null)\r\n      } else {\r\n        setError(t('Enter a valid deadline'))\r\n      }\r\n    } catch {\r\n      setError(t('Enter a valid deadline'))\r\n    }\r\n  }, [value, setError, setDeadline, t])\r\n\r\n  return (\r\n    <StyledTransactionDeadlineSetting>\r\n      <Label>\r\n        <Text style={{ fontWeight: 600 }}>{t('Transaction deadline')}</Text>\r\n        <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} />\r\n      </Label>\r\n      <Field>\r\n        <Input type=\"number\" step=\"1\" min=\"1\" value={value} onChange={handleChange} />\r\n        <Text>{t('Minutes')}</Text>\r\n      </Field>\r\n      {error && (\r\n        <Text mt=\"8px\" color=\"failure\">\r\n          {error}\r\n        </Text>\r\n      )}\r\n    </StyledTransactionDeadlineSetting>\r\n  )\r\n}\r\n\r\nexport default TransactionDeadlineSetting\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Toggle } from 'archerswap-uikit'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst Label = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst ExpertModeSetting = () => {\r\n  const { t } = useTranslation()\r\n  const [isExpertMode, toggleSetExpertMode] = useExpertModeManager()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>\r\n        <Text style={{ fontWeight: 600 }}>{t('Expert Mode')}</Text>\r\n        <QuestionHelper\r\n          text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\r\n        />\r\n      </Label>\r\n      <Toggle checked={isExpertMode} onChange={() => toggleSetExpertMode()} scale=\"sm\" />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ExpertModeSetting\r\n","import React from 'react'\r\nimport { Modal } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SlippageToleranceSetting from './SlippageToleranceSetting'\r\nimport TransactionDeadlineSetting from './TransactionDeadlineSetting'\r\nimport ExpertModeSetting from './ExpertModeSetting'\r\n\r\ntype SettingsModalProps = {\r\n  onDismiss?: () => void\r\n}\r\n\r\n// TODO: Fix UI Kit typings\r\nconst defaultOnDismiss = () => null\r\n\r\nconst SettingsModal = ({ onDismiss = defaultOnDismiss }: SettingsModalProps) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Modal title={t('Settings')} onDismiss={onDismiss}>\r\n      <SlippageToleranceSetting />\r\n      <TransactionDeadlineSetting />\r\n      <ExpertModeSetting />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n","import React, { useMemo } from 'react'\r\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from 'archerswap-uikit'\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { getSnowtraceLink } from 'utils'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport Loader from 'components/Loader'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ntype RecentTransactionsModalProps = {\r\n  onDismiss?: () => void\r\n}\r\n\r\n// TODO: Fix UI Kit typings\r\nconst defaultOnDismiss = () => null\r\n\r\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\r\n\r\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\r\n  const { hash, receipt } = sortedRecentTransaction\r\n\r\n  if (!hash) {\r\n    return { icon: <Loader />, color: 'text' }\r\n  }\r\n\r\n  if (hash && receipt?.status === 1) {\r\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\r\n  }\r\n\r\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\r\n}\r\n\r\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss }: RecentTransactionsModalProps) => {\r\n  const { t } = useTranslation()\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  // Logic taken from Web3Status/index.tsx line 175\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  return (\r\n    <Modal title={t('Recent transactions')} onDismiss={onDismiss}>\r\n      {!account && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            {t('Please connect your wallet to view your recent transactions')}\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            {t('Close')}\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account && chainId && sortedRecentTransactions.length === 0 && (\r\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Text mb=\"8px\" bold>\r\n            {t('No recent transactions')}\r\n          </Text>\r\n          <Button variant=\"tertiary\" scale=\"sm\" onClick={onDismiss}>\r\n            {t('Close')}\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n      {account &&\r\n        chainId &&\r\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\r\n          const { hash, summary } = sortedRecentTransaction\r\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\r\n\r\n          return (\r\n            <>\r\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n                <LinkExternal href={getSnowtraceLink(chainId, hash, 'transaction')} color={color}>\r\n                  {summary ?? hash}\r\n                </LinkExternal>\r\n                {icon}\r\n              </Flex>\r\n            </>\r\n          )\r\n        })}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RecentTransactionsModal\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, IconButton, Text, Flex, useModal, CogIcon, Svg } from 'archerswap-uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SettingsModal from './SettingsModal'\r\nimport RecentTransactionsModal from './RecentTransactionsModal'\r\n\r\ninterface PageHeaderProps {\r\n  title: ReactNode\r\n  description?: ReactNode\r\n  isShowSetting?: boolean\r\n  children?: ReactNode\r\n}\r\n\r\nconst HistoryIcon = () => (\r\n  <Svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n    <path\r\n      d=\"M13 3C8.03 3 4 7.03 4 12H1L4.89 15.89L4.96 16.03L9 12H6C6 8.13 9.13 5 13 5C16.87 5 20 8.13 20 12C20 15.87 16.87 19 13 19C11.07 19 9.32 18.21 8.06 16.94L6.64 18.36C8.27 19.99 10.51 21 13 21C17.97 21 22 16.97 22 12C22 7.03 17.97 3 13 3ZM12 8V13L16.28 15.54L17 14.33L13.5 12.25V8H12Z\"\r\n      fill=\"#EAAA08\"\r\n    />\r\n  </Svg>\r\n)\r\n\r\nconst StyledPageHeader = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  padding: 24px;\r\n`\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst PageHeader = ({ title, description, isShowSetting = true, children }: PageHeaderProps) => {\r\n  const { t } = useTranslation()\r\n  const [onPresentSettings] = useModal(<SettingsModal />)\r\n  const [onPresentRecentTransactions] = useModal(<RecentTransactionsModal />)\r\n\r\n  return (\r\n    <StyledPageHeader>\r\n      <Flex alignItems=\"center\">\r\n        <Details>\r\n          <Heading mb=\"8px\" color=\"text\">\r\n            {title}\r\n          </Heading>\r\n          {description && (\r\n            <Text color=\"textDisabled\" fontSize=\"14px\">\r\n              {description}\r\n            </Text>\r\n          )}\r\n        </Details>\r\n        {isShowSetting && (\r\n          <IconButton variant=\"text\" onClick={onPresentSettings} title={t('Settings')}>\r\n            <CogIcon width=\"24px\" color=\"#EAAA08\" />\r\n          </IconButton>\r\n        )}\r\n        {isShowSetting && (\r\n          <IconButton variant=\"text\" onClick={onPresentRecentTransactions} title={t('Recent transactions')}>\r\n            <HistoryIcon />\r\n          </IconButton>\r\n        )}\r\n      </Flex>\r\n      {children && <Text mt=\"16px\">{children}</Text>}\r\n    </StyledPageHeader>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar HelpCircle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"17\",\n    x2: \"12.01\",\n    y2: \"17\"\n  }));\n});\nHelpCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nHelpCircle.displayName = 'HelpCircle';\nexport default HelpCircle;","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { Pair } from 'archerswap-sdk'\r\nimport { Button, CardBody, Text } from 'archerswap-uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport CardNav from 'components/CardNav'\r\nimport Question from 'components/QuestionHelper'\r\nimport FullPositionCard from 'components/PositionCard'\r\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\r\nimport { StyledInternalLink } from 'components/Shared'\r\nimport { LightCard } from 'components/Card'\r\nimport { RowBetween } from 'components/Row'\r\nimport { AutoColumn } from 'components/Column'\r\n\r\nimport { useActiveWeb3React } from 'hooks'\r\nimport { usePairs } from 'data/Reserves'\r\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\r\nimport { Dots } from 'components/swap/styleds'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PageHeader from 'components/PageHeader'\r\nimport AppBody from '../AppBody'\r\nimport useTheme from '../../hooks/useTheme'\r\n\r\nconst StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`\r\n\r\nexport default function Pool() {\r\n  const theme = useContext(ThemeContext)\r\n  const { account } = useActiveWeb3React()\r\n  const TranslateString = useI18n()\r\n  const { t } = useTranslation()\r\n\r\n  // fetch the user's balances of all tracked V2 LP tokens\r\n  const trackedTokenPairs = useTrackedTokenPairs()\r\n  const tokenPairsWithLiquidityTokens = useMemo(\r\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\r\n    [trackedTokenPairs],\r\n  )\r\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\r\n    tokenPairsWithLiquidityTokens,\r\n  ])\r\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\r\n    account ?? undefined,\r\n    liquidityTokens,\r\n  )\r\n\r\n  // fetch the reserves for all V2 pools in which the user has a balance\r\n  const liquidityTokensWithBalances = useMemo(\r\n    () =>\r\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\r\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0'),\r\n      ),\r\n    [tokenPairsWithLiquidityTokens, v2PairsBalances],\r\n  )\r\n\r\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\r\n  const v2IsLoading =\r\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\r\n\r\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\r\n  const { isDark } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <CardNav activeIndex={1} />\r\n      <AppBody>\r\n        <PageHeader title={t('Liquidity')} description={t('Add liquidity to receive LP tokens')}>\r\n          <Button style={{ width: '100%' }} id=\"join-pool-button\" as={StyledLink} to=\"/add/CORE\">\r\n            {t('Add Liquidity')}\r\n          </Button>\r\n        </PageHeader>\r\n        <AutoColumn gap=\"lg\" justify=\"center\">\r\n          <CardBody>\r\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\r\n              <RowBetween padding=\"0 8px\">\r\n                <Text color={theme.colors.text}>{t('Your Liquidity')}</Text>\r\n                <Question\r\n                  text={t(\r\n                    'When you add liquidity, you are given pool tokens that represent your share. If you don’t see a pool you joined in this list, try importing a pool below.',\r\n                  )}\r\n                />\r\n              </RowBetween>\r\n\r\n              {!account ? (\r\n                <LightCard isDark={isDark} padding=\"40px\">\r\n                  <Text color=\"textDisabled\" textAlign=\"center\">\r\n                    {TranslateString(156, 'Connect to a wallet to view your liquidity.')}\r\n                  </Text>\r\n                </LightCard>\r\n              ) : v2IsLoading ? (\r\n                <LightCard isDark={isDark} padding=\"40px\">\r\n                  <Text color=\"textDisabled\" textAlign=\"center\">\r\n                    <Dots>Loading</Dots>\r\n                  </Text>\r\n                </LightCard>\r\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\r\n                <>\r\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\r\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <LightCard isDark={isDark} padding=\"40px\">\r\n                  <Text color=\"textDisabled\" textAlign=\"center\">\r\n                    {t('No liquidity found.')}\r\n                  </Text>\r\n                </LightCard>\r\n              )}\r\n\r\n              <div>\r\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\r\n                  {t(\"Don't see a pool you joined?\")}{' '}\r\n                  <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\r\n                    {t('Import it.')}\r\n                  </StyledInternalLink>\r\n                </Text>\r\n                <Text color=\"textSubtle\" fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }}>\r\n                  {t('Or, if you staked your LP tokens in a farm, unstake them to see them here.')}\r\n                </Text>\r\n              </div>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </AutoColumn>\r\n      </AppBody>\r\n    </>\r\n  )\r\n}\r\n"],"sourceRoot":""}