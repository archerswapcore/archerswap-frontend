{"version":3,"sources":["hooks/useTokenBalance.ts","views/Farms/components/Tooltip/Tooltip.tsx","components/Bridge/Select/Select.tsx","components/Bridge/TokenModal/TokenModal.tsx","components/Svg/Swap.tsx","views/Bridge/Bridge.tsx","hooks/useAnyswapV5Router.ts"],"names":["useETHBalance","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","eth","getBalance","res","fetchBalance","useWcoreBalance","contract","getBep20Contract","tokens","wcore","address","methods","balanceOf","call","useTokenAllowance","tokenAddress","targetAddress","allowance","setAllowance","useApprove","approvePending","setApprovePending","onApprove","useCallback","contractAddress","approve","pow","minus","toString","send","from","tx","useTokenSymbol","symbol","setSymbol","useTokenDecimal","decimal","setDecimal","decimals","useNFTBalance","ownedTokensIds","setOwnedTokensIds","isLoading","setIsLoading","getErc721Contract","tokensOfOwner","tokenIds","tokensData","map","tokenId","tokenURI","uri","fetch","data","json","metadata","Promise","all","then","values","useTokenBalanceFromChain","chainId","getWeb3NoAccountFromChain","useBurnedBalance","useCirculatingBalance","bowContract","getBowContract","totalSupply","tRes","res0","res1","res2","lockedBalance","plus","usePairsLength","pairsLength","setPairsLength","slowRefresh","getFactoryContract","allPairsLength","fetchPairsLength","useTokenBalance","TooltipContent","styled","div","theme","tooltip","background","text","zIndices","modal","Container","Tooltip","content","children","DropDownHeader","colors","ChainIcon","img","DropDownListContainer","dropdown","mediaQueries","sm","DropDownContainer","props","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","inputSecondary","Select","options","selectedValue","onChange","containerRef","useRef","dropdownRef","setIsOpen","width","height","containerSize","setContainerSize","toggling","onOptionClicked","option","current","offsetWidth","offsetHeight","ref","onClick","src","image","alt","label","color","TokenContainer","SuvTokenContainer","Title","Amount","Image","TicketsList","StyledButton","Button","spacing","TokenModal","serverData","setSelectedToken","onDismiss","t","useTranslation","tokenBalances","setTokenBalance","fetchData","temp","index","length","originUnderlying","getBalanceBigNumber","toFormat","title","logoUrl","variant","rotate","keyframes","StyledPath","path","Icon","xmlns","fill","viewBox","cx","cy","r","transform","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Background","CardContainer","card","ButtonContainer","ThemeButton","active","Powered","ChainsContainer","md","ChainContainer","ChainTitle","isDark","ChainImg","CoinContainer","input","Input","UIKitInput","SubCoinContainer","CoinSelect","CoinSelected","DescContainer","SwapContainer","DescSubContainer","valid","min","StyledPage","Page","DescInfo","BalanceContainer","ButtonsContainer","InputContainer","StyledThemeButton","Bridge","useTheme","useAuth","login","logout","onPresentConnectModal","useWalletModal","validAmount","setValidAmount","isLargeThanMin","setIsLargeThanMin","isSmallThanMax","setIsSmallThanMax","txhash","setTxhash","bridgeAmount","setBridgeAmount","needApprove","setNeedApprove","chains","fromChain","setFromChain","toChain","setToChain","selectedToken","setServerData","router","tokenBalance","tokenBalanceTo","underlying","setHash","pending","setPending","routerContract","useAnyswapV5","onAnySwapOutUnderlying","anyToken","to","amount","toChainID","anySwapOutUnderlying","on","hash","result","useAnySwapOutUnderlying","useModal","onPresentChainModal","axios","get","response","msg","clearInterval","interval","setInterval","gt","lt","gte","MinimumSwap","lte","MaximumSwap","provider","window","ethereum","_chainId","parseInt","request","method","params","console","error","changeNetwork","headers","status","resultArray","Object","keys","personNamedIndex","tempServerData","i","destChains","push","originAddress","originAnyToken","handlePercetajeButtons","p","multipliedBy","onSendETH","getMultifyBigNumber","dp","Banner","mobileSrc","value","Swap","maxLength","type","placeholder","e","target","className","style","display","MinimumSwapFee","BigValueThreshold"],"mappings":"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","file":"static/js/35.024e5950.chunk.js","sourcesContent":["import { useEffect, useState, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getBowContract, getErc721Contract, getFactoryContract } from 'utils/contractHelpers'\r\nimport { getWeb3NoAccountFromChain } from 'utils/web3'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport const useETHBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await web3.eth.getBalance(account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useWcoreBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokens.wcore.address[1116], web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTokenAllowance = (tokenAddress: string, targetAddress: string) => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.allowance(account, targetAddress).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && targetAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, targetAddress])\r\n\r\n  return allowance\r\n}\r\n\r\nexport const useApprove = () => {\r\n  const [approvePending, setApprovePending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n\r\n  const handleApprove = useCallback(\r\n    async (targetAddress: string, contractAddress: string) => {\r\n      try {\r\n        setApprovePending(true)\r\n        const contract = getBep20Contract(contractAddress, web3)\r\n        const tx = await contract.methods\r\n          .approve(targetAddress, new BigNumber(2).pow(256).minus(1).toString(10))\r\n          .send({ from: account })\r\n        setApprovePending(false)\r\n        return tx\r\n      } catch (e) {\r\n        setApprovePending(false)\r\n        return false\r\n      }\r\n    },\r\n    [web3, account],\r\n  )\r\n\r\n  return { onApprove: handleApprove, approvePending }\r\n}\r\n\r\nexport const useTokenSymbol = (tokenAddress: string) => {\r\n  const [symbol, setSymbol] = useState('')\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.symbol().call()\r\n      setSymbol(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return symbol\r\n}\r\n\r\nexport const useTokenDecimal = (tokenAddress: string) => {\r\n  const [decimal, setDecimal] = useState(0)\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.decimals().call()\r\n      setDecimal(res)\r\n    }\r\n\r\n    if (tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [tokenAddress, web3, fastRefresh])\r\n\r\n  return decimal\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useNFTBalance = (tokenAddress: string) => {\r\n  const [ownedTokensIds, setOwnedTokensIds] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      setIsLoading(true)\r\n      const contract = getErc721Contract(tokenAddress, web3)\r\n      const tokenIds = await contract.methods.tokensOfOwner(account).call()\r\n      const tokensData = tokenIds.map(async (tokenId) => {\r\n        const uri = await contract.methods.tokenURI(tokenId).call()\r\n        const data = await fetch(uri)\r\n        const metadata = await data.json()\r\n        return { tokenId, ...metadata }\r\n      })\r\n      Promise.all(tokensData).then((values) => setOwnedTokensIds(values))\r\n      setIsLoading(false)\r\n    }\r\n\r\n    if (account && tokenAddress) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return { isLoading, ownedTokensIds }\r\n}\r\n\r\nexport const useTokenBalanceFromChain = (tokenAddress: string, chainId: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = getWeb3NoAccountFromChain(chainId)\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && tokenAddress && chainId) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh, chainId])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const bowContract = getBowContract()\r\n      const supply = await bowContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useCirculatingBalance = () => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { fastRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const bowContract = getBowContract()\r\n      const [tRes, res0, res1, res2] = await Promise.all([\r\n        bowContract.methods.totalSupply().call(),\r\n        bowContract.methods.balanceOf('0x48Db2BD42B1F8B315Ab86C24d29C43fCDa99e984').call(), // deployer\r\n        bowContract.methods.balanceOf('0x7bf76646fbe70b13b72b0b46284f747eec5d0181').call(), // trade mining\r\n        bowContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call(), // burn address\r\n      ])\r\n      const lockedBalance = new BigNumber(res0).plus(res1).plus(res2)\r\n      setBalance(new BigNumber(tRes).minus(lockedBalance))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const usePairsLength = () => {\r\n  const [pairsLength, setPairsLength] = useState(0)\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchPairsLength = async () => {\r\n      const contract = getFactoryContract(web3)\r\n      const res = await contract.methods.allPairsLength().call()\r\n      setPairsLength(res)\r\n    }\r\n\r\n    fetchPairsLength()\r\n  }, [web3, slowRefresh])\r\n\r\n  return pairsLength\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface TooltipProps {\r\n  content: React.ReactNode\r\n}\r\n\r\nconst TooltipContent = styled.div`\r\n  background: ${({ theme }) => theme.tooltip.background};\r\n  padding: 16px;\r\n  border-radius: 16px;\r\n  color: ${({ theme }) => theme.tooltip.text};\r\n  width: max-content;\r\n  display: none;\r\n  padding: 16px;\r\n  max-height: 500px;\r\n  z-index: ${({ theme }) => theme.zIndices.modal};\r\n  position: absolute;\r\n  bottom: calc(100% + 16px);\r\n  transform: translate(34px, 0);\r\n  right: 0;\r\n  max-width: 250px;\r\n\r\n  &:after {\r\n    content: '';\r\n    display: block;\r\n    width: 0;\r\n    height: 0;\r\n    border-left: 10px solid transparent;\r\n    border-right: 10px solid transparent;\r\n    border-top: 10px solid ${({ theme }) => theme.tooltip.background};\r\n    bottom: 0;\r\n    position: absolute;\r\n    transform: translate(-34px, 9px);\r\n    right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n\r\n  &:hover ${TooltipContent}, &:focus-within ${TooltipContent} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Tooltip: React.FunctionComponent<TooltipProps> = ({ content, children }) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n      <TooltipContent>{content}</TooltipContent>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Tooltip\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon } from 'archerswap-uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 52px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 20px;\r\n  border: 1px solid #3960c1;\r\n  box-sizing: border-box;\r\n  border-radius: 8px;\r\n  transition: border-radius 0.15s;\r\n  & h4 {\r\n    user-select: none;\r\n    padding-left: 13px;\r\n    padding-right: 43px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n`\r\nconst ChainIcon = styled.img`\r\n  height: 20px;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  width: 100%;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n    @media (max-width: 767px) {\r\n      min-width: 60px;\r\n    }\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  position: relative;\r\n  border-radius: 8px;\r\n  height: 52px;\r\n  min-width: 136px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid 1px solid #3960c1;\r\n        box-sizing: border-box;\r\n        border-radius: 8px 8px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid #3960c1;\r\n        box-sizing: border-box;\r\n        border-top-width: 0;\r\n        border-radius: 0 0 8px 8px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  & h4 {\r\n    user-select: none;\r\n    padding-left: 18px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: string\r\n  chainId: string\r\n  image: string\r\n}\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  selectedValue: OptionProps\r\n  onChange: (option: OptionProps) => void\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, selectedValue, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = () => setIsOpen(!isOpen)\r\n\r\n  const onOptionClicked = (option: OptionProps) => () => {\r\n    onChange(option)\r\n    setIsOpen(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <ChainIcon src={selectedValue.image} alt=\"from\" />\r\n          <h4>{selectedValue.label}</h4>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option) =>\r\n            option.label !== selectedValue.label ? (\r\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\r\n                <ChainIcon src={option.image} alt=\"from\" />\r\n                <h4>{option.label}</h4>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal } from 'archerswap-uikit'\r\nimport styled from 'styled-components'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { getBalanceBigNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface UserTicketsModalProps {\r\n  serverData: any\r\n  setSelectedToken: (token: any) => void\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst TokenModal: React.FC<UserTicketsModalProps> = ({ serverData, setSelectedToken, onDismiss }) => {\r\n  const web3 = useWeb3()\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const [tokenBalances, setTokenBalance] = useState<string[]>([])\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const temp: string[] = []\r\n      for (let index = 0; index < serverData.length; index++) {\r\n        const contract = getBep20Contract(serverData[index].originUnderlying.address, web3)\r\n        // eslint-disable-next-line no-await-in-loop\r\n        const res = await contract.methods.balanceOf(account).call()\r\n        temp[index] = getBalanceBigNumber(new BigNumber(res), serverData[index].originUnderlying.decimals).toFormat(3)\r\n      }\r\n      setTokenBalance(temp)\r\n    }\r\n    if (web3 && account && serverData && serverData.length > 0) {\r\n      fetchData()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [web3, account, serverData])\r\n\r\n  return (\r\n    <Modal title={t('Select a token')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {serverData &&\r\n          serverData.map((data, index) => {\r\n            return (\r\n              <TokenContainer\r\n                key={index.toString()}\r\n                onClick={() => {\r\n                  setSelectedToken(data)\r\n                  onDismiss()\r\n                }}\r\n              >\r\n                <SuvTokenContainer>\r\n                  <Image src={data.logoUrl} alt=\"\" />\r\n                  <Title>{data.originUnderlying.symbol}</Title>\r\n                </SuvTokenContainer>\r\n                <Amount>{tokenBalances.length > index ? tokenBalances[index] : ''}</Amount>\r\n              </TokenContainer>\r\n            )\r\n          })}\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        Close\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TokenContainer = styled.div`\r\n  display: flex;\r\n  padding: 10px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #0000003f;\r\n  }\r\n`\r\nconst SuvTokenContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst Title = styled.div`\r\n  padding-left: 30px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\nconst Amount = styled.div`\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\nconst Image = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 15px;\r\n`\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default TokenModal\r\n","import React from 'react'\r\n\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  0% {\r\n    transform: matrix(1.00,0.00,0.00,1.00,0,0);\r\n  }\r\n\r\n  1%{\r\n    transform: matrix(0.8,0.00,0.00,1.00,0,0);\r\n  }\r\n\r\n  2% {\r\n    transform:matrix(1.1,0.00,0.00,1.00,0,0);\r\n  }\r\n\r\n  3% {\r\n    transform: matrix(0.90,0.00,0.00,1.00,0,0);\r\n  }\r\n\r\n  4%{\r\n    transform: matrix(1.00,0.00,0.00,1.00,0,0);\r\n  }\r\n`\r\n\r\nconst StyledPath = styled.path`\r\n  width: 100%;\r\n  animation: ${rotate} 10s linear infinite;\r\n`\r\n\r\nfunction Icon() {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" fill=\"none\" viewBox=\"0 0 46 46\">\r\n      <circle cx=\"23\" cy=\"23\" r=\"23\" fill=\"#E7F9F7\" transform=\"rotate(-90 23 23)\" />\r\n      <StyledPath\r\n        stroke=\"#3960C1\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"2\"\r\n        d=\"M15 22.59h15.908M27.5 19.182l3.408 3.409L27.5 26\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Icon\r\n","/* eslint-disable no-nested-ternary */\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport styled from 'styled-components'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nimport Page from 'components/layout/Page'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceBigNumber, getMultifyBigNumber } from 'utils/formatBalance'\r\nimport useTokenBalance, { useTokenAllowance, useApprove, useTokenBalanceFromChain } from 'hooks/useTokenBalance'\r\nimport { useAnySwapOutUnderlying } from 'hooks/useAnyswapV5Router'\r\nimport { HelpIcon, useWalletModal, Input as UIKitInput, useModal, Button as ThemeButton } from 'archerswap-uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport Banner from 'components/Banner'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Select, { OptionProps } from 'components/Bridge/Select/Select'\r\nimport TokenModal from 'components/Bridge/TokenModal'\r\nimport SwapIcon from '../../components/Svg/Swap'\r\nimport 'react-multi-carousel/lib/styles.css'\r\nimport Tooltip from '../Farms/components/Tooltip/Tooltip'\r\nimport chains from './chain.json'\r\n\r\nconst Background = styled.div<any>`\r\n  width: 100%;\r\n`\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`\r\nconst CardContainer = styled.div`\r\n  background: ${({ theme }) => theme.colors.card};\r\n  box-shadow: 0px 4px 10px rgba(105, 105, 105, 0.15);\r\n  border-radius: 16px;\r\n  max-width: 600px;\r\n  width: 100%;\r\n  margin: 15px 0px;\r\n  padding: 30px 40px;\r\n`\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 30px;\r\n`\r\nconst Button = styled(ThemeButton)<{ active?: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 52px;\r\n  border-radius: 8px;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  cursor: ${(props) => (props.active ? 'pointer' : 'not-allowed')};\r\n`\r\nconst Powered = styled.div`\r\n  text-align: center;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  color: #999999;\r\n`\r\n\r\nconst ChainsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex-direction: row;\r\n  }\r\n`\r\nconst ChainContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nconst ChainTitle = styled.div<any>`\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  text-align: center;\r\n  color: ${({ isDark }) => (isDark ? '#fff' : '#2A4AA6')};\r\n`\r\nconst ChainImg = styled.img`\r\n  margin-top: 25px;\r\n  margin-bottom: 31px;\r\n  @media (max-width: 767px) {\r\n    width: 50px;\r\n  }\r\n`\r\nconst CoinContainer = styled.div`\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 7px;\r\n  margin-top: 24px;\r\n  padding: 16px;\r\n  & .balance {\r\n    text-align: right;\r\n  }\r\n`\r\nconst Input = styled(UIKitInput)`\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  ::-webkit-outer-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n  box-shadow: none;\r\n  border: 0px solid;\r\n  background: transparent;\r\n  text-align: right;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  width: 100%;\r\n  margin-right: -20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  outline: none;\r\n  :focus-visible {\r\n    border: none;\r\n  }\r\n`\r\nconst SubCoinContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nconst CoinSelect = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 48px;\r\n  background: #efefef;\r\n  cursor: pointer;\r\n  border-radius: 8px;\r\n  gap: 16px;\r\n  max-width: 200px;\r\n  padding: 16px;\r\n`\r\nconst CoinSelected = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 200px;\r\n  gap: 5px;\r\n  height: 48px;\r\n  left: 599px;\r\n  top: 640px;\r\n  background: #efefef;\r\n  cursor: pointer;\r\n  border-radius: 8px;\r\n  & img {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    gap: 16px;\r\n  }\r\n`\r\nconst DescContainer = styled.div`\r\n  padding: 24px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n`\r\nconst SwapContainer = styled.div`\r\n  max-width: 46px;\r\n  transform: rotate(90deg);\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    transform: none;\r\n  }\r\n`\r\nconst DescSubContainer = styled.div<{ valid: boolean; min?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  color: ${({ valid, min }) => (valid ? '#000' : min ? '#2A4AA6' : '#F00')};\r\n`\r\nconst StyledPage = styled(Page)`\r\n  min-height: calc(100vh - 300px);\r\n`\r\nconst DescInfo = styled.div`\r\n  color: rgba(153, 153, 153, 1);\r\n`\r\nconst BalanceContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 300px;\r\n  margin-left: auto;\r\n  margin-bottom: 4px;\r\n`\r\n\r\nconst ButtonsContainer = styled.div`\r\n  gap: 10px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 24px;\r\n  margin-top: 24px;\r\n  flex-wrap: wrap;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    gap: 12px;\r\n  }\r\n`\r\nconst InputContainer = styled.div`\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  width: 100%;\r\n`\r\nconst StyledThemeButton = styled(ThemeButton)`\r\n  height: 30px;\r\n  padding: 0 8px;\r\n  background-color: rgba(231, 249, 247, 1);\r\n  color: rgba(5, 94, 86, 1);\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding: 0 21px;\r\n  }\r\n`\r\n\r\nconst Bridge: React.FC = () => {\r\n  const { isDark } = useTheme()\r\n  const { t } = useTranslation()\r\n\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  const { account, chainId } = useWeb3React()\r\n  const { onApprove, approvePending } = useApprove()\r\n\r\n  const [validAmount, setValidAmount] = useState<boolean>(true)\r\n  const [isLargeThanMin, setIsLargeThanMin] = useState<boolean>(false)\r\n  const [isSmallThanMax, setIsSmallThanMax] = useState<boolean>(false)\r\n\r\n  const [txhash, setTxhash] = useState<any>()\r\n  const [bridgeAmount, setBridgeAmount] = useState<string>()\r\n  const [needApprove, setNeedApprove] = useState<boolean>(false)\r\n\r\n  const [fromChain, setFromChain] = useState<OptionProps>(chains[0])\r\n  const [toChain, setToChain] = useState<OptionProps>(chains[1])\r\n\r\n  const [selectedToken, setSelectedToken] = useState<any>()\r\n  const [serverData, setServerData] = useState<any[]>()\r\n\r\n  const allowance = useTokenAllowance(selectedToken?.originUnderlying.address, selectedToken?.router)\r\n  const tokenBalance = useTokenBalance(selectedToken?.originUnderlying.address)\r\n  const tokenBalanceTo = useTokenBalanceFromChain(selectedToken?.underlying.address, toChain.chainId)\r\n\r\n  const { onAnySwapOutUnderlying, pending } = useAnySwapOutUnderlying(selectedToken?.router, setTxhash)\r\n\r\n  const [onPresentChainModal] = useModal(<TokenModal serverData={serverData} setSelectedToken={setSelectedToken} />)\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (txhash) {\r\n      axios.get(`https://bridgeapi.anyswap.exchange/v2/history/details?params=${txhash}`).then((response: any) => {\r\n        if (response.data.msg === 'Success') {\r\n          clearInterval(interval)\r\n          setTxhash(null)\r\n        }\r\n      })\r\n      const interval = setInterval(async () => {\r\n        axios.get(`https://bridgeapi.anyswap.exchange/v2/history/details?params=${txhash}`).then((response: any) => {\r\n          if (response.data.msg === 'Success') {\r\n            clearInterval(interval)\r\n            setTxhash(null)\r\n          }\r\n        })\r\n      }, 1000)\r\n      return () => clearInterval(interval)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [txhash])\r\n\r\n  useEffect(() => {\r\n    if (new BigNumber(bridgeAmount).gt(new BigNumber(0)) && allowance.lt(new BigNumber(bridgeAmount))) {\r\n      setNeedApprove(true)\r\n    } else {\r\n      setNeedApprove(false)\r\n    }\r\n  }, [allowance, bridgeAmount])\r\n\r\n  useEffect(() => {\r\n    if (new BigNumber(bridgeAmount).gt(0) && tokenBalance.gte(new BigNumber(bridgeAmount))) {\r\n      setValidAmount(true)\r\n    } else {\r\n      setValidAmount(false)\r\n    }\r\n  }, [tokenBalance, bridgeAmount])\r\n\r\n  useEffect(() => {\r\n    if (selectedToken && bridgeAmount) {\r\n      if (new BigNumber(bridgeAmount).gte(new BigNumber(selectedToken.MinimumSwap))) {\r\n        setIsLargeThanMin(true)\r\n      } else {\r\n        setIsLargeThanMin(false)\r\n      }\r\n      if (new BigNumber(bridgeAmount).lte(new BigNumber(selectedToken.MaximumSwap))) {\r\n        setIsSmallThanMax(true)\r\n      } else {\r\n        setIsSmallThanMax(false)\r\n      }\r\n    }\r\n  }, [bridgeAmount, selectedToken])\r\n\r\n  useEffect(() => {\r\n    const changeNetwork = async () => {\r\n      const provider = (window as WindowChain).ethereum\r\n      if (provider) {\r\n        const _chainId = parseInt(fromChain.chainId, 10)\r\n        try {\r\n          await provider.request({\r\n            method: 'wallet_switchEthereumChain',\r\n            params: [\r\n              {\r\n                chainId: `0x${_chainId.toString(16)}`,\r\n              },\r\n            ],\r\n          })\r\n          // await provider.request({\r\n          //   method: 'wallet_addEthereumChain',\r\n          //   params: [\r\n          //     {\r\n          //       chainId: `0x${chainId.toString(16)}`,\r\n          //       rpcUrls: [fromChain.rpc],\r\n          //     },\r\n          //   ],\r\n          // })\r\n          return true\r\n        } catch (error) {\r\n          console.error(error)\r\n          return false\r\n        }\r\n      } else {\r\n        console.error(\"Can't setup the Core Chain on metamask because window.ethereum is undefined\")\r\n        return false\r\n      }\r\n    }\r\n\r\n    changeNetwork()\r\n  }, [fromChain])\r\n\r\n  useEffect(() => {\r\n    if (toChain) {\r\n      const fetchData = async () => {\r\n        const response = await axios.get<any>(\r\n          `https://bridgeapi.anyswap.exchange/v3/serverinfoV3?chainId=${fromChain.chainId}&version=STABLEV3`,\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          },\r\n        )\r\n\r\n        if (response && response.status) {\r\n          const resultArray: any[] = Object.keys(response.data).map((personNamedIndex) => {\r\n            const person = response.data[personNamedIndex]\r\n            // do something with person\r\n            return person\r\n          })\r\n\r\n          const tempServerData: any[] = []\r\n          for (let i = 0; i < resultArray.length; i++) {\r\n            if (\r\n              resultArray[i].destChains[toChain.chainId] &&\r\n              resultArray[i].destChains[toChain.chainId].underlying &&\r\n              resultArray[i].underlying\r\n            ) {\r\n              tempServerData.push({\r\n                ...resultArray[i].destChains[toChain.chainId],\r\n                router: resultArray[i].router,\r\n                logoUrl: resultArray[i].logoUrl,\r\n                originAddress: resultArray[i].address,\r\n                originUnderlying: resultArray[i].underlying,\r\n                originAnyToken: resultArray[i].anyToken,\r\n              })\r\n            }\r\n          }\r\n          setServerData(tempServerData)\r\n        }\r\n      }\r\n\r\n      fetchData()\r\n    }\r\n  }, [toChain, fromChain])\r\n\r\n  const handlePercetajeButtons = (p: number) => {\r\n    setBridgeAmount(\r\n      getBalanceBigNumber(\r\n        tokenBalance.multipliedBy(new BigNumber(p)),\r\n        selectedToken.originUnderlying.decimals,\r\n      ).toString(),\r\n    )\r\n  }\r\n\r\n  const onSendETH = async () => {\r\n    const amount: BigNumber = getMultifyBigNumber(new BigNumber(bridgeAmount), selectedToken.originUnderlying.decimals)\r\n\r\n    if (!selectedToken || bridgeAmount === '' || amount.gt(tokenBalance)) {\r\n      return\r\n    }\r\n    // console.log('Send to router ============>')\r\n    // console.log('Router contract: ', selectedToken.originAnyToken.address)\r\n    // console.log('Amount: ', amount.dp(0).toString(10))\r\n    // console.log('From -> to: ', fromChain.label, toChain.label)\r\n    onAnySwapOutUnderlying(selectedToken.originAnyToken.address, account, amount.dp(0).toString(10), toChain.chainId)\r\n  }\r\n\r\n  return (\r\n    <Background isDark={isDark}>\r\n      <Banner\r\n        src=\"/images/assets/banners/bridge_banner.png\"\r\n        mobileSrc=\"/images/assets/banners/mobile_bridge_banner.png\"\r\n        alt=\"bridge_banner\"\r\n        title=\"Bridge\"\r\n        text=\"Bridge your tokens with no additional fees\"\r\n      />\r\n      <StyledPage>\r\n        <Container>\r\n          <CardContainer>\r\n            <ChainsContainer>\r\n              <ChainContainer>\r\n                <ChainTitle isDark={isDark}>From Chain</ChainTitle>\r\n                <ChainImg src={fromChain.image} alt=\"from\" />\r\n                <Select\r\n                  options={chains}\r\n                  selectedValue={fromChain}\r\n                  onChange={(value) => {\r\n                    setBridgeAmount('0')\r\n                    setSelectedToken(null)\r\n                    if (value === toChain) {\r\n                      setToChain(fromChain)\r\n                    }\r\n                    setFromChain(value)\r\n                  }}\r\n                />\r\n              </ChainContainer>\r\n              <SwapContainer>\r\n                <SwapIcon />\r\n              </SwapContainer>\r\n              <ChainContainer>\r\n                <ChainTitle isDark={isDark}>To Chain</ChainTitle>\r\n                <ChainImg src={toChain.image} alt=\"from\" />\r\n                <Select\r\n                  options={chains}\r\n                  selectedValue={toChain}\r\n                  onChange={(value) => {\r\n                    setBridgeAmount('0')\r\n                    setSelectedToken(null)\r\n                    if (value === fromChain) {\r\n                      setFromChain(toChain)\r\n                    }\r\n                    setToChain(value)\r\n                  }}\r\n                />\r\n              </ChainContainer>\r\n            </ChainsContainer>\r\n            <CoinContainer>\r\n              <SubCoinContainer>\r\n                {selectedToken ? (\r\n                  <CoinSelected\r\n                    onClick={() => {\r\n                      if (chainId.toString() === fromChain.chainId) {\r\n                        onPresentChainModal()\r\n                      }\r\n                    }}\r\n                  >\r\n                    <img src={selectedToken.logoUrl} alt=\"dwon\" />\r\n                    <div>{selectedToken.originUnderlying.symbol}</div>\r\n                  </CoinSelected>\r\n                ) : (\r\n                  <CoinSelect\r\n                    onClick={() => {\r\n                      if (chainId && chainId.toString() === fromChain.chainId) {\r\n                        onPresentChainModal()\r\n                      }\r\n                    }}\r\n                  >\r\n                    <p>Select a currency</p>\r\n                    <img src=\"/images/assets/icon/down.png\" alt=\"down\" />\r\n                  </CoinSelect>\r\n                )}\r\n                <InputContainer>\r\n                  <Input\r\n                    value={bridgeAmount}\r\n                    maxLength={18}\r\n                    type=\"number\"\r\n                    placeholder=\"0.0\"\r\n                    onChange={(e: any) => {\r\n                      const { value } = e.target\r\n                      setBridgeAmount(value)\r\n                    }}\r\n                  />\r\n                </InputContainer>\r\n              </SubCoinContainer>\r\n\r\n              {selectedToken && (\r\n                <div>\r\n                  <ButtonsContainer>\r\n                    <StyledThemeButton\r\n                      variant=\"tertiary\"\r\n                      onClick={() => {\r\n                        handlePercetajeButtons(0.25)\r\n                      }}\r\n                    >\r\n                      25%\r\n                    </StyledThemeButton>\r\n                    <StyledThemeButton\r\n                      variant=\"tertiary\"\r\n                      onClick={() => {\r\n                        handlePercetajeButtons(0.5)\r\n                      }}\r\n                    >\r\n                      50%\r\n                    </StyledThemeButton>\r\n                    <StyledThemeButton\r\n                      variant=\"tertiary\"\r\n                      onClick={() => {\r\n                        handlePercetajeButtons(0.75)\r\n                      }}\r\n                    >\r\n                      75%\r\n                    </StyledThemeButton>\r\n                    <StyledThemeButton\r\n                      variant=\"tertiary\"\r\n                      onClick={() => {\r\n                        handlePercetajeButtons(1)\r\n                      }}\r\n                    >\r\n                      100%\r\n                    </StyledThemeButton>\r\n                  </ButtonsContainer>\r\n                  <BalanceContainer className=\"balance\">\r\n                    <p>Balance on {fromChain.label}: </p>\r\n                    <p>{getBalanceBigNumber(tokenBalance, selectedToken.originUnderlying.decimals).toFormat(3)}</p>\r\n                  </BalanceContainer>\r\n                  <BalanceContainer className=\"balance\">\r\n                    <p>Balance on {toChain.label}: </p>\r\n                    <p>{getBalanceBigNumber(tokenBalanceTo, selectedToken.underlying.decimals).toFormat(3)}</p>\r\n                  </BalanceContainer>\r\n                </div>\r\n              )}\r\n            </CoinContainer>\r\n\r\n            <ButtonContainer>\r\n              {!account ? (\r\n                <Button\r\n                  active\r\n                  onClick={() => {\r\n                    onPresentConnectModal()\r\n                  }}\r\n                >\r\n                  {t('Connect Wallet')}\r\n                </Button>\r\n              ) : needApprove ? (\r\n                <Button\r\n                  active={!approvePending && selectedToken}\r\n                  variant={selectedToken ? 'primary' : 'disabled'}\r\n                  onClick={() => {\r\n                    if (selectedToken) {\r\n                      onApprove(selectedToken.router, selectedToken.originUnderlying.address)\r\n                    }\r\n                  }}\r\n                >\r\n                  {approvePending ? 'Pending...' : 'Approve'}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  active={validAmount && !!selectedToken && isLargeThanMin && isSmallThanMax}\r\n                  onClick={() => {\r\n                    if (validAmount && !!selectedToken && isLargeThanMin && isSmallThanMax) {\r\n                      onSendETH()\r\n                    }\r\n                  }}\r\n                  variant={validAmount && !!selectedToken && isLargeThanMin && isSmallThanMax ? 'primary' : 'disabled'}\r\n                >\r\n                  {pending ? 'Pending...' : 'Confirm'}\r\n                </Button>\r\n              )}\r\n            </ButtonContainer>\r\n            <Powered>Powered by Multichain Network</Powered>\r\n            <div />\r\n          </CardContainer>\r\n          {selectedToken && (\r\n            <DescContainer>\r\n              {/* <DescSubContainer\r\n                  valid={isLargeThanMin}\r\n                >\r\n                  <div>Current Bridgeable Range</div>\r\n                  <div>\r\n                    {new BigNumber(selectedToken.MinimumSwap).toFormat(3)}-Pool Balance {selectedToken.underlying.symbol}\r\n                  </div>\r\n                </DescSubContainer> */}\r\n              <DescSubContainer valid={isSmallThanMax}>\r\n                <div>Max Bridge Amount</div>\r\n                <div>\r\n                  {new BigNumber(selectedToken.MaximumSwap).toFormat(3)} {selectedToken.originUnderlying.symbol}\r\n                </div>\r\n              </DescSubContainer>\r\n              <DescSubContainer valid={isLargeThanMin} min>\r\n                <div>Min Bridge Amount</div>\r\n                <div>\r\n                  {new BigNumber(selectedToken.MinimumSwap).gte(0.001)\r\n                    ? new BigNumber(selectedToken.MinimumSwap).toFormat(3)\r\n                    : new BigNumber(selectedToken.MinimumSwap).toFormat(4)}{' '}\r\n                  {selectedToken.originUnderlying.symbol}\r\n                </div>\r\n              </DescSubContainer>\r\n              <DescSubContainer valid>\r\n                <div style={{ display: 'flex' }}>\r\n                  <div>{'Minimum Fee '}</div>\r\n                  <Tooltip\r\n                    content={`Fee of 0.001 with a minimum fee of ${selectedToken.originUnderlying.symbol} and a maximum fee of 1,000 ${selectedToken.originUnderlying.symbol}. The fee is charged by Multichain, ArcherSwap charges no additional fee.`}\r\n                  >\r\n                    <HelpIcon color=\"textSubtle\" />\r\n                  </Tooltip>\r\n                </div>\r\n                <div>\r\n                  {new BigNumber(selectedToken.MinimumSwapFee).gte(0.001)\r\n                    ? new BigNumber(selectedToken.MinimumSwapFee).toFormat(3)\r\n                    : new BigNumber(selectedToken.MinimumSwapFee).toFormat(5)}{' '}\r\n                  {selectedToken.originUnderlying.symbol}\r\n                </div>\r\n              </DescSubContainer>\r\n              <DescSubContainer valid>\r\n                <DescInfo>\r\n                  Amounts greater than {new BigNumber(selectedToken.BigValueThreshold).toFormat(0)}{' '}\r\n                  {selectedToken.originUnderlying.symbol} could take up to 12 hours\r\n                </DescInfo>\r\n              </DescSubContainer>\r\n            </DescContainer>\r\n          )}\r\n        </Container>\r\n      </StyledPage>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default Bridge\r\n","import { useState, useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\n// import BigNumber from 'bignumber.js'\r\nimport { useAnyswapV5 } from './useContract'\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const useAnySwapOutUnderlying = (router: string, setHash: (hash: string) => void) => {\r\n  const [pending, setPending] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const routerContract = useAnyswapV5(router)\r\n\r\n  const anySwapOutUnderlying = useCallback(\r\n    async (anyToken: string, to: string, amount: string, toChainID: string) => {\r\n      try {\r\n        setPending(true)\r\n        const tx = await routerContract.methods\r\n          .anySwapOutUnderlying(anyToken, to, amount, toChainID)\r\n          .send({ from: account })\r\n          .on('error', () => {\r\n            setPending(false)\r\n            return null\r\n          })\r\n          .on('transactionHash', (hash) => {\r\n            setHash(hash)\r\n            return hash\r\n          })\r\n          .on('receipt', (result) => {\r\n            setPending(false)\r\n            return result\r\n          })\r\n        return tx\r\n      } catch (e) {\r\n        setPending(false)\r\n        return false\r\n      }\r\n    },\r\n    [routerContract.methods, account, setHash],\r\n  )\r\n\r\n  return { onAnySwapOutUnderlying: anySwapOutUnderlying, pending }\r\n}\r\n"],"sourceRoot":""}